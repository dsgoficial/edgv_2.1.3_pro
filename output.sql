CREATE TABLE db_metadata(	 edgvversion varchar(50) NOT NULL DEFAULT 'EDGV 2.1.3 DSGTools',	 dbimplversion varchar(50) NOT NULL DEFAULT '2.00',	 CONSTRAINT edgvversioncheck CHECK (edgvversion = 'EDGV 2.1.3 DSGTools'));INSERT INTO db_metadata (edgvversion, dbimplversion) VALUES ('EDGV 2.1.3 DSGTools','2.00');CREATE TABLE dominios_tipounidusosust (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipounidusosust_pk PRIMARY KEY (code));INSERT INTO dominios_tipounidusosust (code,code_name) VALUES (1,'Área de Proteção Ambiental - APA');INSERT INTO dominios_tipounidusosust (code,code_name) VALUES (2,'Área de Relevante Interesse Ecológico - ARIE');INSERT INTO dominios_tipounidusosust (code,code_name) VALUES (3,'Floresta - FLO');INSERT INTO dominios_tipounidusosust (code,code_name) VALUES (4,'Reserva de Desenvolvimento Sustentável - RDS');INSERT INTO dominios_tipounidusosust (code,code_name) VALUES (5,'Reserva Extrativista - RESEX');INSERT INTO dominios_tipounidusosust (code,code_name) VALUES (6,'Reserva de Fauna - REFAU');INSERT INTO dominios_tipounidusosust (code,code_name) VALUES (7,'Reserva Particular do Patrimônio Natural - RPPN');CREATE TABLE dominios_isolada (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT isolada_pk PRIMARY KEY (code));INSERT INTO dominios_isolada (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_isolada (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_isolada (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_frigorifico (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT frigorifico_pk PRIMARY KEY (code));INSERT INTO dominios_frigorifico (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_frigorifico (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_frigorifico (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_espessalgas (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT espessalgas_pk PRIMARY KEY (code));INSERT INTO dominios_espessalgas (code,code_name) VALUES (1,'Finas');INSERT INTO dominios_espessalgas (code,code_name) VALUES (2,'Médias');INSERT INTO dominios_espessalgas (code,code_name) VALUES (3,'Grossas');CREATE TABLE dominios_trafego (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT trafego_pk PRIMARY KEY (code));INSERT INTO dominios_trafego (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_trafego (code,code_name) VALUES (1,'Permanente');INSERT INTO dominios_trafego (code,code_name) VALUES (2,'Periódico');CREATE TABLE dominios_bitola (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT bitola_pk PRIMARY KEY (code));INSERT INTO dominios_bitola (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_bitola (code,code_name) VALUES (1,'Métrica');INSERT INTO dominios_bitola (code,code_name) VALUES (2,'Internacional');INSERT INTO dominios_bitola (code,code_name) VALUES (3,'Larga');INSERT INTO dominios_bitola (code,code_name) VALUES (4,'Mista Métrica Internacional');INSERT INTO dominios_bitola (code,code_name) VALUES (5,'Mista Métrica Larga');INSERT INTO dominios_bitola (code,code_name) VALUES (6,'Mista Internacional Larga');CREATE TABLE dominios_emduto (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT emduto_pk PRIMARY KEY (code));INSERT INTO dominios_emduto (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_emduto (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_tipomarcolim (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipomarcolim_pk PRIMARY KEY (code));INSERT INTO dominios_tipomarcolim (code,code_name) VALUES (1,'Internacional');INSERT INTO dominios_tipomarcolim (code,code_name) VALUES (2,'Estadual');INSERT INTO dominios_tipomarcolim (code,code_name) VALUES (3,'Municipal');INSERT INTO dominios_tipomarcolim (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipopassagviad (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipopassagviad_pk PRIMARY KEY (code));INSERT INTO dominios_tipopassagviad (code,code_name) VALUES (5,'Passagem elevada');INSERT INTO dominios_tipopassagviad (code,code_name) VALUES (6,'Viaduto');CREATE TABLE dominios_finalidade_asb (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT finalidade_asb_pk PRIMARY KEY (code));INSERT INTO dominios_finalidade_asb (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_finalidade_asb (code,code_name) VALUES (2,'Tratamento');INSERT INTO dominios_finalidade_asb (code,code_name) VALUES (3,'Recalque');INSERT INTO dominios_finalidade_asb (code,code_name) VALUES (4,'Distribuição');INSERT INTO dominios_finalidade_asb (code,code_name) VALUES (8,'Armazenamento');CREATE TABLE dominios_mattransp (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT mattransp_pk PRIMARY KEY (code));INSERT INTO dominios_mattransp (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_mattransp (code,code_name) VALUES (1,'Água');INSERT INTO dominios_mattransp (code,code_name) VALUES (2,'Óleo');INSERT INTO dominios_mattransp (code,code_name) VALUES (3,'Petróleo');INSERT INTO dominios_mattransp (code,code_name) VALUES (4,'Nafta');INSERT INTO dominios_mattransp (code,code_name) VALUES (5,'Gás');INSERT INTO dominios_mattransp (code,code_name) VALUES (6,'Grãos');INSERT INTO dominios_mattransp (code,code_name) VALUES (7,'Minério');INSERT INTO dominios_mattransp (code,code_name) VALUES (8,'Efluentes');INSERT INTO dominios_mattransp (code,code_name) VALUES (9,'Esgoto');INSERT INTO dominios_mattransp (code,code_name) VALUES (29,'Gasolina');INSERT INTO dominios_mattransp (code,code_name) VALUES (30,'Álcool');INSERT INTO dominios_mattransp (code,code_name) VALUES (31,'Querosene');INSERT INTO dominios_mattransp (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoediflazer (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoediflazer_pk PRIMARY KEY (code));INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (1,'Estádio');INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (2,'Ginásio');INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (3,'Museu');INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (4,'Teatro');INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (5,'Anfiteatro');INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (6,'Cinema');INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (7,'Centro cultural');INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (8,'Plataforma de pesca');INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (9,'Chaminé');INSERT INTO dominios_tipoediflazer (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipopostofisc (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipopostofisc_pk PRIMARY KEY (code));INSERT INTO dominios_tipopostofisc (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipopostofisc (code,code_name) VALUES (10,'Tributação');INSERT INTO dominios_tipopostofisc (code,code_name) VALUES (11,'Fiscalização');INSERT INTO dominios_tipopostofisc (code,code_name) VALUES (98,'Mista');INSERT INTO dominios_tipopostofisc (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_referencialgrav (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT referencialgrav_pk PRIMARY KEY (code));INSERT INTO dominios_referencialgrav (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_referencialgrav (code,code_name) VALUES (1,'Postdam 1930');INSERT INTO dominios_referencialgrav (code,code_name) VALUES (2,'IGSN71');INSERT INTO dominios_referencialgrav (code,code_name) VALUES (3,'Absoluto');INSERT INTO dominios_referencialgrav (code,code_name) VALUES (4,'Local');INSERT INTO dominios_referencialgrav (code,code_name) VALUES (97,'Não Aplicável');CREATE TABLE dominios_tipoobst (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoobst_pk PRIMARY KEY (code));INSERT INTO dominios_tipoobst (code,code_name) VALUES (4,'Natural');INSERT INTO dominios_tipoobst (code,code_name) VALUES (5,'Artificial');CREATE TABLE dominios_tipoelemnat (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoelemnat_pk PRIMARY KEY (code));INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (1,'Serra');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (2,'Morro');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (3,'Montanha');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (4,'Chapada');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (5,'Maciço');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (6,'Planalto');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (7,'Planície');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (8,'Escarpa');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (9,'Península');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (10,'Ponta');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (11,'Cabo');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (12,'Praia');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (13,'Falésia');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (14,'Talude');INSERT INTO dominios_tipoelemnat (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_residuo (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT residuo_pk PRIMARY KEY (code));INSERT INTO dominios_residuo (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_residuo (code,code_name) VALUES (1,'Líquido');INSERT INTO dominios_residuo (code,code_name) VALUES (2,'Sólido');CREATE TABLE dominios_tipotorre (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipotorre_pk PRIMARY KEY (code));INSERT INTO dominios_tipotorre (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipotorre (code,code_name) VALUES (1,'Autoportante');INSERT INTO dominios_tipotorre (code,code_name) VALUES (2,'Estaiada');CREATE TABLE dominios_tipoedifmil (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifmil_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifmil (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifmil (code,code_name) VALUES (12,'Aquartelamento');INSERT INTO dominios_tipoedifmil (code,code_name) VALUES (13,'Campo de instrução');INSERT INTO dominios_tipoedifmil (code,code_name) VALUES (14,'Campo de tiro');INSERT INTO dominios_tipoedifmil (code,code_name) VALUES (15,'Base aérea');INSERT INTO dominios_tipoedifmil (code,code_name) VALUES (16,'Distrito naval');INSERT INTO dominios_tipoedifmil (code,code_name) VALUES (17,'Hotel de trânsito');INSERT INTO dominios_tipoedifmil (code,code_name) VALUES (18,'Delegacia serviço militar');INSERT INTO dominios_tipoedifmil (code,code_name) VALUES (19,'Posto');INSERT INTO dominios_tipoedifmil (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_modaluso (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT modaluso_pk PRIMARY KEY (code));INSERT INTO dominios_modaluso (code,code_name) VALUES (4,'Rodoviário');INSERT INTO dominios_modaluso (code,code_name) VALUES (5,'Ferroviário');INSERT INTO dominios_modaluso (code,code_name) VALUES (6,'Metroviário');INSERT INTO dominios_modaluso (code,code_name) VALUES (7,'Dutos');INSERT INTO dominios_modaluso (code,code_name) VALUES (8,'Rodoferroviário');INSERT INTO dominios_modaluso (code,code_name) VALUES (9,'Aeroportuário');INSERT INTO dominios_modaluso (code,code_name) VALUES (14,'Portuário');INSERT INTO dominios_modaluso (code,code_name) VALUES (98,'Misto');CREATE TABLE dominios_matconstr (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT matconstr_pk PRIMARY KEY (code));INSERT INTO dominios_matconstr (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_matconstr (code,code_name) VALUES (1,'Alvenaria');INSERT INTO dominios_matconstr (code,code_name) VALUES (2,'Concreto');INSERT INTO dominios_matconstr (code,code_name) VALUES (3,'Metal');INSERT INTO dominios_matconstr (code,code_name) VALUES (4,'Rocha');INSERT INTO dominios_matconstr (code,code_name) VALUES (5,'Madeira');INSERT INTO dominios_matconstr (code,code_name) VALUES (6,'Arame');INSERT INTO dominios_matconstr (code,code_name) VALUES (7,'Tela ou Alambrado');INSERT INTO dominios_matconstr (code,code_name) VALUES (8,'Cerca viva');INSERT INTO dominios_matconstr (code,code_name) VALUES (23,'Terra');INSERT INTO dominios_matconstr (code,code_name) VALUES (25,'Fibra ótica');INSERT INTO dominios_matconstr (code,code_name) VALUES (26,'Fio Metálico');INSERT INTO dominios_matconstr (code,code_name) VALUES (97,'Não Aplicável');INSERT INTO dominios_matconstr (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_situacaoespacial (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT situacaoespacial_pk PRIMARY KEY (code));INSERT INTO dominios_situacaoespacial (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_situacaoespacial (code,code_name) VALUES (12,'Adjacentes');INSERT INTO dominios_situacaoespacial (code,code_name) VALUES (13,'Superpostos');INSERT INTO dominios_situacaoespacial (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipodepsaneam (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipodepsaneam_pk PRIMARY KEY (code));INSERT INTO dominios_tipodepsaneam (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipodepsaneam (code,code_name) VALUES (1,'Tanque');INSERT INTO dominios_tipodepsaneam (code,code_name) VALUES (4,'Depósito de lixo');INSERT INTO dominios_tipodepsaneam (code,code_name) VALUES (5,'Aterro sanitário');INSERT INTO dominios_tipodepsaneam (code,code_name) VALUES (6,'Aterro controlado');INSERT INTO dominios_tipodepsaneam (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_terreno (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT terreno_pk PRIMARY KEY (code));INSERT INTO dominios_terreno (code,code_name) VALUES (1,'Seco');INSERT INTO dominios_terreno (code,code_name) VALUES (2,'Irrigado');INSERT INTO dominios_terreno (code,code_name) VALUES (3,'Inundado');CREATE TABLE dominios_tipotrechoferrov (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipotrechoferrov_pk PRIMARY KEY (code));INSERT INTO dominios_tipotrechoferrov (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipotrechoferrov (code,code_name) VALUES (5,'Bonde');INSERT INTO dominios_tipotrechoferrov (code,code_name) VALUES (6,'Aeromóvel');INSERT INTO dominios_tipotrechoferrov (code,code_name) VALUES (7,'Ferrovia');INSERT INTO dominios_tipotrechoferrov (code,code_name) VALUES (8,'Metrovia');CREATE TABLE dominios_depressao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT depressao_pk PRIMARY KEY (code));INSERT INTO dominios_depressao (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_depressao (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_tipocomplexoportuario (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocomplexoportuario_pk PRIMARY KEY (code));INSERT INTO dominios_tipocomplexoportuario (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipocomplexoportuario (code,code_name) VALUES (30,'Porto organizado');INSERT INTO dominios_tipocomplexoportuario (code,code_name) VALUES (31,'Instalação portuária');CREATE TABLE dominios_tipobrejopantano (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipobrejopantano_pk PRIMARY KEY (code));INSERT INTO dominios_tipobrejopantano (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipobrejopantano (code,code_name) VALUES (1,'Brejo');INSERT INTO dominios_tipobrejopantano (code,code_name) VALUES (2,'Pântano');CREATE TABLE dominios_tipodelimfis (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipodelimfis_pk PRIMARY KEY (code));INSERT INTO dominios_tipodelimfis (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipodelimfis (code,code_name) VALUES (1,'Cerca');INSERT INTO dominios_tipodelimfis (code,code_name) VALUES (2,'Muro');CREATE TABLE dominios_materialpredominante (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT materialpredominante_pk PRIMARY KEY (code));INSERT INTO dominios_materialpredominante (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (4,'Rocha');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (12,'Areia');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (13,'Areia Fina');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (14,'Lama');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (15,'Argila');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (16,'Lodo');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (18,'Cascalho');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (19,'Seixo');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (20,'Coral');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (21,'Concha');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (22,'Ervas Marinhas');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (24,'Saibro');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (50,'Pedra');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (97,'Não Aplicável');INSERT INTO dominios_materialpredominante (code,code_name) VALUES (98,'Misto');CREATE TABLE dominios_tipocomplexoaero (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocomplexoaero_pk PRIMARY KEY (code));INSERT INTO dominios_tipocomplexoaero (code,code_name) VALUES (23,'Aeródromo');INSERT INTO dominios_tipocomplexoaero (code,code_name) VALUES (24,'Aeroporto');INSERT INTO dominios_tipocomplexoaero (code,code_name) VALUES (25,'Heliporto');CREATE TABLE dominios_poderpublico (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT poderpublico_pk PRIMARY KEY (code));INSERT INTO dominios_poderpublico (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_poderpublico (code,code_name) VALUES (1,'Executivo');INSERT INTO dominios_poderpublico (code,code_name) VALUES (2,'Legislativo');INSERT INTO dominios_poderpublico (code,code_name) VALUES (3,'Judiciário');CREATE TABLE dominios_tipoassociado (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoassociado_pk PRIMARY KEY (code));INSERT INTO dominios_tipoassociado (code,code_name) VALUES (1,'Cidade');INSERT INTO dominios_tipoassociado (code,code_name) VALUES (4,'Vila');CREATE TABLE dominios_tipodivisaocnae (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipodivisaocnae_pk PRIMARY KEY (code));INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (1,'Agricultura Pecuária e Serviços Relacionados');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (2,'Silvicultura Exploração Florestal e Serviços Relacionados');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (5,'Pesca Aquicultura e Serviços Relacionados');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (10,'Extração de Carvão Mineral');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (11,'Extração de Petróleo e Serviços Relacionados');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (13,'Extração de Minerais Metálicos');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (14,'Extração de Minerais Não-Metálicos');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (15,'Fabricação Alimentícia e Bebidas');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (16,'Fabricação de Produtos do Fumo');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (17,'Fabricação de Produtos Têxteis');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (18,'Confecção de Artigos do Vestuário e Acessórios');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (19,'Preparação de couros e Fabricação de Artefatos de Couro Artigos de Viagem e Calçados');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (20,'Fabricação de produtos de Madeira e Celulose');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (21,'Fabricação de Celulose Papel e Produtos de Papel');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (22,'Edição Impressão e Reprodução de Gravações');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (23,'Fabricação de Coque Refino de Petróleo Elaboração de Combustíveis Nucleares e Produção de Álcool');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (24,'Fabricação de Produtos Químicos');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (25,'Fabricação de Artigos de Borracha e Material Plástico');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (26,'Fabricação de Produtos de Minerais Não-Metálicos');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (27,'Metalurgia Básica');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (28,'Fabricação de Produtos de Metal Exclusive Máquinas e Equipamentos');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (29,'Fabricação de Máquinas e Equipamentos');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (30,'Fabricação de Máquinas de Escritório e Equipamentos de Informática');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (31,'Fabricação de Máquinas Aparelhos e Materiais Elétricos');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (32,'Fabricação de Material Eletrônicode Aparelhos e Equipamentos de Comunicações');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (33,'Fabricação de Equipamentos de Instrumentação Médico-Hospitalares Instumentos de Precisão e Ópticos Equipamentos para Automação Industrial Cronômetros e Relógios');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (34,'Fabricação e Montagem de Veículos Automotores Reboques e Carrocerias');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (35,'Fabricação de Outros Equipamentos de Transporte');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (36,'Fabricação de Móveis e Industrias Diversas');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (37,'Reciclagem');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (45,'Construção');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (50,'Comércio e Reparação de Veículos Automotores e Motocicletas e Comércio a Varejo de Combustíveis.');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (51,'Comércio por Atacado e Representantes Comerciais. E agentes do comércio');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (52,'Comércio Varejista e Reparação de Objetos Pessoais e Domésticos.');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (55,'Alojamento e Alimentação');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (74,'Serviços Prestados Principalmente às Empresas (organizações).');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (92,'Atividades Recreativas Culturais e Desportivas');INSERT INTO dominios_tipodivisaocnae (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipooutlimofic (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipooutlimofic_pk PRIMARY KEY (code));INSERT INTO dominios_tipooutlimofic (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipooutlimofic (code,code_name) VALUES (1,'Mar territorial');INSERT INTO dominios_tipooutlimofic (code,code_name) VALUES (2,'Zona contígua');INSERT INTO dominios_tipooutlimofic (code,code_name) VALUES (3,'Zona econômica exclusiva');INSERT INTO dominios_tipooutlimofic (code,code_name) VALUES (4,'Lateral marítima');INSERT INTO dominios_tipooutlimofic (code,code_name) VALUES (5,'Faixa de fronteira');INSERT INTO dominios_tipooutlimofic (code,code_name) VALUES (6,'Plataforma continental jurídica');INSERT INTO dominios_tipooutlimofic (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoquebramolhe (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoquebramolhe_pk PRIMARY KEY (code));INSERT INTO dominios_tipoquebramolhe (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoquebramolhe (code,code_name) VALUES (1,'Quebramar');INSERT INTO dominios_tipoquebramolhe (code,code_name) VALUES (2,'Molhe');CREATE TABLE dominios_tipoedifsaneam (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifsaneam_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifsaneam (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifsaneam (code,code_name) VALUES (3,'Recalque');INSERT INTO dominios_tipoedifsaneam (code,code_name) VALUES (5,'Tratamento de esgoto');INSERT INTO dominios_tipoedifsaneam (code,code_name) VALUES (6,'Usina de reciclagem');INSERT INTO dominios_tipoedifsaneam (code,code_name) VALUES (7,'Incinerador');INSERT INTO dominios_tipoedifsaneam (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipocomplexolazer (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocomplexolazer_pk PRIMARY KEY (code));INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (1,'Complexo recreativo');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (2,'Clube');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (3,'Autódromo');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (4,'Parque de diversões');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (5,'Parque urbano');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (6,'Parque aquático');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (7,'Parque temático');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (8,'Hipódromo');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (9,'Hípica');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (10,'Estande de tiro');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (11,'Campo de golfe');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (12,'Parque de eventos culturais');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (13,'Camping');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (14,'Complexo desportivo');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (15,'Zoológico');INSERT INTO dominios_tipocomplexolazer (code,code_name) VALUES (16,'Jardim botânico');CREATE TABLE dominios_tiposinal (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tiposinal_pk PRIMARY KEY (code));INSERT INTO dominios_tiposinal (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tiposinal (code,code_name) VALUES (1,'Bóia luminosa');INSERT INTO dominios_tiposinal (code,code_name) VALUES (2,'Bóia cega');INSERT INTO dominios_tiposinal (code,code_name) VALUES (3,'Bóia de amarração');INSERT INTO dominios_tiposinal (code,code_name) VALUES (4,'Farol ou farolete');INSERT INTO dominios_tiposinal (code,code_name) VALUES (5,'Barca farol');INSERT INTO dominios_tiposinal (code,code_name) VALUES (6,'Sinalização de margem');CREATE TABLE dominios_classificacaoporte (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT classificacaoporte_pk PRIMARY KEY (code));INSERT INTO dominios_classificacaoporte (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_classificacaoporte (code,code_name) VALUES (1,'Arbórea');INSERT INTO dominios_classificacaoporte (code,code_name) VALUES (2,'Arbustiva');INSERT INTO dominios_classificacaoporte (code,code_name) VALUES (3,'Herbácea');INSERT INTO dominios_classificacaoporte (code,code_name) VALUES (4,'Rasteira');INSERT INTO dominios_classificacaoporte (code,code_name) VALUES (98,'Misto');CREATE TABLE dominios_navegabilidade (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT navegabilidade_pk PRIMARY KEY (code));INSERT INTO dominios_navegabilidade (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_navegabilidade (code,code_name) VALUES (1,'Navegável');INSERT INTO dominios_navegabilidade (code,code_name) VALUES (2,'Não navegável');CREATE TABLE dominios_qualidagua (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT qualidagua_pk PRIMARY KEY (code));INSERT INTO dominios_qualidagua (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_qualidagua (code,code_name) VALUES (1,'Potável');INSERT INTO dominios_qualidagua (code,code_name) VALUES (2,'Não potável');INSERT INTO dominios_qualidagua (code,code_name) VALUES (3,'Mineral');INSERT INTO dominios_qualidagua (code,code_name) VALUES (4,'Salobra');CREATE TABLE dominios_situacaoemagua (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT situacaoemagua_pk PRIMARY KEY (code));INSERT INTO dominios_situacaoemagua (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_situacaoemagua (code,code_name) VALUES (4,'Emerso');INSERT INTO dominios_situacaoemagua (code,code_name) VALUES (5,'Submerso');INSERT INTO dominios_situacaoemagua (code,code_name) VALUES (7,'Cobre e Descobre');CREATE TABLE dominios_ocorrenciaem (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT ocorrenciaem_pk PRIMARY KEY (code));INSERT INTO dominios_ocorrenciaem (code,code_name) VALUES (5,'Brejo ou Pântano');INSERT INTO dominios_ocorrenciaem (code,code_name) VALUES (6,'Caatinga');INSERT INTO dominios_ocorrenciaem (code,code_name) VALUES (7,'Estepe');INSERT INTO dominios_ocorrenciaem (code,code_name) VALUES (8,'Pastagem');INSERT INTO dominios_ocorrenciaem (code,code_name) VALUES (13,'Cerrado ou cerradão');INSERT INTO dominios_ocorrenciaem (code,code_name) VALUES (14,'Macega ou chavascal');INSERT INTO dominios_ocorrenciaem (code,code_name) VALUES (15,'Floresta');INSERT INTO dominios_ocorrenciaem (code,code_name) VALUES (19,'Campinarana');INSERT INTO dominios_ocorrenciaem (code,code_name) VALUES (96,'Não Identificado');CREATE TABLE dominios_modalidade (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT modalidade_pk PRIMARY KEY (code));INSERT INTO dominios_modalidade (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_modalidade (code,code_name) VALUES (1,'Radiocomunicação');INSERT INTO dominios_modalidade (code,code_name) VALUES (2,'Radiodifusão/som e imagem');INSERT INTO dominios_modalidade (code,code_name) VALUES (3,'Telefonia');INSERT INTO dominios_modalidade (code,code_name) VALUES (4,'Dados');INSERT INTO dominios_modalidade (code,code_name) VALUES (5,'Radiodifusão/som');INSERT INTO dominios_modalidade (code,code_name) VALUES (99,'Outras');CREATE TABLE dominios_tipoedifagropec (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifagropec_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifagropec (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifagropec (code,code_name) VALUES (12,'Sede operacional de fazenda');INSERT INTO dominios_tipoedifagropec (code,code_name) VALUES (13,'Aviário');INSERT INTO dominios_tipoedifagropec (code,code_name) VALUES (14,'Apiário');INSERT INTO dominios_tipoedifagropec (code,code_name) VALUES (15,'Viveiro de plantas');INSERT INTO dominios_tipoedifagropec (code,code_name) VALUES (16,'Viveiro para acquicultura');INSERT INTO dominios_tipoedifagropec (code,code_name) VALUES (17,'Pocilga');INSERT INTO dominios_tipoedifagropec (code,code_name) VALUES (18,'Curral');INSERT INTO dominios_tipoedifagropec (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipolimintramun (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipolimintramun_pk PRIMARY KEY (code));INSERT INTO dominios_tipolimintramun (code,code_name) VALUES (1,'Distrital');INSERT INTO dominios_tipolimintramun (code,code_name) VALUES (2,'Sub-distrital');INSERT INTO dominios_tipolimintramun (code,code_name) VALUES (3,'Perímetro urbano legal');INSERT INTO dominios_tipolimintramun (code,code_name) VALUES (4,'Região administrativa');INSERT INTO dominios_tipolimintramun (code,code_name) VALUES (5,'Bairro');CREATE TABLE dominios_tipousocaminhoaer (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipousocaminhoaer_pk PRIMARY KEY (code));INSERT INTO dominios_tipousocaminhoaer (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipousocaminhoaer (code,code_name) VALUES (21,'Passageiros');INSERT INTO dominios_tipousocaminhoaer (code,code_name) VALUES (22,'Cargas');INSERT INTO dominios_tipousocaminhoaer (code,code_name) VALUES (98,'Misto');CREATE TABLE dominios_tipoareaumida (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoareaumida_pk PRIMARY KEY (code));INSERT INTO dominios_tipoareaumida (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoareaumida (code,code_name) VALUES (3,'Lamacento');INSERT INTO dominios_tipoareaumida (code,code_name) VALUES (4,'Arenoso');CREATE TABLE dominios_destenergelet (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT destenergelet_pk PRIMARY KEY (code));INSERT INTO dominios_destenergelet (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_destenergelet (code,code_name) VALUES (1,'Auto-Produção de Energia (APE)');INSERT INTO dominios_destenergelet (code,code_name) VALUES (2,'Auto-Produção com Comercialização de Excedente (APE-COM)');INSERT INTO dominios_destenergelet (code,code_name) VALUES (3,'Comercialização de Energia (COM)');INSERT INTO dominios_destenergelet (code,code_name) VALUES (4,'Produção Independente de Energia (PIE)');INSERT INTO dominios_destenergelet (code,code_name) VALUES (5,'Serviço Público (SP)');CREATE TABLE dominios_relacionado_hid (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT relacionado_hid_pk PRIMARY KEY (code));INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (1,'Eclusa');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (2,'Barragem');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (3,'Comporta');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (4,'Queda d’água');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (5,'Corredeira');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (6,'Foz marítima');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (7,'Sumidouro');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (8,'Meandro abandonado');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (9,'Lago');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (10,'Lagoa');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (11,'Laguna');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (12,'Represa/ açude');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (13,'Entre trechos de drenagem');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (16,'Vertedouro');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (17,'Interrupção à Jusante');INSERT INTO dominios_relacionado_hid (code,code_name) VALUES (18,'Interrupção à Montante');CREATE TABLE dominios_procextracao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT procextracao_pk PRIMARY KEY (code));INSERT INTO dominios_procextracao (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_procextracao (code,code_name) VALUES (1,'Mecanizado');INSERT INTO dominios_procextracao (code,code_name) VALUES (2,'Manual');CREATE TABLE dominios_tipooutunidprot (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipooutunidprot_pk PRIMARY KEY (code));INSERT INTO dominios_tipooutunidprot (code,code_name) VALUES (1,'Área de preservação permanente');INSERT INTO dominios_tipooutunidprot (code,code_name) VALUES (2,'Reserva legal');INSERT INTO dominios_tipooutunidprot (code,code_name) VALUES (3,'Mosaico');INSERT INTO dominios_tipooutunidprot (code,code_name) VALUES (4,'Distrito florestal');INSERT INTO dominios_tipooutunidprot (code,code_name) VALUES (5,'Corredor ecológico');INSERT INTO dominios_tipooutunidprot (code,code_name) VALUES (6,'Floresta pública');INSERT INTO dominios_tipooutunidprot (code,code_name) VALUES (7,'Sítios RAMSAR');INSERT INTO dominios_tipooutunidprot (code,code_name) VALUES (8,'Sítios do patrimônio');INSERT INTO dominios_tipooutunidprot (code,code_name) VALUES (9,'Reserva da biosfera');CREATE TABLE dominios_tipoconteudo (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoconteudo_pk PRIMARY KEY (code));INSERT INTO dominios_tipoconteudo (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoconteudo (code,code_name) VALUES (1,'Insumo');INSERT INTO dominios_tipoconteudo (code,code_name) VALUES (2,'Produto');INSERT INTO dominios_tipoconteudo (code,code_name) VALUES (3,'Resíduo');CREATE TABLE dominios_tipoextmin (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoextmin_pk PRIMARY KEY (code));INSERT INTO dominios_tipoextmin (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoextmin (code,code_name) VALUES (1,'Poço');INSERT INTO dominios_tipoextmin (code,code_name) VALUES (4,'Mina');INSERT INTO dominios_tipoextmin (code,code_name) VALUES (5,'Garimpo');INSERT INTO dominios_tipoextmin (code,code_name) VALUES (6,'Salina');INSERT INTO dominios_tipoextmin (code,code_name) VALUES (7,'Pedreira');INSERT INTO dominios_tipoextmin (code,code_name) VALUES (8,'Ponto de Prospecção');INSERT INTO dominios_tipoextmin (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tiporef (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tiporef_pk PRIMARY KEY (code));INSERT INTO dominios_tiporef (code,code_name) VALUES (1,'Altimétrico');INSERT INTO dominios_tiporef (code,code_name) VALUES (2,'Planimétrico');INSERT INTO dominios_tiporef (code,code_name) VALUES (3,'Planialtimétrico');INSERT INTO dominios_tiporef (code,code_name) VALUES (4,'Gravimétrico');CREATE TABLE dominios_sigla (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT sigla_pk PRIMARY KEY (code));INSERT INTO dominios_sigla (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_sigla (code,code_name) VALUES (1,'AC');INSERT INTO dominios_sigla (code,code_name) VALUES (2,'AL');INSERT INTO dominios_sigla (code,code_name) VALUES (3,'AP');INSERT INTO dominios_sigla (code,code_name) VALUES (4,'AM');INSERT INTO dominios_sigla (code,code_name) VALUES (5,'BA');INSERT INTO dominios_sigla (code,code_name) VALUES (6,'CE');INSERT INTO dominios_sigla (code,code_name) VALUES (7,'DF');INSERT INTO dominios_sigla (code,code_name) VALUES (8,'ES');INSERT INTO dominios_sigla (code,code_name) VALUES (9,'GO');INSERT INTO dominios_sigla (code,code_name) VALUES (10,'MA');INSERT INTO dominios_sigla (code,code_name) VALUES (11,'MT');INSERT INTO dominios_sigla (code,code_name) VALUES (12,'MS');INSERT INTO dominios_sigla (code,code_name) VALUES (13,'MG');INSERT INTO dominios_sigla (code,code_name) VALUES (14,'PA');INSERT INTO dominios_sigla (code,code_name) VALUES (15,'PB');INSERT INTO dominios_sigla (code,code_name) VALUES (16,'PR');INSERT INTO dominios_sigla (code,code_name) VALUES (17,'PE');INSERT INTO dominios_sigla (code,code_name) VALUES (18,'PI');INSERT INTO dominios_sigla (code,code_name) VALUES (19,'RJ');INSERT INTO dominios_sigla (code,code_name) VALUES (20,'RN');INSERT INTO dominios_sigla (code,code_name) VALUES (21,'RS');INSERT INTO dominios_sigla (code,code_name) VALUES (22,'RO');INSERT INTO dominios_sigla (code,code_name) VALUES (23,'RR');INSERT INTO dominios_sigla (code,code_name) VALUES (24,'SC');INSERT INTO dominios_sigla (code,code_name) VALUES (25,'SP');INSERT INTO dominios_sigla (code,code_name) VALUES (26,'SE');INSERT INTO dominios_sigla (code,code_name) VALUES (27,'TO');CREATE TABLE dominios_tipoedifcivil (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifcivil_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (1,'Policial');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (2,'Prisional');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (3,'Cartorial');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (4,'Gestão');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (5,'Eleitoral');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (6,'Produção e/ou pesquisa');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (7,'Seguridade Social');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (8,'Câmara Municipal');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (9,'Assembléia Legislativa');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (22,'Prefeitura');INSERT INTO dominios_tipoedifcivil (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoedifport (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifport_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifport (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifport (code,code_name) VALUES (15,'Administrativa');INSERT INTO dominios_tipoedifport (code,code_name) VALUES (26,'Terminal de passageiros');INSERT INTO dominios_tipoedifport (code,code_name) VALUES (27,'Terminal de cargas');INSERT INTO dominios_tipoedifport (code,code_name) VALUES (32,'Armazém');INSERT INTO dominios_tipoedifport (code,code_name) VALUES (33,'Estaleiro');INSERT INTO dominios_tipoedifport (code,code_name) VALUES (34,'Dique de estaleiro');INSERT INTO dominios_tipoedifport (code,code_name) VALUES (35,'Rampa');INSERT INTO dominios_tipoedifport (code,code_name) VALUES (36,'Carreira');INSERT INTO dominios_tipoedifport (code,code_name) VALUES (37,'Terminal privativo');INSERT INTO dominios_tipoedifport (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoclassecnae (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoclassecnae_pk PRIMARY KEY (code));INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (1,'40.11-8 - Produção de Energia Elétrica');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (2,'40.12-6 - Transmissão de Energia Elétrica');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (3,'40.14-2 - Distribuição de Energia Elétrica');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (4,'41.00-9 - Captação Tratamento e Distribuição de Água');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (5,'64.20-3 - Telecomunicações');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (6,'75.11-6 - Administração Pública em Geral');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (7,'75.12-4 - Regulação das Atividades Sociais e Culturais');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (8,'75.13-2 - Regulação das Atividades Econômicas');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (9,'75.14-0 - Atividades de Apoio à Administração Pública');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (10,'75.21-3 - Relações Exteriores');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (11,'75.22-1 - Defesa');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (12,'75.23-0 - Justiça');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (13,'75.24-8 - Segurança e Ordem Pública');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (14,'75.25-6 - Defesa Civil');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (15,'75.30-2 - Seguridade Social');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (16,'80.13-6 - Educação Infantil - Creche');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (17,'80.14-4 - Educação Infantil - Pré-Escola');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (18,'80.15-2 - Ensino Fundamental');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (19,'80.20-9 - Ensino Médio');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (20,'80.31-4 - Educação Superior - Graduação');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (21,'80.32-2 - Educação Superior - Graduação e Pós-Graduação');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (22,'80.33-0 - Educação Superior - Pós-Graduação e Extensão');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (23,'80.96-9 - Educação Profissional de Nível Técnico');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (24,'80.97-7 - Educação Profissional de Nível Tecnológico');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (25,'80.99-3 - Outras Atividades de Ensino');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (26,'85.11-1 Atendimento Hospitalar (Hospital)');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (27,'85.12-0 Atendimento a Urgência e Emergências (Pronto Socorro)');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (28,'85.13-8 Atenção Ambulatorial (Posto e Centro de Saúde)');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (29,'85.14-6 Serviços de Complementação Diagnóstica ou Terapêutica');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (30,'85.16-2 Outras Atividades Relacionadas com a Atenção à Saúde (Instituto de Pesquisa)');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (31,'85.20-0 Serviços Veterinários');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (32,'85.31-6 - Serviços Sociais com alojamento');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (33,'85.32-4 - Serviços Sociais sem alojamento');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (34,'90.00-0 - Limpeza Urbana e Esgoto e Atividades Relacionadas');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (35,'91.91-0 - Atividades de Organizações Religiosas');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (97,'Não Aplicável');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (98,'Misto');INSERT INTO dominios_tipoclassecnae (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipogrupocnae (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipogrupocnae_pk PRIMARY KEY (code));INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (1,'80.1 - Educação Infantil e Ensino Fundamental');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (3,'80.3 - Ensino Superior');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (4,'80.9 - Educação Profissional e Outras Atividades de Ensino');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (5,'75-1 - Administração do Estado e da Política Econômica e Social');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (6,'75-2 - Serviços Coletivos Prestados pela Administração Pública');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (7,'75-3 - Seguridade Social');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (8,'85.1 Atividades de Atenção à Saúde');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (9,'85.2 Serviços Veterinários');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (10,'85-3 - Serviço Social');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (19,'80.2 - Ensino Médio');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (98,'Misto');INSERT INTO dominios_tipogrupocnae (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_finalidade_veg (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT finalidade_veg_pk PRIMARY KEY (code));INSERT INTO dominios_finalidade_veg (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_finalidade_veg (code,code_name) VALUES (1,'Exploração econômica');INSERT INTO dominios_finalidade_veg (code,code_name) VALUES (2,'Subistência');INSERT INTO dominios_finalidade_veg (code,code_name) VALUES (3,'Conservação ambiental');INSERT INTO dominios_finalidade_veg (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_regime (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT regime_pk PRIMARY KEY (code));INSERT INTO dominios_regime (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_regime (code,code_name) VALUES (1,'Permanente');INSERT INTO dominios_regime (code,code_name) VALUES (2,'Permanente com grande variação');INSERT INTO dominios_regime (code,code_name) VALUES (3,'Temporário');INSERT INTO dominios_regime (code,code_name) VALUES (4,'Temporário com leito permanente');INSERT INTO dominios_regime (code,code_name) VALUES (5,'Seco');INSERT INTO dominios_regime (code,code_name) VALUES (6,'Sazonal');CREATE TABLE dominios_denominacaoassociada (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT denominacaoassociada_pk PRIMARY KEY (code));INSERT INTO dominios_denominacaoassociada (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_denominacaoassociada (code,code_name) VALUES (5,'Cristã');INSERT INTO dominios_denominacaoassociada (code,code_name) VALUES (6,'Israelita');INSERT INTO dominios_denominacaoassociada (code,code_name) VALUES (7,'Muçulmana');INSERT INTO dominios_denominacaoassociada (code,code_name) VALUES (99,'Outras');CREATE TABLE dominios_tiposecaocnae (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tiposecaocnae_pk PRIMARY KEY (code));INSERT INTO dominios_tiposecaocnae (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tiposecaocnae (code,code_name) VALUES (1,'C - Indústrias Extrativas');INSERT INTO dominios_tiposecaocnae (code,code_name) VALUES (2,'D - Indústrias de Transformação');INSERT INTO dominios_tiposecaocnae (code,code_name) VALUES (3,'F - Construção');INSERT INTO dominios_tiposecaocnae (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipotransporte (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipotransporte_pk PRIMARY KEY (code));INSERT INTO dominios_tipotransporte (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipotransporte (code,code_name) VALUES (21,'Passageiros');INSERT INTO dominios_tipotransporte (code,code_name) VALUES (22,'Cargas');INSERT INTO dominios_tipotransporte (code,code_name) VALUES (98,'Misto');CREATE TABLE dominios_tipotravessia (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipotravessia_pk PRIMARY KEY (code));INSERT INTO dominios_tipotravessia (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_tipotravessia (code,code_name) VALUES (1,'Vau natural');INSERT INTO dominios_tipotravessia (code,code_name) VALUES (2,'Vau construída');INSERT INTO dominios_tipotravessia (code,code_name) VALUES (3,'Bote transportador');INSERT INTO dominios_tipotravessia (code,code_name) VALUES (4,'Balsa');CREATE TABLE dominios_tipobanco (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipobanco_pk PRIMARY KEY (code));INSERT INTO dominios_tipobanco (code,code_name) VALUES (1,'Fluvial');INSERT INTO dominios_tipobanco (code,code_name) VALUES (2,'Marítimo');INSERT INTO dominios_tipobanco (code,code_name) VALUES (3,'Lacustre');INSERT INTO dominios_tipobanco (code,code_name) VALUES (4,'Cordão Arenoso');CREATE TABLE dominios_tipocombustivel (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocombustivel_pk PRIMARY KEY (code));INSERT INTO dominios_tipocombustivel (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipocombustivel (code,code_name) VALUES (1,'Nuclear');INSERT INTO dominios_tipocombustivel (code,code_name) VALUES (3,'Diesel');INSERT INTO dominios_tipocombustivel (code,code_name) VALUES (5,'Gás');INSERT INTO dominios_tipocombustivel (code,code_name) VALUES (33,'Carvão');INSERT INTO dominios_tipocombustivel (code,code_name) VALUES (98,'Misto');INSERT INTO dominios_tipocombustivel (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoedifrelig (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifrelig_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifrelig (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifrelig (code,code_name) VALUES (1,'Igreja');INSERT INTO dominios_tipoedifrelig (code,code_name) VALUES (2,'Templo');INSERT INTO dominios_tipoedifrelig (code,code_name) VALUES (3,'Centro');INSERT INTO dominios_tipoedifrelig (code,code_name) VALUES (4,'Mosteiro');INSERT INTO dominios_tipoedifrelig (code,code_name) VALUES (5,'Convento');INSERT INTO dominios_tipoedifrelig (code,code_name) VALUES (6,'Mesquita');INSERT INTO dominios_tipoedifrelig (code,code_name) VALUES (7,'Sinagoga');INSERT INTO dominios_tipoedifrelig (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipopostopol (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipopostopol_pk PRIMARY KEY (code));INSERT INTO dominios_tipopostopol (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipopostopol (code,code_name) VALUES (20,'Posto PM');INSERT INTO dominios_tipopostopol (code,code_name) VALUES (21,'Posto PRF');CREATE TABLE dominios_situacaomarco (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT situacaomarco_pk PRIMARY KEY (code));INSERT INTO dominios_situacaomarco (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_situacaomarco (code,code_name) VALUES (1,'Bom');INSERT INTO dominios_situacaomarco (code,code_name) VALUES (2,'Destruído');INSERT INTO dominios_situacaomarco (code,code_name) VALUES (3,'Destruído sem chapa');INSERT INTO dominios_situacaomarco (code,code_name) VALUES (4,'Destruído com chapa danificada');INSERT INTO dominios_situacaomarco (code,code_name) VALUES (5,'Não encontrado');INSERT INTO dominios_situacaomarco (code,code_name) VALUES (6,'Não visitado');INSERT INTO dominios_situacaomarco (code,code_name) VALUES (7,'Não construído');CREATE TABLE dominios_ovgd (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT ovgd_pk PRIMARY KEY (code));INSERT INTO dominios_ovgd (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_ovgd (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_ovgd (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_tipoterrexp (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoterrexp_pk PRIMARY KEY (code));INSERT INTO dominios_tipoterrexp (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoterrexp (code,code_name) VALUES (4,'Pedregoso');INSERT INTO dominios_tipoterrexp (code,code_name) VALUES (12,'Areia');INSERT INTO dominios_tipoterrexp (code,code_name) VALUES (18,'Cascalho');INSERT INTO dominios_tipoterrexp (code,code_name) VALUES (23,'Terra');INSERT INTO dominios_tipoterrexp (code,code_name) VALUES (24,'Saibro');CREATE TABLE dominios_tipolimmassa (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipolimmassa_pk PRIMARY KEY (code));INSERT INTO dominios_tipolimmassa (code,code_name) VALUES (1,'Costa visível da carta');INSERT INTO dominios_tipolimmassa (code,code_name) VALUES (2,'Margem de massa d`água');INSERT INTO dominios_tipolimmassa (code,code_name) VALUES (3,'Margem esquerda de trechos de massa d`água');INSERT INTO dominios_tipolimmassa (code,code_name) VALUES (4,'Margem direita de trechos de massa d`água');INSERT INTO dominios_tipolimmassa (code,code_name) VALUES (5,'Limite interno entre massas e/ou trechos');INSERT INTO dominios_tipolimmassa (code,code_name) VALUES (6,'Limite com elemento artificial');INSERT INTO dominios_tipolimmassa (code,code_name) VALUES (7,'Limite interno com foz marítima');CREATE TABLE dominios_chamine (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT chamine_pk PRIMARY KEY (code));INSERT INTO dominios_chamine (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_chamine (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_salinidade (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT salinidade_pk PRIMARY KEY (code));INSERT INTO dominios_salinidade (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_salinidade (code,code_name) VALUES (1,'Doce');INSERT INTO dominios_salinidade (code,code_name) VALUES (2,'Salgada');CREATE TABLE dominios_tipoestgerad (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoestgerad_pk PRIMARY KEY (code));INSERT INTO dominios_tipoestgerad (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoestgerad (code,code_name) VALUES (5,'Eólica');INSERT INTO dominios_tipoestgerad (code,code_name) VALUES (6,'Solar');INSERT INTO dominios_tipoestgerad (code,code_name) VALUES (7,'Maré-motriz');INSERT INTO dominios_tipoestgerad (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipofontedagua (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipofontedagua_pk PRIMARY KEY (code));INSERT INTO dominios_tipofontedagua (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipofontedagua (code,code_name) VALUES (1,'Poço');INSERT INTO dominios_tipofontedagua (code,code_name) VALUES (2,'Poço Artesiano');INSERT INTO dominios_tipofontedagua (code,code_name) VALUES (3,'Olho d`água');CREATE TABLE dominios_nrlinhas (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT nrlinhas_pk PRIMARY KEY (code));INSERT INTO dominios_nrlinhas (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_nrlinhas (code,code_name) VALUES (1,'Simples');INSERT INTO dominios_nrlinhas (code,code_name) VALUES (2,'Dupla');INSERT INTO dominios_nrlinhas (code,code_name) VALUES (3,'Múltipla');CREATE TABLE dominios_tipolimpol (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipolimpol_pk PRIMARY KEY (code));INSERT INTO dominios_tipolimpol (code,code_name) VALUES (1,'Internacional');INSERT INTO dominios_tipolimpol (code,code_name) VALUES (2,'Estadual');INSERT INTO dominios_tipolimpol (code,code_name) VALUES (3,'Municipal');CREATE TABLE dominios_tiposumvert (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tiposumvert_pk PRIMARY KEY (code));INSERT INTO dominios_tiposumvert (code,code_name) VALUES (1,'Sumidouro');INSERT INTO dominios_tiposumvert (code,code_name) VALUES (2,'Vertedouro');CREATE TABLE dominios_tipotrechocomunic (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipotrechocomunic_pk PRIMARY KEY (code));INSERT INTO dominios_tipotrechocomunic (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipotrechocomunic (code,code_name) VALUES (4,'Dados');INSERT INTO dominios_tipotrechocomunic (code,code_name) VALUES (6,'Telegráfica');INSERT INTO dominios_tipotrechocomunic (code,code_name) VALUES (7,'Telefônica');INSERT INTO dominios_tipotrechocomunic (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipotrechorod (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipotrechorod_pk PRIMARY KEY (code));INSERT INTO dominios_tipotrechorod (code,code_name) VALUES (1,'Acesso');INSERT INTO dominios_tipotrechorod (code,code_name) VALUES (2,'Rodovia');INSERT INTO dominios_tipotrechorod (code,code_name) VALUES (3,'Caminho carroçável');INSERT INTO dominios_tipotrechorod (code,code_name) VALUES (4,'Auto-estrada');CREATE TABLE dominios_tipocapital (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocapital_pk PRIMARY KEY (code));INSERT INTO dominios_tipocapital (code,code_name) VALUES (2,'Capital Federal');INSERT INTO dominios_tipocapital (code,code_name) VALUES (3,'Capital Estadual');CREATE TABLE dominios_tipolimareaesp (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipolimareaesp_pk PRIMARY KEY (code));INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (1,'Terra pública');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (2,'Terra indígena');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (3,'Quilombo');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (4,'Assentamento rural');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (5,'Amazônia legal');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (6,'Faixa de fronteira');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (7,'Polígono das secas');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (8,'Área de preservação permanente');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (9,'Reserva legal');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (10,'Mosaico');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (11,'Distrito florestal');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (12,'Corredor ecológico');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (13,'Floresta pública');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (14,'Sítios RAMSAR');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (15,'Sítios do patrimônio');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (16,'Reserva da biosfera');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (17,'Reserva florestal');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (18,'Reserva ecológica');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (19,'Estação biológica');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (20,'Horto florestal');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (21,'Estrada parque');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (22,'Floresta de rendimento sustentável');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (23,'Floresta Extrativista');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (24,'Área de proteção ambiental - APA');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (25,'Área de Relevante Interesse Ecológico - ARIE');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (26,'Floresta - FLO');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (27,'Reserva de Desenvolvimento Sustentável - RDS');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (28,'Reserva Extrativista - RESEX');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (29,'Reserva de Fauna - REFAU');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (30,'Reserva Particular do Patrimônio Natural - RPPN');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (31,'Estação Ecológica - ESEC');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (32,'Parque - PAR');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (33,'Monumento Natural - MONA');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (34,'Reserva Biológica - REBIO');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (35,'Refúgio de Vida Silvestre - RVS');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (36,'Area Militar');INSERT INTO dominios_tipolimareaesp (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipomassadagua (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipomassadagua_pk PRIMARY KEY (code));INSERT INTO dominios_tipomassadagua (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_tipomassadagua (code,code_name) VALUES (3,'Oceano');INSERT INTO dominios_tipomassadagua (code,code_name) VALUES (4,'Baía');INSERT INTO dominios_tipomassadagua (code,code_name) VALUES (5,'Enseada');INSERT INTO dominios_tipomassadagua (code,code_name) VALUES (6,'Meandro Abandonado');INSERT INTO dominios_tipomassadagua (code,code_name) VALUES (7,'Lago');INSERT INTO dominios_tipomassadagua (code,code_name) VALUES (8,'Lagoa');INSERT INTO dominios_tipomassadagua (code,code_name) VALUES (10,'Represa/Açude');CREATE TABLE dominios_emarruamento (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT emarruamento_pk PRIMARY KEY (code));INSERT INTO dominios_emarruamento (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_emarruamento (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_emarruamento (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_tipoareausocomun (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoareausocomun_pk PRIMARY KEY (code));INSERT INTO dominios_tipoareausocomun (code,code_name) VALUES (1,'Quilombo');INSERT INTO dominios_tipoareausocomun (code,code_name) VALUES (2,'Assentamento rural');CREATE TABLE dominios_tipoestrut (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoestrut_pk PRIMARY KEY (code));INSERT INTO dominios_tipoestrut (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoestrut (code,code_name) VALUES (1,'Estação');INSERT INTO dominios_tipoestrut (code,code_name) VALUES (2,'Comércio e serviços');INSERT INTO dominios_tipoestrut (code,code_name) VALUES (3,'Fiscalização');INSERT INTO dominios_tipoestrut (code,code_name) VALUES (4,'Porto seco');INSERT INTO dominios_tipoestrut (code,code_name) VALUES (5,'Terminal rodoviário');INSERT INTO dominios_tipoestrut (code,code_name) VALUES (6,'Terminal urbano');INSERT INTO dominios_tipoestrut (code,code_name) VALUES (7,'Terminal multimodal');CREATE TABLE dominios_tipooperativo (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipooperativo_pk PRIMARY KEY (code));INSERT INTO dominios_tipooperativo (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipooperativo (code,code_name) VALUES (1,'Elevadora');INSERT INTO dominios_tipooperativo (code,code_name) VALUES (2,'Abaixadora');CREATE TABLE dominios_posicaoreledific (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT posicaoreledific_pk PRIMARY KEY (code));INSERT INTO dominios_posicaoreledific (code,code_name) VALUES (14,'Isolado');INSERT INTO dominios_posicaoreledific (code,code_name) VALUES (17,'Adjacente a edificação');INSERT INTO dominios_posicaoreledific (code,code_name) VALUES (18,'Sobre edificação');CREATE TABLE dominios_tipodepgeral (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipodepgeral_pk PRIMARY KEY (code));INSERT INTO dominios_tipodepgeral (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipodepgeral (code,code_name) VALUES (8,'Galpão');INSERT INTO dominios_tipodepgeral (code,code_name) VALUES (9,'Silo');INSERT INTO dominios_tipodepgeral (code,code_name) VALUES (10,'Composteira');INSERT INTO dominios_tipodepgeral (code,code_name) VALUES (11,'Depósito frigorífico');INSERT INTO dominios_tipodepgeral (code,code_name) VALUES (32,'Armazém');INSERT INTO dominios_tipodepgeral (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_unidadevolume (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT unidadevolume_pk PRIMARY KEY (code));INSERT INTO dominios_unidadevolume (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_unidadevolume (code,code_name) VALUES (1,'Litro');INSERT INTO dominios_unidadevolume (code,code_name) VALUES (2,'Metro cúbico');CREATE TABLE dominios_construcao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT construcao_pk PRIMARY KEY (code));INSERT INTO dominios_construcao (code,code_name) VALUES (1,'Fechada');INSERT INTO dominios_construcao (code,code_name) VALUES (2,'Aberta');INSERT INTO dominios_construcao (code,code_name) VALUES (97,'Não aplicável');CREATE TABLE dominios_tipoexposicao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoexposicao_pk PRIMARY KEY (code));INSERT INTO dominios_tipoexposicao (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoexposicao (code,code_name) VALUES (3,'Fechado');INSERT INTO dominios_tipoexposicao (code,code_name) VALUES (4,'Coberto');INSERT INTO dominios_tipoexposicao (code,code_name) VALUES (5,'Céu aberto');INSERT INTO dominios_tipoexposicao (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoilha (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoilha_pk PRIMARY KEY (code));INSERT INTO dominios_tipoilha (code,code_name) VALUES (1,'Fluvial');INSERT INTO dominios_tipoilha (code,code_name) VALUES (2,'Marítima');INSERT INTO dominios_tipoilha (code,code_name) VALUES (3,'Lacustre');INSERT INTO dominios_tipoilha (code,code_name) VALUES (98,'Mista');CREATE TABLE dominios_geometriaaproximada (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT geometriaaproximada_pk PRIMARY KEY (code));INSERT INTO dominios_geometriaaproximada (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_geometriaaproximada (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_tipocampo (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocampo_pk PRIMARY KEY (code));INSERT INTO dominios_tipocampo (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipocampo (code,code_name) VALUES (1,'Sujo');INSERT INTO dominios_tipocampo (code,code_name) VALUES (2,'Limpo');CREATE TABLE dominios_tipoalterantrop (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoalterantrop_pk PRIMARY KEY (code));INSERT INTO dominios_tipoalterantrop (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoalterantrop (code,code_name) VALUES (24,'Caixa de empréstimo');INSERT INTO dominios_tipoalterantrop (code,code_name) VALUES (25,'Área aterrada');INSERT INTO dominios_tipoalterantrop (code,code_name) VALUES (26,'Corte');INSERT INTO dominios_tipoalterantrop (code,code_name) VALUES (27,'Aterro');INSERT INTO dominios_tipoalterantrop (code,code_name) VALUES (28,'Resíduo de bota-fora');INSERT INTO dominios_tipoalterantrop (code,code_name) VALUES (29,'Resíduo sólido em geral');CREATE TABLE dominios_tipocondutor (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocondutor_pk PRIMARY KEY (code));INSERT INTO dominios_tipocondutor (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipocondutor (code,code_name) VALUES (2,'Calha');INSERT INTO dominios_tipocondutor (code,code_name) VALUES (4,'Tubulação');CREATE TABLE dominios_tipoedifcomunic (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifcomunic_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifcomunic (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifcomunic (code,code_name) VALUES (1,'Centro de operações');INSERT INTO dominios_tipoedifcomunic (code,code_name) VALUES (2,'Central comutação e transmissão');INSERT INTO dominios_tipoedifcomunic (code,code_name) VALUES (3,'Estação radio-base');INSERT INTO dominios_tipoedifcomunic (code,code_name) VALUES (4,'Estação repetidora');CREATE TABLE dominios_posicaorelativa (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT posicaorelativa_pk PRIMARY KEY (code));INSERT INTO dominios_posicaorelativa (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_posicaorelativa (code,code_name) VALUES (2,'Superfície');INSERT INTO dominios_posicaorelativa (code,code_name) VALUES (3,'Elevado');INSERT INTO dominios_posicaorelativa (code,code_name) VALUES (4,'Emerso');INSERT INTO dominios_posicaorelativa (code,code_name) VALUES (5,'Submerso');INSERT INTO dominios_posicaorelativa (code,code_name) VALUES (6,'Subterrâneo');CREATE TABLE dominios_finalidade_eco (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT finalidade_eco_pk PRIMARY KEY (code));INSERT INTO dominios_finalidade_eco (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_finalidade_eco (code,code_name) VALUES (1,'Comercial');INSERT INTO dominios_finalidade_eco (code,code_name) VALUES (2,'Serviço');INSERT INTO dominios_finalidade_eco (code,code_name) VALUES (98,'Mista');CREATE TABLE dominios_tipolocalcrit (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipolocalcrit_pk PRIMARY KEY (code));INSERT INTO dominios_tipolocalcrit (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipolocalcrit (code,code_name) VALUES (1,'Subestação de válvulas e/ou bombas');INSERT INTO dominios_tipolocalcrit (code,code_name) VALUES (2,'Risco geotécnico');INSERT INTO dominios_tipolocalcrit (code,code_name) VALUES (3,'Interferência com localidades');INSERT INTO dominios_tipolocalcrit (code,code_name) VALUES (4,'Interferência com hidrografia');INSERT INTO dominios_tipolocalcrit (code,code_name) VALUES (5,'Interferência com áreas especiais');INSERT INTO dominios_tipolocalcrit (code,code_name) VALUES (6,'Interferência com vias');INSERT INTO dominios_tipolocalcrit (code,code_name) VALUES (7,'Outras interferências');CREATE TABLE dominios_tipoprodutoresiduo (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoprodutoresiduo_pk PRIMARY KEY (code));INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (3,'Petróleo');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (5,'Gás');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (6,'Grãos');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (16,'Vinhoto');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (17,'Estrume');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (18,'Cascalho');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (19,'Semente');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (20,'Inseticida');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (21,'Folhagens');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (22,'Pedra');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (23,'Granito');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (24,'Mármore');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (25,'Bauxita');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (26,'Manganês');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (27,'Talco');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (28,'Óleo diesel');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (29,'Gasolina');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (30,'Álcool');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (31,'Querosene');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (32,'Cobre');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (33,'Carvão');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (34,'Sal');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (35,'Ferro');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (36,'Escória');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (37,'Ouro');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (38,'Diamante');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (39,'Prata');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (40,'Pedras preciosas');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (41,'Forragem');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (42,'Areia');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (43,'Saibro/Piçarra');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (98,'Misto');INSERT INTO dominios_tipoprodutoresiduo (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_relacionado_dut (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT relacionado_dut_pk PRIMARY KEY (code));INSERT INTO dominios_relacionado_dut (code,code_name) VALUES (1,'Ponto inicial');INSERT INTO dominios_relacionado_dut (code,code_name) VALUES (2,'Ponto final');INSERT INTO dominios_relacionado_dut (code,code_name) VALUES (3,'Local crítico');INSERT INTO dominios_relacionado_dut (code,code_name) VALUES (4,'Depósito geral');INSERT INTO dominios_relacionado_dut (code,code_name) VALUES (5,'Ponto de ramificação');INSERT INTO dominios_relacionado_dut (code,code_name) VALUES (17,'Interrupção com a Moldura');CREATE TABLE dominios_ensino (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT ensino_pk PRIMARY KEY (code));INSERT INTO dominios_ensino (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_ensino (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_ensino (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_eletrificada (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT eletrificada_pk PRIMARY KEY (code));INSERT INTO dominios_eletrificada (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_eletrificada (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_eletrificada (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_atividade (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT atividade_pk PRIMARY KEY (code));INSERT INTO dominios_atividade (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_atividade (code,code_name) VALUES (9,'Prospecção');INSERT INTO dominios_atividade (code,code_name) VALUES (10,'Produção');CREATE TABLE dominios_tipotrechoduto (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipotrechoduto_pk PRIMARY KEY (code));INSERT INTO dominios_tipotrechoduto (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipotrechoduto (code,code_name) VALUES (1,'Duto');INSERT INTO dominios_tipotrechoduto (code,code_name) VALUES (2,'Calha');INSERT INTO dominios_tipotrechoduto (code,code_name) VALUES (3,'Correia transportadora');CREATE TABLE dominios_multimodal (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT multimodal_pk PRIMARY KEY (code));INSERT INTO dominios_multimodal (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_multimodal (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_multimodal (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_administracao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT administracao_pk PRIMARY KEY (code));INSERT INTO dominios_administracao (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_administracao (code,code_name) VALUES (1,'Federal');INSERT INTO dominios_administracao (code,code_name) VALUES (2,'Estadual');INSERT INTO dominios_administracao (code,code_name) VALUES (3,'Municipal');INSERT INTO dominios_administracao (code,code_name) VALUES (4,'Estadual/Municipal');INSERT INTO dominios_administracao (code,code_name) VALUES (5,'Distrital');INSERT INTO dominios_administracao (code,code_name) VALUES (6,'Particular');INSERT INTO dominios_administracao (code,code_name) VALUES (7,'Concessionada');INSERT INTO dominios_administracao (code,code_name) VALUES (15,'Privada');INSERT INTO dominios_administracao (code,code_name) VALUES (97,'Não aplicável');INSERT INTO dominios_administracao (code,code_name) VALUES (98,'Mista');CREATE TABLE dominios_combrenovavel (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT combrenovavel_pk PRIMARY KEY (code));INSERT INTO dominios_combrenovavel (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_combrenovavel (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_combrenovavel (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_tratamento (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tratamento_pk PRIMARY KEY (code));INSERT INTO dominios_tratamento (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tratamento (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_tratamento (code,code_name) VALUES (2,'Não');INSERT INTO dominios_tratamento (code,code_name) VALUES (97,'Não aplicável');CREATE TABLE dominios_usopista (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT usopista_pk PRIMARY KEY (code));INSERT INTO dominios_usopista (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_usopista (code,code_name) VALUES (6,'Particular');INSERT INTO dominios_usopista (code,code_name) VALUES (11,'Público');INSERT INTO dominios_usopista (code,code_name) VALUES (12,'Militar');INSERT INTO dominios_usopista (code,code_name) VALUES (13,'Público/Militar');CREATE TABLE dominios_destinadoa (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT destinadoa_pk PRIMARY KEY (code));INSERT INTO dominios_destinadoa (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_destinadoa (code,code_name) VALUES (5,'Madeira');INSERT INTO dominios_destinadoa (code,code_name) VALUES (18,'Açaí');INSERT INTO dominios_destinadoa (code,code_name) VALUES (34,'Turfa');INSERT INTO dominios_destinadoa (code,code_name) VALUES (35,'Látex');INSERT INTO dominios_destinadoa (code,code_name) VALUES (36,'Castanha');INSERT INTO dominios_destinadoa (code,code_name) VALUES (37,'Carnaúba');INSERT INTO dominios_destinadoa (code,code_name) VALUES (38,'Coco');INSERT INTO dominios_destinadoa (code,code_name) VALUES (39,'Jaborandi');INSERT INTO dominios_destinadoa (code,code_name) VALUES (40,'Palmito');INSERT INTO dominios_destinadoa (code,code_name) VALUES (41,'Babaçu');INSERT INTO dominios_destinadoa (code,code_name) VALUES (43,'Pecuária');INSERT INTO dominios_destinadoa (code,code_name) VALUES (44,'Pesca');INSERT INTO dominios_destinadoa (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipousoedif (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipousoedif_pk PRIMARY KEY (code));INSERT INTO dominios_tipousoedif (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipousoedif (code,code_name) VALUES (1,'Próprio nacional');INSERT INTO dominios_tipousoedif (code,code_name) VALUES (2,'Uso especial da União');CREATE TABLE dominios_classificsigiloso (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT classificsigiloso_pk PRIMARY KEY (code));INSERT INTO dominios_classificsigiloso (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_classificsigiloso (code,code_name) VALUES (1,'Sigiloso');INSERT INTO dominios_classificsigiloso (code,code_name) VALUES (2,'Ostensivo');CREATE TABLE dominios_rede (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT rede_pk PRIMARY KEY (code));INSERT INTO dominios_rede (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_rede (code,code_name) VALUES (2,'Estadual');INSERT INTO dominios_rede (code,code_name) VALUES (3,'Municipal');INSERT INTO dominios_rede (code,code_name) VALUES (14,'Nacional');INSERT INTO dominios_rede (code,code_name) VALUES (15,'Privada');CREATE TABLE dominios_cotacomprovada (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT cotacomprovada_pk PRIMARY KEY (code));INSERT INTO dominios_cotacomprovada (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_cotacomprovada (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_tipodepabast (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipodepabast_pk PRIMARY KEY (code));INSERT INTO dominios_tipodepabast (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipodepabast (code,code_name) VALUES (1,'Tanque');INSERT INTO dominios_tipodepabast (code,code_name) VALUES (2,'Caixa d`água');INSERT INTO dominios_tipodepabast (code,code_name) VALUES (3,'Cisterna');INSERT INTO dominios_tipodepabast (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_motivodescontinuidade (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT motivodescontinuidade_pk PRIMARY KEY (code));INSERT INTO dominios_motivodescontinuidade (code,code_name) VALUES (1,'Descontinuidade Temporal');INSERT INTO dominios_motivodescontinuidade (code,code_name) VALUES (2,'Descontinuidade devido a transformação');INSERT INTO dominios_motivodescontinuidade (code,code_name) VALUES (3,'Descontinuidade por escala de insumo');INSERT INTO dominios_motivodescontinuidade (code,code_name) VALUES (4,'Descontinuidade por falta de acurácia');INSERT INTO dominios_motivodescontinuidade (code,code_name) VALUES (5,'Descontinuidade por diferente interpretação das classes');INSERT INTO dominios_motivodescontinuidade (code,code_name) VALUES (6,'Descontinuidade por omissão');INSERT INTO dominios_motivodescontinuidade (code,code_name) VALUES (7,'Descontinuidade por excesso');CREATE TABLE dominios_situamare (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT situamare_pk PRIMARY KEY (code));INSERT INTO dominios_situamare (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_situamare (code,code_name) VALUES (7,'Cobre e descobre');INSERT INTO dominios_situamare (code,code_name) VALUES (8,'Sempre fora d´água');INSERT INTO dominios_situamare (code,code_name) VALUES (9,'Sempre submerso');CREATE TABLE dominios_tiporocha (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tiporocha_pk PRIMARY KEY (code));INSERT INTO dominios_tiporocha (code,code_name) VALUES (21,'Matacão - pedra');INSERT INTO dominios_tiporocha (code,code_name) VALUES (22,'Penedo - isolado');INSERT INTO dominios_tiporocha (code,code_name) VALUES (23,'Área Rochosa - lajedo');CREATE TABLE dominios_tipoedifaero (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifaero_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifaero (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifaero (code,code_name) VALUES (15,'Administrativa');INSERT INTO dominios_tipoedifaero (code,code_name) VALUES (26,'Terminal de passageiros');INSERT INTO dominios_tipoedifaero (code,code_name) VALUES (27,'Terminal de cargas');INSERT INTO dominios_tipoedifaero (code,code_name) VALUES (28,'Torre de controle');INSERT INTO dominios_tipoedifaero (code,code_name) VALUES (29,'Hangar');INSERT INTO dominios_tipoedifaero (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_especie (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT especie_pk PRIMARY KEY (code));INSERT INTO dominios_especie (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_especie (code,code_name) VALUES (2,'Transmissão');INSERT INTO dominios_especie (code,code_name) VALUES (3,'Distribuição');CREATE TABLE dominios_coincidecomdentrode_lim (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT coincidecomdentrode_lim_pk PRIMARY KEY (code));INSERT INTO dominios_coincidecomdentrode_lim (code,code_name) VALUES (2,'Contorno Massa D`Água');INSERT INTO dominios_coincidecomdentrode_lim (code,code_name) VALUES (3,'Cumeada');INSERT INTO dominios_coincidecomdentrode_lim (code,code_name) VALUES (4,'Linha Seca');INSERT INTO dominios_coincidecomdentrode_lim (code,code_name) VALUES (5,'Costa Visível da Carta');INSERT INTO dominios_coincidecomdentrode_lim (code,code_name) VALUES (6,'Rodovia');INSERT INTO dominios_coincidecomdentrode_lim (code,code_name) VALUES (7,'Ferrovia');INSERT INTO dominios_coincidecomdentrode_lim (code,code_name) VALUES (8,'Trecho de Drenagem');INSERT INTO dominios_coincidecomdentrode_lim (code,code_name) VALUES (9,'Massa D`Água');INSERT INTO dominios_coincidecomdentrode_lim (code,code_name) VALUES (96,'Não Identificado');CREATE TABLE dominios_tipoaglomrurisol (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoaglomrurisol_pk PRIMARY KEY (code));INSERT INTO dominios_tipoaglomrurisol (code,code_name) VALUES (5,'Aglomerado Rural Isolado - Povoado');INSERT INTO dominios_tipoaglomrurisol (code,code_name) VALUES (6,'Aglomerado Rural Isolado - Núcleo');INSERT INTO dominios_tipoaglomrurisol (code,code_name) VALUES (7,'Outros Aglomerados Rurais Isolados');CREATE TABLE dominios_tipocaminhoaereo (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocaminhoaereo_pk PRIMARY KEY (code));INSERT INTO dominios_tipocaminhoaereo (code,code_name) VALUES (12,'Teleférico');INSERT INTO dominios_tipocaminhoaereo (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_jurisdicao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT jurisdicao_pk PRIMARY KEY (code));INSERT INTO dominios_jurisdicao (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_jurisdicao (code,code_name) VALUES (1,'Federal');INSERT INTO dominios_jurisdicao (code,code_name) VALUES (2,'Estadual');INSERT INTO dominios_jurisdicao (code,code_name) VALUES (3,'Municipal');INSERT INTO dominios_jurisdicao (code,code_name) VALUES (6,'Particular');INSERT INTO dominios_jurisdicao (code,code_name) VALUES (8,'Propriedade particular');CREATE TABLE dominios_nivelatencao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT nivelatencao_pk PRIMARY KEY (code));INSERT INTO dominios_nivelatencao (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_nivelatencao (code,code_name) VALUES (5,'Primário');INSERT INTO dominios_nivelatencao (code,code_name) VALUES (6,'Secundário');INSERT INTO dominios_nivelatencao (code,code_name) VALUES (7,'Terciário');CREATE TABLE dominios_especiepredominante (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT especiepredominante_pk PRIMARY KEY (code));INSERT INTO dominios_especiepredominante (code,code_name) VALUES (10,'Cipó');INSERT INTO dominios_especiepredominante (code,code_name) VALUES (11,'Bambu');INSERT INTO dominios_especiepredominante (code,code_name) VALUES (12,'Sororoca');INSERT INTO dominios_especiepredominante (code,code_name) VALUES (17,'Palmeira');INSERT INTO dominios_especiepredominante (code,code_name) VALUES (27,'Araucária');INSERT INTO dominios_especiepredominante (code,code_name) VALUES (41,'Babaçu');INSERT INTO dominios_especiepredominante (code,code_name) VALUES (96,'Não identificado');INSERT INTO dominios_especiepredominante (code,code_name) VALUES (98,'Misto');CREATE TABLE dominios_tipolimoper (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipolimoper_pk PRIMARY KEY (code));INSERT INTO dominios_tipolimoper (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipolimoper (code,code_name) VALUES (1,'Setor censitário');INSERT INTO dominios_tipolimoper (code,code_name) VALUES (2,'Linha de base normal');INSERT INTO dominios_tipolimoper (code,code_name) VALUES (3,'Linha de base reta');INSERT INTO dominios_tipolimoper (code,code_name) VALUES (4,'Costa visível da carta(interpretada)');INSERT INTO dominios_tipolimoper (code,code_name) VALUES (5,'Linha preamar média - 1831');INSERT INTO dominios_tipolimoper (code,code_name) VALUES (6,'Linha média de enchente-ORD');CREATE TABLE dominios_tipocemiterio (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocemiterio_pk PRIMARY KEY (code));INSERT INTO dominios_tipocemiterio (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipocemiterio (code,code_name) VALUES (1,'Crematório');INSERT INTO dominios_tipocemiterio (code,code_name) VALUES (2,'Parque');INSERT INTO dominios_tipocemiterio (code,code_name) VALUES (3,'Vertical');INSERT INTO dominios_tipocemiterio (code,code_name) VALUES (4,'Comum');INSERT INTO dominios_tipocemiterio (code,code_name) VALUES (5,'Túmulo Isolado');INSERT INTO dominios_tipocemiterio (code,code_name) VALUES (98,'Misto');INSERT INTO dominios_tipocemiterio (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_classificacao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT classificacao_pk PRIMARY KEY (code));INSERT INTO dominios_classificacao (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_classificacao (code,code_name) VALUES (9,'Internacional');INSERT INTO dominios_classificacao (code,code_name) VALUES (10,'Doméstico');CREATE TABLE dominios_tipoptoestmed (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoptoestmed_pk PRIMARY KEY (code));INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (1,'Estação Climatológica Principal - CP');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (2,'Estação Climatológica Auxiliar - CA');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (3,'Estação Agroclimatológica - AC');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (4,'Estação Pluviométrica - PL');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (5,'Estação Eólica - EO');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (6,'Estação Evaporimétrica - EV');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (7,'Estação Solarimétrica - SL');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (8,'Estação de Radar Meteorológico - RD');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (9,'Estação de Radiossonda - RS');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (10,'Estação Fluviométrica - FL');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (11,'Estação Maregráfica - MA');INSERT INTO dominios_tipoptoestmed (code,code_name) VALUES (12,'Estação de Marés Terrestres - Crosta');CREATE TABLE dominios_tipoequipagropec (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoequipagropec_pk PRIMARY KEY (code));INSERT INTO dominios_tipoequipagropec (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoequipagropec (code,code_name) VALUES (1,'Pivô central');INSERT INTO dominios_tipoequipagropec (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_compartilhado (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT compartilhado_pk PRIMARY KEY (code));INSERT INTO dominios_compartilhado (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_compartilhado (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_proximidade (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT proximidade_pk PRIMARY KEY (code));INSERT INTO dominios_proximidade (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_proximidade (code,code_name) VALUES (14,'Isolado');INSERT INTO dominios_proximidade (code,code_name) VALUES (15,'Adjacente');INSERT INTO dominios_proximidade (code,code_name) VALUES (16,'Coincidente');CREATE TABLE dominios_eixoprincipal (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT eixoprincipal_pk PRIMARY KEY (code));INSERT INTO dominios_eixoprincipal (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_eixoprincipal (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_tipoqueda (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoqueda_pk PRIMARY KEY (code));INSERT INTO dominios_tipoqueda (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoqueda (code,code_name) VALUES (1,'Cachoeira');INSERT INTO dominios_tipoqueda (code,code_name) VALUES (2,'Salto');INSERT INTO dominios_tipoqueda (code,code_name) VALUES (3,'Catarata');CREATE TABLE dominios_canteirodivisorio (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT canteirodivisorio_pk PRIMARY KEY (code));INSERT INTO dominios_canteirodivisorio (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_canteirodivisorio (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_tipoedifenergia (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifenergia_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifenergia (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifenergia (code,code_name) VALUES (1,'Administração');INSERT INTO dominios_tipoedifenergia (code,code_name) VALUES (2,'Oficinas');INSERT INTO dominios_tipoedifenergia (code,code_name) VALUES (3,'Segurança');INSERT INTO dominios_tipoedifenergia (code,code_name) VALUES (4,'Depósito');INSERT INTO dominios_tipoedifenergia (code,code_name) VALUES (5,'Chaminé');INSERT INTO dominios_tipoedifenergia (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_referencialaltim (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT referencialaltim_pk PRIMARY KEY (code));INSERT INTO dominios_referencialaltim (code,code_name) VALUES (1,'Torres');INSERT INTO dominios_referencialaltim (code,code_name) VALUES (2,'Imbituba');INSERT INTO dominios_referencialaltim (code,code_name) VALUES (3,'Santana');INSERT INTO dominios_referencialaltim (code,code_name) VALUES (4,'Local');INSERT INTO dominios_referencialaltim (code,code_name) VALUES (5,'Outra referência');CREATE TABLE dominios_formaextracao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT formaextracao_pk PRIMARY KEY (code));INSERT INTO dominios_formaextracao (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_formaextracao (code,code_name) VALUES (5,'Céu aberto');INSERT INTO dominios_formaextracao (code,code_name) VALUES (6,'Subterrâneo');CREATE TABLE dominios_tipomacchav (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipomacchav_pk PRIMARY KEY (code));INSERT INTO dominios_tipomacchav (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipomacchav (code,code_name) VALUES (1,'Macega');INSERT INTO dominios_tipomacchav (code,code_name) VALUES (2,'Chavascal');CREATE TABLE dominios_tipomaqtermica (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipomaqtermica_pk PRIMARY KEY (code));INSERT INTO dominios_tipomaqtermica (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipomaqtermica (code,code_name) VALUES (1,'Turbina à gás (TBGS)');INSERT INTO dominios_tipomaqtermica (code,code_name) VALUES (2,'Turbina à vapor (TBVP)');INSERT INTO dominios_tipomaqtermica (code,code_name) VALUES (3,'Ciclo combinado (CLCB)');INSERT INTO dominios_tipomaqtermica (code,code_name) VALUES (4,'Motor de Combustão Interna (NCIA)');CREATE TABLE dominios_tipotunel (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipotunel_pk PRIMARY KEY (code));INSERT INTO dominios_tipotunel (code,code_name) VALUES (1,'Túnel');INSERT INTO dominios_tipotunel (code,code_name) VALUES (2,'Passagem subterrânea sob via');CREATE TABLE dominios_tipopista (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipopista_pk PRIMARY KEY (code));INSERT INTO dominios_tipopista (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipopista (code,code_name) VALUES (1,'Atletismo');INSERT INTO dominios_tipopista (code,code_name) VALUES (2,'Ciclismo');INSERT INTO dominios_tipopista (code,code_name) VALUES (3,'Motociclismo');INSERT INTO dominios_tipopista (code,code_name) VALUES (4,'Automobilismo');INSERT INTO dominios_tipopista (code,code_name) VALUES (5,'Corrida de cavalos');INSERT INTO dominios_tipopista (code,code_name) VALUES (9,'Pista de pouso');INSERT INTO dominios_tipopista (code,code_name) VALUES (10,'Pista de táxi');INSERT INTO dominios_tipopista (code,code_name) VALUES (11,'Heliporto');INSERT INTO dominios_tipopista (code,code_name) VALUES (98,'Misto');INSERT INTO dominios_tipopista (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_revestimento (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT revestimento_pk PRIMARY KEY (code));INSERT INTO dominios_revestimento (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_revestimento (code,code_name) VALUES (1,'Leito natural');INSERT INTO dominios_revestimento (code,code_name) VALUES (2,'Revestimento primário');INSERT INTO dominios_revestimento (code,code_name) VALUES (3,'Pavimentado');INSERT INTO dominios_revestimento (code,code_name) VALUES (4,'Calçado');CREATE TABLE dominios_posicaopista (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT posicaopista_pk PRIMARY KEY (code));INSERT INTO dominios_posicaopista (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_posicaopista (code,code_name) VALUES (12,'Adjacentes');INSERT INTO dominios_posicaopista (code,code_name) VALUES (13,'Superpostas');INSERT INTO dominios_posicaopista (code,code_name) VALUES (97,'Não Aplicável');CREATE TABLE dominios_sistemageodesico (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT sistemageodesico_pk PRIMARY KEY (code));INSERT INTO dominios_sistemageodesico (code,code_name) VALUES (1,'SAD-69');INSERT INTO dominios_sistemageodesico (code,code_name) VALUES (2,'SIRGAS');INSERT INTO dominios_sistemageodesico (code,code_name) VALUES (3,'WGS-84');INSERT INTO dominios_sistemageodesico (code,code_name) VALUES (4,'Córrego Alegre');INSERT INTO dominios_sistemageodesico (code,code_name) VALUES (5,'Astro Chuá');INSERT INTO dominios_sistemageodesico (code,code_name) VALUES (6,'Outra referência');CREATE TABLE dominios_tipoedifrod (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifrod_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifrod (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifrod (code,code_name) VALUES (8,'Terminal interestadual');INSERT INTO dominios_tipoedifrod (code,code_name) VALUES (9,'Terminal urbano');INSERT INTO dominios_tipoedifrod (code,code_name) VALUES (10,'Parada interestadual');INSERT INTO dominios_tipoedifrod (code,code_name) VALUES (12,'Posto de pesagem');INSERT INTO dominios_tipoedifrod (code,code_name) VALUES (13,'Posto de pedágio');INSERT INTO dominios_tipoedifrod (code,code_name) VALUES (14,'Posto de fiscalização');INSERT INTO dominios_tipoedifrod (code,code_name) VALUES (15,'Administrativa');INSERT INTO dominios_tipoedifrod (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_indice (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT indice_pk PRIMARY KEY (code));INSERT INTO dominios_indice (code,code_name) VALUES (1,'Mestra');INSERT INTO dominios_indice (code,code_name) VALUES (2,'Normal');INSERT INTO dominios_indice (code,code_name) VALUES (3,'Auxiliar');CREATE TABLE dominios_denso (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT denso_pk PRIMARY KEY (code));INSERT INTO dominios_denso (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_denso (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_denso (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_coletiva (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT coletiva_pk PRIMARY KEY (code));INSERT INTO dominios_coletiva (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_coletiva (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_coletiva (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_situacaojuridica (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT situacaojuridica_pk PRIMARY KEY (code));INSERT INTO dominios_situacaojuridica (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_situacaojuridica (code,code_name) VALUES (1,'Delimitada');INSERT INTO dominios_situacaojuridica (code,code_name) VALUES (2,'Declarada');INSERT INTO dominios_situacaojuridica (code,code_name) VALUES (3,'Homologada ou demarcada');INSERT INTO dominios_situacaojuridica (code,code_name) VALUES (4,'Regularizada');CREATE TABLE dominios_tipoestmed (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoestmed_pk PRIMARY KEY (code));INSERT INTO dominios_tipoestmed (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (1,'Estação Climatológica Principal - CP');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (2,'Estação Climatológica Auxiliar - CA');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (3,'Estação Agroclimatológica - AC');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (4,'Estação Pluviométrica - PL');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (5,'Estação Eólica - EO');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (6,'Estação Evaporimétrica - EV');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (7,'Estação Solarimétrica - SL');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (8,'Estação de Radar Meteorológico - RD');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (9,'Estação de Radiossonda - RS');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (10,'Estação Fluviométrica - FL');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (11,'Estação Maregráfica - MA');INSERT INTO dominios_tipoestmed (code,code_name) VALUES (12,'Estação de Marés Terrestres - Crosta');CREATE TABLE dominios_antropizada (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT antropizada_pk PRIMARY KEY (code));INSERT INTO dominios_antropizada (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_antropizada (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_antropizada (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_caracteristicafloresta (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT caracteristicafloresta_pk PRIMARY KEY (code));INSERT INTO dominios_caracteristicafloresta (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_caracteristicafloresta (code,code_name) VALUES (1,'Floresta');INSERT INTO dominios_caracteristicafloresta (code,code_name) VALUES (2,'Mata');INSERT INTO dominios_caracteristicafloresta (code,code_name) VALUES (3,'Bosque');CREATE TABLE dominios_situacaocosta (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT situacaocosta_pk PRIMARY KEY (code));INSERT INTO dominios_situacaocosta (code,code_name) VALUES (10,'Contíguo');INSERT INTO dominios_situacaocosta (code,code_name) VALUES (11,'Afastado');CREATE TABLE dominios_tipocampoquadra (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocampoquadra_pk PRIMARY KEY (code));INSERT INTO dominios_tipocampoquadra (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipocampoquadra (code,code_name) VALUES (1,'Futebol');INSERT INTO dominios_tipocampoquadra (code,code_name) VALUES (2,'Basquete');INSERT INTO dominios_tipocampoquadra (code,code_name) VALUES (3,'Vôlei');INSERT INTO dominios_tipocampoquadra (code,code_name) VALUES (4,'Pólo');INSERT INTO dominios_tipocampoquadra (code,code_name) VALUES (5,'Hipismo');INSERT INTO dominios_tipocampoquadra (code,code_name) VALUES (6,'Poliesportiva');INSERT INTO dominios_tipocampoquadra (code,code_name) VALUES (7,'Tênis');INSERT INTO dominios_tipocampoquadra (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_homologacao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT homologacao_pk PRIMARY KEY (code));INSERT INTO dominios_homologacao (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_homologacao (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_homologacao (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_cultivopredominante (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT cultivopredominante_pk PRIMARY KEY (code));INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (1,'Milho');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (2,'Banana');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (3,'Laranja');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (4,'Trigo');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (6,'Algodão herbáceo');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (7,'Cana-de-Açúcar');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (8,'Fumo');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (9,'Soja');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (10,'Batata inglesa');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (11,'Mandioca');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (12,'Feijão');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (13,'Arroz');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (14,'Café');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (15,'Cacau');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (16,'Erva-mate');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (17,'Palmeira');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (18,'Açaí');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (19,'Seringueira');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (20,'Eucalipto');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (21,'Acácia');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (22,'Algaroba');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (23,'Pinus');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (24,'Pastagem cultivada');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (25,'Hortaliças');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (26,'Bracatinga');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (27,'Araucária');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (28,'Carnauba');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (29,'Pera');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (30,'Maçã');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (31,'Pêssego');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (32,'Juta');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (33,'Cebola');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (42,'Videira');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (96,'Não identificado');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (98,'Misto');INSERT INTO dominios_cultivopredominante (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipotravessiaped (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipotravessiaped_pk PRIMARY KEY (code));INSERT INTO dominios_tipotravessiaped (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_tipotravessiaped (code,code_name) VALUES (7,'Passagem subterrânea');INSERT INTO dominios_tipotravessiaped (code,code_name) VALUES (8,'Passarela');INSERT INTO dominios_tipotravessiaped (code,code_name) VALUES (9,'Pinguela');CREATE TABLE dominios_tipoedifcomercserv (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifcomercserv_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifcomercserv (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifcomercserv (code,code_name) VALUES (3,'Centro comercial');INSERT INTO dominios_tipoedifcomercserv (code,code_name) VALUES (4,'Mercado');INSERT INTO dominios_tipoedifcomercserv (code,code_name) VALUES (5,'Centro de convenções');INSERT INTO dominios_tipoedifcomercserv (code,code_name) VALUES (6,'Feira');INSERT INTO dominios_tipoedifcomercserv (code,code_name) VALUES (7,'Hotel/motel/pousada');INSERT INTO dominios_tipoedifcomercserv (code,code_name) VALUES (8,'Restaurante');INSERT INTO dominios_tipoedifcomercserv (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_coincidecomdentrode_hid (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT coincidecomdentrode_hid_pk PRIMARY KEY (code));INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (1,'Rio');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (2,'Canal');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (9,'Laguna');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (10,'Represa/açude');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (11,'Vala');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (12,'Queda d´água');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (13,'Corredeira');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (14,'Eclusa');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (15,'Terreno sujeito a inundação');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (16,'Foz marítima');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (19,'Barragem');INSERT INTO dominios_coincidecomdentrode_hid (code,code_name) VALUES (97,'Não aplicável');CREATE TABLE dominios_causa (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT causa_pk PRIMARY KEY (code));INSERT INTO dominios_causa (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_causa (code,code_name) VALUES (1,'Canalização');INSERT INTO dominios_causa (code,code_name) VALUES (2,'Gruta ou Fenda');INSERT INTO dominios_causa (code,code_name) VALUES (3,'Absorção');CREATE TABLE dominios_materializado (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT materializado_pk PRIMARY KEY (code));INSERT INTO dominios_materializado (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_materializado (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_materializado (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_funcaoedifmetroferrov (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT funcaoedifmetroferrov_pk PRIMARY KEY (code));INSERT INTO dominios_funcaoedifmetroferrov (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_funcaoedifmetroferrov (code,code_name) VALUES (15,'Administrativa');INSERT INTO dominios_funcaoedifmetroferrov (code,code_name) VALUES (16,'Estação ferroviária de passageiros');INSERT INTO dominios_funcaoedifmetroferrov (code,code_name) VALUES (17,'Estação metroviária');INSERT INTO dominios_funcaoedifmetroferrov (code,code_name) VALUES (18,'Terminal ferroviário de cargas');INSERT INTO dominios_funcaoedifmetroferrov (code,code_name) VALUES (19,'Terminal ferroviário de passageiros e cargas');INSERT INTO dominios_funcaoedifmetroferrov (code,code_name) VALUES (20,'Oficina de manutenção');INSERT INTO dominios_funcaoedifmetroferrov (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tiporesiduo (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tiporesiduo_pk PRIMARY KEY (code));INSERT INTO dominios_tiporesiduo (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tiporesiduo (code,code_name) VALUES (9,'Esgoto');INSERT INTO dominios_tiporesiduo (code,code_name) VALUES (12,'Lixo domiciliar e comercial');INSERT INTO dominios_tiporesiduo (code,code_name) VALUES (13,'Lixo tóxico');INSERT INTO dominios_tiporesiduo (code,code_name) VALUES (14,'Lixo séptico');INSERT INTO dominios_tiporesiduo (code,code_name) VALUES (15,'Chorume');INSERT INTO dominios_tiporesiduo (code,code_name) VALUES (16,'Vinhoto');INSERT INTO dominios_tiporesiduo (code,code_name) VALUES (98,'Misto');INSERT INTO dominios_tiporesiduo (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoentroncamento (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoentroncamento_pk PRIMARY KEY (code));INSERT INTO dominios_tipoentroncamento (code,code_name) VALUES (1,'Cruzamento rodoviário');INSERT INTO dominios_tipoentroncamento (code,code_name) VALUES (2,'Círculo rodoviário');INSERT INTO dominios_tipoentroncamento (code,code_name) VALUES (3,'Trevo rodoviário');INSERT INTO dominios_tipoentroncamento (code,code_name) VALUES (4,'Rótula');INSERT INTO dominios_tipoentroncamento (code,code_name) VALUES (5,'Entroncamento ferroviário');INSERT INTO dominios_tipoentroncamento (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoatracad (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoatracad_pk PRIMARY KEY (code));INSERT INTO dominios_tipoatracad (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoatracad (code,code_name) VALUES (38,'Cais');INSERT INTO dominios_tipoatracad (code,code_name) VALUES (39,'Cais flutuante');INSERT INTO dominios_tipoatracad (code,code_name) VALUES (40,'Trapiche');INSERT INTO dominios_tipoatracad (code,code_name) VALUES (41,'Molhe de atracação');INSERT INTO dominios_tipoatracad (code,code_name) VALUES (42,'Pier');INSERT INTO dominios_tipoatracad (code,code_name) VALUES (43,'Dolfim');INSERT INTO dominios_tipoatracad (code,code_name) VALUES (44,'Desembarcadouro');CREATE TABLE dominios_tipoplataforma (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoplataforma_pk PRIMARY KEY (code));INSERT INTO dominios_tipoplataforma (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoplataforma (code,code_name) VALUES (3,'Petróleo');INSERT INTO dominios_tipoplataforma (code,code_name) VALUES (5,'Gás');INSERT INTO dominios_tipoplataforma (code,code_name) VALUES (98,'Misto');CREATE TABLE dominios_situacaofisica (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT situacaofisica_pk PRIMARY KEY (code));INSERT INTO dominios_situacaofisica (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_situacaofisica (code,code_name) VALUES (1,'Abandonada');INSERT INTO dominios_situacaofisica (code,code_name) VALUES (2,'Destruída');INSERT INTO dominios_situacaofisica (code,code_name) VALUES (3,'Em Construção');INSERT INTO dominios_situacaofisica (code,code_name) VALUES (4,'Planejada');INSERT INTO dominios_situacaofisica (code,code_name) VALUES (5,'Construída');CREATE TABLE dominios_tipoedifturist (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifturist_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifturist (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifturist (code,code_name) VALUES (9,'Cruzeiro');INSERT INTO dominios_tipoedifturist (code,code_name) VALUES (10,'Estátua');INSERT INTO dominios_tipoedifturist (code,code_name) VALUES (11,'Mirante');INSERT INTO dominios_tipoedifturist (code,code_name) VALUES (12,'Monumento');INSERT INTO dominios_tipoedifturist (code,code_name) VALUES (13,'Panteão');INSERT INTO dominios_tipoedifturist (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoponte (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoponte_pk PRIMARY KEY (code));INSERT INTO dominios_tipoponte (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoponte (code,code_name) VALUES (1,'Móvel');INSERT INTO dominios_tipoponte (code,code_name) VALUES (2,'Pênsil');INSERT INTO dominios_tipoponte (code,code_name) VALUES (3,'Fixa');CREATE TABLE dominios_situacaoagua (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT situacaoagua_pk PRIMARY KEY (code));INSERT INTO dominios_situacaoagua (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_situacaoagua (code,code_name) VALUES (6,'Tratada');INSERT INTO dominios_situacaoagua (code,code_name) VALUES (7,'Não tratada');CREATE TABLE dominios_tipotrechomassa (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipotrechomassa_pk PRIMARY KEY (code));INSERT INTO dominios_tipotrechomassa (code,code_name) VALUES (1,'Rio');INSERT INTO dominios_tipotrechomassa (code,code_name) VALUES (2,'Canal');INSERT INTO dominios_tipotrechomassa (code,code_name) VALUES (9,'Laguna');INSERT INTO dominios_tipotrechomassa (code,code_name) VALUES (10,'Represa/açude');INSERT INTO dominios_tipotrechomassa (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoedifabast (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoedifabast_pk PRIMARY KEY (code));INSERT INTO dominios_tipoedifabast (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoedifabast (code,code_name) VALUES (1,'Captação');INSERT INTO dominios_tipoedifabast (code,code_name) VALUES (2,'Tratamento');INSERT INTO dominios_tipoedifabast (code,code_name) VALUES (3,'Recalque');INSERT INTO dominios_tipoedifabast (code,code_name) VALUES (98,'Misto');INSERT INTO dominios_tipoedifabast (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_dentrodepoligono (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT dentrodepoligono_pk PRIMARY KEY (code));INSERT INTO dominios_dentrodepoligono (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_dentrodepoligono (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_nascente (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT nascente_pk PRIMARY KEY (code));INSERT INTO dominios_nascente (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_nascente (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_nascente (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_tipoptoenergia (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoptoenergia_pk PRIMARY KEY (code));INSERT INTO dominios_tipoptoenergia (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoptoenergia (code,code_name) VALUES (1,'Estação geradora de energia');INSERT INTO dominios_tipoptoenergia (code,code_name) VALUES (2,'Subestação de transmissão');INSERT INTO dominios_tipoptoenergia (code,code_name) VALUES (3,'Subestação de  distribuição');INSERT INTO dominios_tipoptoenergia (code,code_name) VALUES (4,'Ponto de ramificação');CREATE TABLE dominios_relacionado_hdr (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT relacionado_hdr_pk PRIMARY KEY (code));INSERT INTO dominios_relacionado_hdr (code,code_name) VALUES (12,'Queda dágua');INSERT INTO dominios_relacionado_hdr (code,code_name) VALUES (13,'Corredeira');INSERT INTO dominios_relacionado_hdr (code,code_name) VALUES (14,'Eclusa');INSERT INTO dominios_relacionado_hdr (code,code_name) VALUES (16,'Foz marítima');INSERT INTO dominios_relacionado_hdr (code,code_name) VALUES (17,'Interrupção com a Moldura');INSERT INTO dominios_relacionado_hdr (code,code_name) VALUES (19,'Barragem');INSERT INTO dominios_relacionado_hdr (code,code_name) VALUES (21,'Confluência');INSERT INTO dominios_relacionado_hdr (code,code_name) VALUES (22,'Complexo portuário');INSERT INTO dominios_relacionado_hdr (code,code_name) VALUES (23,'Entre trechos hidroviários');INSERT INTO dominios_relacionado_hdr (code,code_name) VALUES (24,'Atracadouro');CREATE TABLE dominios_tipogrutacaverna (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipogrutacaverna_pk PRIMARY KEY (code));INSERT INTO dominios_tipogrutacaverna (code,code_name) VALUES (19,'Gruta');INSERT INTO dominios_tipogrutacaverna (code,code_name) VALUES (20,'Caverna');CREATE TABLE dominios_setor (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT setor_pk PRIMARY KEY (code));INSERT INTO dominios_setor (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_setor (code,code_name) VALUES (1,'Energético');INSERT INTO dominios_setor (code,code_name) VALUES (2,'Econômico');INSERT INTO dominios_setor (code,code_name) VALUES (3,'Abastecimento de água');INSERT INTO dominios_setor (code,code_name) VALUES (4,'Saneamento básico');CREATE TABLE dominios_instituicao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT instituicao_pk PRIMARY KEY (code));INSERT INTO dominios_instituicao (code,code_name) VALUES (0,'Desconhecida');INSERT INTO dominios_instituicao (code,code_name) VALUES (4,'Marinha');INSERT INTO dominios_instituicao (code,code_name) VALUES (5,'Exército');INSERT INTO dominios_instituicao (code,code_name) VALUES (6,'Aeronáutica');INSERT INTO dominios_instituicao (code,code_name) VALUES (7,'Polícia militar');INSERT INTO dominios_instituicao (code,code_name) VALUES (8,'Corpo de bombeiros');INSERT INTO dominios_instituicao (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipolavoura (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipolavoura_pk PRIMARY KEY (code));INSERT INTO dominios_tipolavoura (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipolavoura (code,code_name) VALUES (1,'Perene');INSERT INTO dominios_tipolavoura (code,code_name) VALUES (2,'Semi-perene');INSERT INTO dominios_tipolavoura (code,code_name) VALUES (3,'Anual');CREATE TABLE dominios_fixa (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT fixa_pk PRIMARY KEY (code));INSERT INTO dominios_fixa (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_fixa (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_operacional (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT operacional_pk PRIMARY KEY (code));INSERT INTO dominios_operacional (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_operacional (code,code_name) VALUES (1,'Sim');INSERT INTO dominios_operacional (code,code_name) VALUES (2,'Não');CREATE TABLE dominios_geracao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT geracao_pk PRIMARY KEY (code));INSERT INTO dominios_geracao (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_geracao (code,code_name) VALUES (1,'Eletricidade - GER 0');INSERT INTO dominios_geracao (code,code_name) VALUES (2,'CoGeração');CREATE TABLE dominios_tipocerr (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipocerr_pk PRIMARY KEY (code));INSERT INTO dominios_tipocerr (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipocerr (code,code_name) VALUES (1,'Cerrado');INSERT INTO dominios_tipocerr (code,code_name) VALUES (2,'Cerradão');CREATE TABLE dominios_tipounidprotinteg (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipounidprotinteg_pk PRIMARY KEY (code));INSERT INTO dominios_tipounidprotinteg (code,code_name) VALUES (1,'Estação Ecológica - ESEC');INSERT INTO dominios_tipounidprotinteg (code,code_name) VALUES (2,'Parque - PAR');INSERT INTO dominios_tipounidprotinteg (code,code_name) VALUES (3,'Monumento batural - MONA');INSERT INTO dominios_tipounidprotinteg (code,code_name) VALUES (4,'Reserva Biológica - REBIO');INSERT INTO dominios_tipounidprotinteg (code,code_name) VALUES (5,'Refúgio de Vida Silvestre - RVS');CREATE TABLE dominios_usoprincipal (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT usoprincipal_pk PRIMARY KEY (code));INSERT INTO dominios_usoprincipal (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_usoprincipal (code,code_name) VALUES (1,'Irrigação');INSERT INTO dominios_usoprincipal (code,code_name) VALUES (2,'Abastecimento');INSERT INTO dominios_usoprincipal (code,code_name) VALUES (3,'Energia');INSERT INTO dominios_usoprincipal (code,code_name) VALUES (97,'Não aplicável');INSERT INTO dominios_usoprincipal (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_destinacaofundeadouro (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT destinacaofundeadouro_pk PRIMARY KEY (code));INSERT INTO dominios_destinacaofundeadouro (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_destinacaofundeadouro (code,code_name) VALUES (10,'Fundeadouro recomendado sem limite definido');INSERT INTO dominios_destinacaofundeadouro (code,code_name) VALUES (11,'Fundeadouro com designação alfanumérica');INSERT INTO dominios_destinacaofundeadouro (code,code_name) VALUES (12,'Áreas de fundeio com limite definido');INSERT INTO dominios_destinacaofundeadouro (code,code_name) VALUES (13,'Áreas de fundeio proibido');INSERT INTO dominios_destinacaofundeadouro (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_relacionado_fer_rod (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT relacionado_fer_rod_pk PRIMARY KEY (code));INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (1,'Túnel');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (2,'Passagem elevada ou viaduto');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (3,'Ponte');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (4,'Travessia');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (5,'Edificação rodoviária');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (6,'Galeria ou bueiro');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (7,'Mudança de atributo');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (8,'Entroncamento');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (9,'Início ou fim de trecho');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (10,'Edificação Metro Ferroviária');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (11,'Localidade');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (12,'Patio');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (13,'Passagem de nível');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (17,'Interrupção com a Moldura');INSERT INTO dominios_relacionado_fer_rod (code,code_name) VALUES (19,'Barragem');CREATE TABLE dominios_tipopocomina (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipopocomina_pk PRIMARY KEY (code));INSERT INTO dominios_tipopocomina (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipopocomina (code,code_name) VALUES (2,'Horizontal');INSERT INTO dominios_tipopocomina (code,code_name) VALUES (3,'Vertical');INSERT INTO dominios_tipopocomina (code,code_name) VALUES (97,'Não aplicável');CREATE TABLE dominios_causaexposicao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT causaexposicao_pk PRIMARY KEY (code));INSERT INTO dominios_causaexposicao (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_causaexposicao (code,code_name) VALUES (4,'Natural');INSERT INTO dominios_causaexposicao (code,code_name) VALUES (5,'Artificial');CREATE TABLE dominios_tipoptorefgeodtopo (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoptorefgeodtopo_pk PRIMARY KEY (code));INSERT INTO dominios_tipoptorefgeodtopo (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tipoptorefgeodtopo (code,code_name) VALUES (1,'Vértice de Triangulação - VT');INSERT INTO dominios_tipoptorefgeodtopo (code,code_name) VALUES (2,'Referência de Nível - RN');INSERT INTO dominios_tipoptorefgeodtopo (code,code_name) VALUES (3,'Estação Gravimétrica - EG');INSERT INTO dominios_tipoptorefgeodtopo (code,code_name) VALUES (4,'Estação de Poligonal - EP');INSERT INTO dominios_tipoptorefgeodtopo (code,code_name) VALUES (5,'Ponto Astronômico - PA');INSERT INTO dominios_tipoptorefgeodtopo (code,code_name) VALUES (6,'Ponto barométrico - B');INSERT INTO dominios_tipoptorefgeodtopo (code,code_name) VALUES (7,'Ponto Trigonométrico - RV');INSERT INTO dominios_tipoptorefgeodtopo (code,code_name) VALUES (8,'Ponto de Satélite - SAT');INSERT INTO dominios_tipoptorefgeodtopo (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tipoptocontrole (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipoptocontrole_pk PRIMARY KEY (code));INSERT INTO dominios_tipoptocontrole (code,code_name) VALUES (9,'Ponto de Controle');INSERT INTO dominios_tipoptocontrole (code,code_name) VALUES (12,'Ponto Perspectivo');INSERT INTO dominios_tipoptocontrole (code,code_name) VALUES (13,'Ponto Fotogramétrico');INSERT INTO dominios_tipoptocontrole (code,code_name) VALUES (99,'Outros');CREATE TABLE dominios_tiporecife (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tiporecife_pk PRIMARY KEY (code));INSERT INTO dominios_tiporecife (code,code_name) VALUES (0,'Desconhecido');INSERT INTO dominios_tiporecife (code,code_name) VALUES (1,'Arenito');INSERT INTO dominios_tiporecife (code,code_name) VALUES (2,'Rochoso');INSERT INTO dominios_tiporecife (code,code_name) VALUES (20,'Coral');CREATE TABLE cb_adm_area_pub_civil_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT adm_area_pub_civil_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_area_pub_civil_a', 'features','cb_adm_area_pub_civil_a', 'Camada adm_area_pub_civil_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_area_pub_civil_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_area_pub_civil_a" AFTER INSERT ON "cb_adm_area_pub_civil_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_area_pub_civil_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_area_pub_civil_a" AFTER DELETE ON "cb_adm_area_pub_civil_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_area_pub_civil_a'); END ;CREATE TABLE cb_adm_area_pub_militar_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT adm_area_pub_militar_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_area_pub_militar_a', 'features','cb_adm_area_pub_militar_a', 'Camada adm_area_pub_militar_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_area_pub_militar_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_area_pub_militar_a" AFTER INSERT ON "cb_adm_area_pub_militar_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_area_pub_militar_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_area_pub_militar_a" AFTER DELETE ON "cb_adm_area_pub_militar_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_area_pub_militar_a'); END ;CREATE TABLE cb_adm_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT adm_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_descontinuidade_geometrica_a', 'features','cb_adm_descontinuidade_geometrica_a', 'Camada adm_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_descontinuidade_geometrica_a" AFTER INSERT ON "cb_adm_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_descontinuidade_geometrica_a" AFTER DELETE ON "cb_adm_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_adm_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT adm_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_descontinuidade_geometrica_l', 'features','cb_adm_descontinuidade_geometrica_l', 'Camada adm_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_descontinuidade_geometrica_l" AFTER INSERT ON "cb_adm_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_descontinuidade_geometrica_l" AFTER DELETE ON "cb_adm_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_adm_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT adm_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_descontinuidade_geometrica_p', 'features','cb_adm_descontinuidade_geometrica_p', 'Camada adm_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_descontinuidade_geometrica_p" AFTER INSERT ON "cb_adm_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_descontinuidade_geometrica_p" AFTER DELETE ON "cb_adm_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_adm_edif_pub_civil_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifcivil smallint NOT NULL,	 tipousoedif smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT adm_edif_pub_civil_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT adm_edif_pub_civil_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT adm_edif_pub_civil_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT adm_edif_pub_civil_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT adm_edif_pub_civil_a_tipoedifcivil_check CHECK ((tipoedifcivil = 0) OR (tipoedifcivil = 1) OR (tipoedifcivil = 2) OR (tipoedifcivil = 3) OR (tipoedifcivil = 4) OR (tipoedifcivil = 5) OR (tipoedifcivil = 6) OR (tipoedifcivil = 7) OR (tipoedifcivil = 8) OR (tipoedifcivil = 9) OR (tipoedifcivil = 22) OR (tipoedifcivil = 99)),	 CONSTRAINT adm_edif_pub_civil_a_tipousoedif_check CHECK ((tipousoedif = 0) OR (tipousoedif = 1) OR (tipousoedif = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_edif_pub_civil_a', 'features','cb_adm_edif_pub_civil_a', 'Camada adm_edif_pub_civil_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_edif_pub_civil_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_edif_pub_civil_a" AFTER INSERT ON "cb_adm_edif_pub_civil_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_edif_pub_civil_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_edif_pub_civil_a" AFTER DELETE ON "cb_adm_edif_pub_civil_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_edif_pub_civil_a'); END ;CREATE TABLE cb_adm_edif_pub_civil_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifcivil smallint NOT NULL,	 tipousoedif smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT adm_edif_pub_civil_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT adm_edif_pub_civil_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT adm_edif_pub_civil_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT adm_edif_pub_civil_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT adm_edif_pub_civil_p_tipoedifcivil_check CHECK ((tipoedifcivil = 0) OR (tipoedifcivil = 1) OR (tipoedifcivil = 2) OR (tipoedifcivil = 3) OR (tipoedifcivil = 4) OR (tipoedifcivil = 5) OR (tipoedifcivil = 6) OR (tipoedifcivil = 7) OR (tipoedifcivil = 8) OR (tipoedifcivil = 9) OR (tipoedifcivil = 22) OR (tipoedifcivil = 99)),	 CONSTRAINT adm_edif_pub_civil_p_tipousoedif_check CHECK ((tipousoedif = 0) OR (tipousoedif = 1) OR (tipousoedif = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_edif_pub_civil_p', 'features','cb_adm_edif_pub_civil_p', 'Camada adm_edif_pub_civil_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_edif_pub_civil_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_edif_pub_civil_p" AFTER INSERT ON "cb_adm_edif_pub_civil_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_edif_pub_civil_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_edif_pub_civil_p" AFTER DELETE ON "cb_adm_edif_pub_civil_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_edif_pub_civil_p'); END ;CREATE TABLE cb_adm_edif_pub_militar_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifmil smallint NOT NULL,	 tipousoedif smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT adm_edif_pub_militar_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT adm_edif_pub_militar_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT adm_edif_pub_militar_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT adm_edif_pub_militar_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT adm_edif_pub_militar_a_tipoedifmil_check CHECK ((tipoedifmil = 0) OR (tipoedifmil = 12) OR (tipoedifmil = 13) OR (tipoedifmil = 14) OR (tipoedifmil = 15) OR (tipoedifmil = 16) OR (tipoedifmil = 17) OR (tipoedifmil = 18) OR (tipoedifmil = 19) OR (tipoedifmil = 99)),	 CONSTRAINT adm_edif_pub_militar_a_tipousoedif_check CHECK ((tipousoedif = 0) OR (tipousoedif = 1) OR (tipousoedif = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_edif_pub_militar_a', 'features','cb_adm_edif_pub_militar_a', 'Camada adm_edif_pub_militar_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_edif_pub_militar_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_edif_pub_militar_a" AFTER INSERT ON "cb_adm_edif_pub_militar_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_edif_pub_militar_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_edif_pub_militar_a" AFTER DELETE ON "cb_adm_edif_pub_militar_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_edif_pub_militar_a'); END ;CREATE TABLE cb_adm_edif_pub_militar_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifmil smallint NOT NULL,	 tipousoedif smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT adm_edif_pub_militar_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT adm_edif_pub_militar_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT adm_edif_pub_militar_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT adm_edif_pub_militar_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT adm_edif_pub_militar_p_tipoedifmil_check CHECK ((tipoedifmil = 0) OR (tipoedifmil = 12) OR (tipoedifmil = 13) OR (tipoedifmil = 14) OR (tipoedifmil = 15) OR (tipoedifmil = 16) OR (tipoedifmil = 17) OR (tipoedifmil = 18) OR (tipoedifmil = 19) OR (tipoedifmil = 99)),	 CONSTRAINT adm_edif_pub_militar_p_tipousoedif_check CHECK ((tipousoedif = 0) OR (tipousoedif = 1) OR (tipousoedif = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_edif_pub_militar_p', 'features','cb_adm_edif_pub_militar_p', 'Camada adm_edif_pub_militar_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_edif_pub_militar_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_edif_pub_militar_p" AFTER INSERT ON "cb_adm_edif_pub_militar_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_edif_pub_militar_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_edif_pub_militar_p" AFTER DELETE ON "cb_adm_edif_pub_militar_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_edif_pub_militar_p'); END ;CREATE TABLE cb_adm_posto_fiscal_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipopostofisc smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT adm_posto_fiscal_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT adm_posto_fiscal_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT adm_posto_fiscal_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT adm_posto_fiscal_a_tipopostofisc_check CHECK ((tipopostofisc = 0) OR (tipopostofisc = 10) OR (tipopostofisc = 11) OR (tipopostofisc = 98) OR (tipopostofisc = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_posto_fiscal_a', 'features','cb_adm_posto_fiscal_a', 'Camada adm_posto_fiscal_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_posto_fiscal_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_posto_fiscal_a" AFTER INSERT ON "cb_adm_posto_fiscal_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_posto_fiscal_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_posto_fiscal_a" AFTER DELETE ON "cb_adm_posto_fiscal_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_posto_fiscal_a'); END ;CREATE TABLE cb_adm_posto_fiscal_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipopostofisc smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT adm_posto_fiscal_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT adm_posto_fiscal_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT adm_posto_fiscal_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT adm_posto_fiscal_p_tipopostofisc_check CHECK ((tipopostofisc = 0) OR (tipopostofisc = 10) OR (tipopostofisc = 11) OR (tipopostofisc = 98) OR (tipopostofisc = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_posto_fiscal_p', 'features','cb_adm_posto_fiscal_p', 'Camada adm_posto_fiscal_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_posto_fiscal_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_posto_fiscal_p" AFTER INSERT ON "cb_adm_posto_fiscal_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_posto_fiscal_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_posto_fiscal_p" AFTER DELETE ON "cb_adm_posto_fiscal_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_posto_fiscal_p'); END ;CREATE TABLE cb_adm_posto_pol_rod_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipopostopol smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT adm_posto_pol_rod_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT adm_posto_pol_rod_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT adm_posto_pol_rod_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT adm_posto_pol_rod_a_tipopostopol_check CHECK ((tipopostopol = 0) OR (tipopostopol = 20) OR (tipopostopol = 21)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_posto_pol_rod_a', 'features','cb_adm_posto_pol_rod_a', 'Camada adm_posto_pol_rod_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_posto_pol_rod_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_posto_pol_rod_a" AFTER INSERT ON "cb_adm_posto_pol_rod_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_posto_pol_rod_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_posto_pol_rod_a" AFTER DELETE ON "cb_adm_posto_pol_rod_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_posto_pol_rod_a'); END ;CREATE TABLE cb_adm_posto_pol_rod_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipopostopol smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT adm_posto_pol_rod_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT adm_posto_pol_rod_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT adm_posto_pol_rod_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT adm_posto_pol_rod_p_tipopostopol_check CHECK ((tipopostopol = 0) OR (tipopostopol = 20) OR (tipopostopol = 21)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_adm_posto_pol_rod_p', 'features','cb_adm_posto_pol_rod_p', 'Camada adm_posto_pol_rod_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_adm_posto_pol_rod_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_adm_posto_pol_rod_p" AFTER INSERT ON "cb_adm_posto_pol_rod_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_adm_posto_pol_rod_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_adm_posto_pol_rod_p" AFTER DELETE ON "cb_adm_posto_pol_rod_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_adm_posto_pol_rod_p'); END ;CREATE TABLE cb_asb_area_abast_agua_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT asb_area_abast_agua_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_area_abast_agua_a', 'features','cb_asb_area_abast_agua_a', 'Camada asb_area_abast_agua_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_area_abast_agua_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_area_abast_agua_a" AFTER INSERT ON "cb_asb_area_abast_agua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_area_abast_agua_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_area_abast_agua_a" AFTER DELETE ON "cb_asb_area_abast_agua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_area_abast_agua_a'); END ;CREATE TABLE cb_asb_area_saneamento_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT asb_area_saneamento_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_area_saneamento_a', 'features','cb_asb_area_saneamento_a', 'Camada asb_area_saneamento_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_area_saneamento_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_area_saneamento_a" AFTER INSERT ON "cb_asb_area_saneamento_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_area_saneamento_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_area_saneamento_a" AFTER DELETE ON "cb_asb_area_saneamento_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_area_saneamento_a'); END ;CREATE TABLE cb_asb_cemiterio_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 denominacaoassociada smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipocemiterio smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT asb_cemiterio_a_denominacaoassociada_check CHECK ((denominacaoassociada = 0) OR (denominacaoassociada = 5) OR (denominacaoassociada = 6) OR (denominacaoassociada = 7) OR (denominacaoassociada = 99)),	 CONSTRAINT asb_cemiterio_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT asb_cemiterio_a_tipocemiterio_check CHECK ((tipocemiterio = 0) OR (tipocemiterio = 1) OR (tipocemiterio = 2) OR (tipocemiterio = 3) OR (tipocemiterio = 4) OR (tipocemiterio = 5) OR (tipocemiterio = 98) OR (tipocemiterio = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_cemiterio_a', 'features','cb_asb_cemiterio_a', 'Camada asb_cemiterio_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_cemiterio_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_cemiterio_a" AFTER INSERT ON "cb_asb_cemiterio_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_cemiterio_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_cemiterio_a" AFTER DELETE ON "cb_asb_cemiterio_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_cemiterio_a'); END ;CREATE TABLE cb_asb_cemiterio_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 denominacaoassociada smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipocemiterio smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT asb_cemiterio_p_denominacaoassociada_check CHECK ((denominacaoassociada = 0) OR (denominacaoassociada = 5) OR (denominacaoassociada = 6) OR (denominacaoassociada = 7) OR (denominacaoassociada = 99)),	 CONSTRAINT asb_cemiterio_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT asb_cemiterio_p_tipocemiterio_check CHECK ((tipocemiterio = 0) OR (tipocemiterio = 1) OR (tipocemiterio = 2) OR (tipocemiterio = 3) OR (tipocemiterio = 4) OR (tipocemiterio = 5) OR (tipocemiterio = 98) OR (tipocemiterio = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_cemiterio_p', 'features','cb_asb_cemiterio_p', 'Camada asb_cemiterio_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_cemiterio_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_cemiterio_p" AFTER INSERT ON "cb_asb_cemiterio_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_cemiterio_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_cemiterio_p" AFTER DELETE ON "cb_asb_cemiterio_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_cemiterio_p'); END ;CREATE TABLE cb_asb_dep_abast_agua_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 construcao smallint NOT NULL,	 finalidade smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaoagua smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipodepabast smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT asb_dep_abast_agua_a_construcao_check CHECK ((construcao = 1) OR (construcao = 2) OR (construcao = 97)),	 CONSTRAINT asb_dep_abast_agua_a_finalidade_check CHECK ((finalidade = 0) OR (finalidade = 2) OR (finalidade = 3) OR (finalidade = 4) OR (finalidade = 8)),	 CONSTRAINT asb_dep_abast_agua_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT asb_dep_abast_agua_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT asb_dep_abast_agua_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT asb_dep_abast_agua_a_situacaoagua_check CHECK ((situacaoagua = 0) OR (situacaoagua = 6) OR (situacaoagua = 7)),	 CONSTRAINT asb_dep_abast_agua_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT asb_dep_abast_agua_a_tipodepabast_check CHECK ((tipodepabast = 0) OR (tipodepabast = 1) OR (tipodepabast = 2) OR (tipodepabast = 3) OR (tipodepabast = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_dep_abast_agua_a', 'features','cb_asb_dep_abast_agua_a', 'Camada asb_dep_abast_agua_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_dep_abast_agua_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_dep_abast_agua_a" AFTER INSERT ON "cb_asb_dep_abast_agua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_dep_abast_agua_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_dep_abast_agua_a" AFTER DELETE ON "cb_asb_dep_abast_agua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_dep_abast_agua_a'); END ;CREATE TABLE cb_asb_dep_abast_agua_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 construcao smallint NOT NULL,	 finalidade smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaoagua smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipodepabast smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT asb_dep_abast_agua_p_construcao_check CHECK ((construcao = 1) OR (construcao = 2) OR (construcao = 97)),	 CONSTRAINT asb_dep_abast_agua_p_finalidade_check CHECK ((finalidade = 0) OR (finalidade = 2) OR (finalidade = 3) OR (finalidade = 4) OR (finalidade = 8)),	 CONSTRAINT asb_dep_abast_agua_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT asb_dep_abast_agua_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT asb_dep_abast_agua_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT asb_dep_abast_agua_p_situacaoagua_check CHECK ((situacaoagua = 0) OR (situacaoagua = 6) OR (situacaoagua = 7)),	 CONSTRAINT asb_dep_abast_agua_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT asb_dep_abast_agua_p_tipodepabast_check CHECK ((tipodepabast = 0) OR (tipodepabast = 1) OR (tipodepabast = 2) OR (tipodepabast = 3) OR (tipodepabast = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_dep_abast_agua_p', 'features','cb_asb_dep_abast_agua_p', 'Camada asb_dep_abast_agua_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_dep_abast_agua_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_dep_abast_agua_p" AFTER INSERT ON "cb_asb_dep_abast_agua_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_dep_abast_agua_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_dep_abast_agua_p" AFTER DELETE ON "cb_asb_dep_abast_agua_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_dep_abast_agua_p'); END ;CREATE TABLE cb_asb_dep_saneamento_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 construcao smallint NOT NULL,	 finalidade smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 residuo smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipodepsaneam smallint NOT NULL,	 tiporesiduo smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT asb_dep_saneamento_a_construcao_check CHECK ((construcao = 1) OR (construcao = 2) OR (construcao = 97)),	 CONSTRAINT asb_dep_saneamento_a_finalidade_check CHECK ((finalidade = 0) OR (finalidade = 2) OR (finalidade = 3) OR (finalidade = 4) OR (finalidade = 8)),	 CONSTRAINT asb_dep_saneamento_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT asb_dep_saneamento_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT asb_dep_saneamento_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT asb_dep_saneamento_a_residuo_check CHECK ((residuo = 0) OR (residuo = 1) OR (residuo = 2)),	 CONSTRAINT asb_dep_saneamento_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT asb_dep_saneamento_a_tipodepsaneam_check CHECK ((tipodepsaneam = 0) OR (tipodepsaneam = 1) OR (tipodepsaneam = 4) OR (tipodepsaneam = 5) OR (tipodepsaneam = 6) OR (tipodepsaneam = 99)),	 CONSTRAINT asb_dep_saneamento_a_tiporesiduo_check CHECK ((tiporesiduo = 0) OR (tiporesiduo = 9) OR (tiporesiduo = 12) OR (tiporesiduo = 13) OR (tiporesiduo = 14) OR (tiporesiduo = 15) OR (tiporesiduo = 16) OR (tiporesiduo = 98) OR (tiporesiduo = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_dep_saneamento_a', 'features','cb_asb_dep_saneamento_a', 'Camada asb_dep_saneamento_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_dep_saneamento_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_dep_saneamento_a" AFTER INSERT ON "cb_asb_dep_saneamento_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_dep_saneamento_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_dep_saneamento_a" AFTER DELETE ON "cb_asb_dep_saneamento_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_dep_saneamento_a'); END ;CREATE TABLE cb_asb_dep_saneamento_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 construcao smallint NOT NULL,	 finalidade smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 residuo smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipodepsaneam smallint NOT NULL,	 tiporesiduo smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT asb_dep_saneamento_p_construcao_check CHECK ((construcao = 1) OR (construcao = 2) OR (construcao = 97)),	 CONSTRAINT asb_dep_saneamento_p_finalidade_check CHECK ((finalidade = 0) OR (finalidade = 2) OR (finalidade = 3) OR (finalidade = 4) OR (finalidade = 8)),	 CONSTRAINT asb_dep_saneamento_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT asb_dep_saneamento_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT asb_dep_saneamento_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT asb_dep_saneamento_p_residuo_check CHECK ((residuo = 0) OR (residuo = 1) OR (residuo = 2)),	 CONSTRAINT asb_dep_saneamento_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT asb_dep_saneamento_p_tipodepsaneam_check CHECK ((tipodepsaneam = 0) OR (tipodepsaneam = 1) OR (tipodepsaneam = 4) OR (tipodepsaneam = 5) OR (tipodepsaneam = 6) OR (tipodepsaneam = 99)),	 CONSTRAINT asb_dep_saneamento_p_tiporesiduo_check CHECK ((tiporesiduo = 0) OR (tiporesiduo = 9) OR (tiporesiduo = 12) OR (tiporesiduo = 13) OR (tiporesiduo = 14) OR (tiporesiduo = 15) OR (tiporesiduo = 16) OR (tiporesiduo = 98) OR (tiporesiduo = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_dep_saneamento_p', 'features','cb_asb_dep_saneamento_p', 'Camada asb_dep_saneamento_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_dep_saneamento_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_dep_saneamento_p" AFTER INSERT ON "cb_asb_dep_saneamento_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_dep_saneamento_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_dep_saneamento_p" AFTER DELETE ON "cb_asb_dep_saneamento_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_dep_saneamento_p'); END ;CREATE TABLE cb_asb_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT asb_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_descontinuidade_geometrica_a', 'features','cb_asb_descontinuidade_geometrica_a', 'Camada asb_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_descontinuidade_geometrica_a" AFTER INSERT ON "cb_asb_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_descontinuidade_geometrica_a" AFTER DELETE ON "cb_asb_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_asb_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT asb_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_descontinuidade_geometrica_l', 'features','cb_asb_descontinuidade_geometrica_l', 'Camada asb_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_descontinuidade_geometrica_l" AFTER INSERT ON "cb_asb_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_descontinuidade_geometrica_l" AFTER DELETE ON "cb_asb_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_asb_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT asb_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_descontinuidade_geometrica_p', 'features','cb_asb_descontinuidade_geometrica_p', 'Camada asb_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_descontinuidade_geometrica_p" AFTER INSERT ON "cb_asb_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_descontinuidade_geometrica_p" AFTER DELETE ON "cb_asb_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_asb_edif_abast_agua_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifabast smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT asb_edif_abast_agua_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT asb_edif_abast_agua_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT asb_edif_abast_agua_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT asb_edif_abast_agua_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT asb_edif_abast_agua_a_tipoedifabast_check CHECK ((tipoedifabast = 0) OR (tipoedifabast = 1) OR (tipoedifabast = 2) OR (tipoedifabast = 3) OR (tipoedifabast = 98) OR (tipoedifabast = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_edif_abast_agua_a', 'features','cb_asb_edif_abast_agua_a', 'Camada asb_edif_abast_agua_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_edif_abast_agua_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_edif_abast_agua_a" AFTER INSERT ON "cb_asb_edif_abast_agua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_edif_abast_agua_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_edif_abast_agua_a" AFTER DELETE ON "cb_asb_edif_abast_agua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_edif_abast_agua_a'); END ;CREATE TABLE cb_asb_edif_abast_agua_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifabast smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT asb_edif_abast_agua_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT asb_edif_abast_agua_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT asb_edif_abast_agua_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT asb_edif_abast_agua_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT asb_edif_abast_agua_p_tipoedifabast_check CHECK ((tipoedifabast = 0) OR (tipoedifabast = 1) OR (tipoedifabast = 2) OR (tipoedifabast = 3) OR (tipoedifabast = 98) OR (tipoedifabast = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_edif_abast_agua_p', 'features','cb_asb_edif_abast_agua_p', 'Camada asb_edif_abast_agua_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_edif_abast_agua_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_edif_abast_agua_p" AFTER INSERT ON "cb_asb_edif_abast_agua_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_edif_abast_agua_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_edif_abast_agua_p" AFTER DELETE ON "cb_asb_edif_abast_agua_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_edif_abast_agua_p'); END ;CREATE TABLE cb_asb_edif_saneamento_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifsaneam smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT asb_edif_saneamento_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT asb_edif_saneamento_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT asb_edif_saneamento_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT asb_edif_saneamento_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT asb_edif_saneamento_a_tipoedifsaneam_check CHECK ((tipoedifsaneam = 0) OR (tipoedifsaneam = 3) OR (tipoedifsaneam = 5) OR (tipoedifsaneam = 6) OR (tipoedifsaneam = 7) OR (tipoedifsaneam = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_edif_saneamento_a', 'features','cb_asb_edif_saneamento_a', 'Camada asb_edif_saneamento_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_edif_saneamento_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_edif_saneamento_a" AFTER INSERT ON "cb_asb_edif_saneamento_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_edif_saneamento_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_edif_saneamento_a" AFTER DELETE ON "cb_asb_edif_saneamento_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_edif_saneamento_a'); END ;CREATE TABLE cb_asb_edif_saneamento_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifsaneam smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT asb_edif_saneamento_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT asb_edif_saneamento_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT asb_edif_saneamento_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT asb_edif_saneamento_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT asb_edif_saneamento_p_tipoedifsaneam_check CHECK ((tipoedifsaneam = 0) OR (tipoedifsaneam = 3) OR (tipoedifsaneam = 5) OR (tipoedifsaneam = 6) OR (tipoedifsaneam = 7) OR (tipoedifsaneam = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_asb_edif_saneamento_p', 'features','cb_asb_edif_saneamento_p', 'Camada asb_edif_saneamento_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_asb_edif_saneamento_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_asb_edif_saneamento_p" AFTER INSERT ON "cb_asb_edif_saneamento_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_asb_edif_saneamento_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_asb_edif_saneamento_p" AFTER DELETE ON "cb_asb_edif_saneamento_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_asb_edif_saneamento_p'); END ;CREATE TABLE cb_eco_area_agrop_ext_veg_pesca_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 destinadoa smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_area_agrop_ext_veg_pesca_a_destinadoa_check CHECK ((destinadoa = 0) OR (destinadoa = 5) OR (destinadoa = 18) OR (destinadoa = 34) OR (destinadoa = 35) OR (destinadoa = 36) OR (destinadoa = 37) OR (destinadoa = 38) OR (destinadoa = 39) OR (destinadoa = 40) OR (destinadoa = 41) OR (destinadoa = 43) OR (destinadoa = 44) OR (destinadoa = 99)),	 CONSTRAINT eco_area_agrop_ext_veg_pesca_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_area_agrop_ext_veg_pesca_a', 'features','cb_eco_area_agrop_ext_veg_pesca_a', 'Camada eco_area_agrop_ext_veg_pesca_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_area_agrop_ext_veg_pesca_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_area_agrop_ext_veg_pesca_a" AFTER INSERT ON "cb_eco_area_agrop_ext_veg_pesca_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_area_agrop_ext_veg_pesca_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_area_agrop_ext_veg_pesca_a" AFTER DELETE ON "cb_eco_area_agrop_ext_veg_pesca_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_area_agrop_ext_veg_pesca_a'); END ;CREATE TABLE cb_eco_area_comerc_serv_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_area_comerc_serv_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_area_comerc_serv_a', 'features','cb_eco_area_comerc_serv_a', 'Camada eco_area_comerc_serv_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_area_comerc_serv_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_area_comerc_serv_a" AFTER INSERT ON "cb_eco_area_comerc_serv_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_area_comerc_serv_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_area_comerc_serv_a" AFTER DELETE ON "cb_eco_area_comerc_serv_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_area_comerc_serv_a'); END ;CREATE TABLE cb_eco_area_ext_mineral_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_area_ext_mineral_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_area_ext_mineral_a', 'features','cb_eco_area_ext_mineral_a', 'Camada eco_area_ext_mineral_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_area_ext_mineral_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_area_ext_mineral_a" AFTER INSERT ON "cb_eco_area_ext_mineral_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_area_ext_mineral_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_area_ext_mineral_a" AFTER DELETE ON "cb_eco_area_ext_mineral_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_area_ext_mineral_a'); END ;CREATE TABLE cb_eco_area_industrial_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_area_industrial_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_area_industrial_a', 'features','cb_eco_area_industrial_a', 'Camada eco_area_industrial_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_area_industrial_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_area_industrial_a" AFTER INSERT ON "cb_eco_area_industrial_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_area_industrial_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_area_industrial_a" AFTER DELETE ON "cb_eco_area_industrial_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_area_industrial_a'); END ;CREATE TABLE cb_eco_deposito_geral_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoconteudo smallint NOT NULL,	 tipodepgeral smallint NOT NULL,	 tipoexposicao smallint NOT NULL,	 tipoprodutoresiduo smallint NOT NULL,	 tratamento smallint NOT NULL,	 unidadevolume smallint NOT NULL,	 valorvolume real,	 geom MultiPolygon,	 CONSTRAINT eco_deposito_geral_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_deposito_geral_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_deposito_geral_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_deposito_geral_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_deposito_geral_a_tipoconteudo_check CHECK ((tipoconteudo = 0) OR (tipoconteudo = 1) OR (tipoconteudo = 2) OR (tipoconteudo = 3)),	 CONSTRAINT eco_deposito_geral_a_tipodepgeral_check CHECK ((tipodepgeral = 0) OR (tipodepgeral = 8) OR (tipodepgeral = 9) OR (tipodepgeral = 10) OR (tipodepgeral = 11) OR (tipodepgeral = 32) OR (tipodepgeral = 99)),	 CONSTRAINT eco_deposito_geral_a_tipoexposicao_check CHECK ((tipoexposicao = 0) OR (tipoexposicao = 3) OR (tipoexposicao = 4) OR (tipoexposicao = 5) OR (tipoexposicao = 99)),	 CONSTRAINT eco_deposito_geral_a_tipoprodutoresiduo_check CHECK ((tipoprodutoresiduo = 0) OR (tipoprodutoresiduo = 3) OR (tipoprodutoresiduo = 5) OR (tipoprodutoresiduo = 6) OR (tipoprodutoresiduo = 16) OR (tipoprodutoresiduo = 17) OR (tipoprodutoresiduo = 18) OR (tipoprodutoresiduo = 19) OR (tipoprodutoresiduo = 20) OR (tipoprodutoresiduo = 21) OR (tipoprodutoresiduo = 22) OR (tipoprodutoresiduo = 23) OR (tipoprodutoresiduo = 24) OR (tipoprodutoresiduo = 25) OR (tipoprodutoresiduo = 26) OR (tipoprodutoresiduo = 27) OR (tipoprodutoresiduo = 28) OR (tipoprodutoresiduo = 29) OR (tipoprodutoresiduo = 30) OR (tipoprodutoresiduo = 31) OR (tipoprodutoresiduo = 32) OR (tipoprodutoresiduo = 33) OR (tipoprodutoresiduo = 34) OR (tipoprodutoresiduo = 35) OR (tipoprodutoresiduo = 36) OR (tipoprodutoresiduo = 37) OR (tipoprodutoresiduo = 38) OR (tipoprodutoresiduo = 39) OR (tipoprodutoresiduo = 40) OR (tipoprodutoresiduo = 41) OR (tipoprodutoresiduo = 42) OR (tipoprodutoresiduo = 43) OR (tipoprodutoresiduo = 98) OR (tipoprodutoresiduo = 99)),	 CONSTRAINT eco_deposito_geral_a_tratamento_check CHECK ((tratamento = 0) OR (tratamento = 1) OR (tratamento = 2) OR (tratamento = 97)),	 CONSTRAINT eco_deposito_geral_a_unidadevolume_check CHECK ((unidadevolume = 0) OR (unidadevolume = 1) OR (unidadevolume = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_deposito_geral_a', 'features','cb_eco_deposito_geral_a', 'Camada eco_deposito_geral_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_deposito_geral_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_deposito_geral_a" AFTER INSERT ON "cb_eco_deposito_geral_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_deposito_geral_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_deposito_geral_a" AFTER DELETE ON "cb_eco_deposito_geral_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_deposito_geral_a'); END ;CREATE TABLE cb_eco_deposito_geral_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoconteudo smallint NOT NULL,	 tipodepgeral smallint NOT NULL,	 tipoexposicao smallint NOT NULL,	 tipoprodutoresiduo smallint NOT NULL,	 tratamento smallint NOT NULL,	 unidadevolume smallint NOT NULL,	 valorvolume real,	 geom MultiPoint,	 CONSTRAINT eco_deposito_geral_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_deposito_geral_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_deposito_geral_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_deposito_geral_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_deposito_geral_p_tipoconteudo_check CHECK ((tipoconteudo = 0) OR (tipoconteudo = 1) OR (tipoconteudo = 2) OR (tipoconteudo = 3)),	 CONSTRAINT eco_deposito_geral_p_tipodepgeral_check CHECK ((tipodepgeral = 0) OR (tipodepgeral = 8) OR (tipodepgeral = 9) OR (tipodepgeral = 10) OR (tipodepgeral = 11) OR (tipodepgeral = 32) OR (tipodepgeral = 99)),	 CONSTRAINT eco_deposito_geral_p_tipoexposicao_check CHECK ((tipoexposicao = 0) OR (tipoexposicao = 3) OR (tipoexposicao = 4) OR (tipoexposicao = 5) OR (tipoexposicao = 99)),	 CONSTRAINT eco_deposito_geral_p_tipoprodutoresiduo_check CHECK ((tipoprodutoresiduo = 0) OR (tipoprodutoresiduo = 3) OR (tipoprodutoresiduo = 5) OR (tipoprodutoresiduo = 6) OR (tipoprodutoresiduo = 16) OR (tipoprodutoresiduo = 17) OR (tipoprodutoresiduo = 18) OR (tipoprodutoresiduo = 19) OR (tipoprodutoresiduo = 20) OR (tipoprodutoresiduo = 21) OR (tipoprodutoresiduo = 22) OR (tipoprodutoresiduo = 23) OR (tipoprodutoresiduo = 24) OR (tipoprodutoresiduo = 25) OR (tipoprodutoresiduo = 26) OR (tipoprodutoresiduo = 27) OR (tipoprodutoresiduo = 28) OR (tipoprodutoresiduo = 29) OR (tipoprodutoresiduo = 30) OR (tipoprodutoresiduo = 31) OR (tipoprodutoresiduo = 32) OR (tipoprodutoresiduo = 33) OR (tipoprodutoresiduo = 34) OR (tipoprodutoresiduo = 35) OR (tipoprodutoresiduo = 36) OR (tipoprodutoresiduo = 37) OR (tipoprodutoresiduo = 38) OR (tipoprodutoresiduo = 39) OR (tipoprodutoresiduo = 40) OR (tipoprodutoresiduo = 41) OR (tipoprodutoresiduo = 42) OR (tipoprodutoresiduo = 43) OR (tipoprodutoresiduo = 98) OR (tipoprodutoresiduo = 99)),	 CONSTRAINT eco_deposito_geral_p_tratamento_check CHECK ((tratamento = 0) OR (tratamento = 1) OR (tratamento = 2) OR (tratamento = 97)),	 CONSTRAINT eco_deposito_geral_p_unidadevolume_check CHECK ((unidadevolume = 0) OR (unidadevolume = 1) OR (unidadevolume = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_deposito_geral_p', 'features','cb_eco_deposito_geral_p', 'Camada eco_deposito_geral_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_deposito_geral_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_deposito_geral_p" AFTER INSERT ON "cb_eco_deposito_geral_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_deposito_geral_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_deposito_geral_p" AFTER DELETE ON "cb_eco_deposito_geral_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_deposito_geral_p'); END ;CREATE TABLE cb_eco_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_descontinuidade_geometrica_a', 'features','cb_eco_descontinuidade_geometrica_a', 'Camada eco_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_descontinuidade_geometrica_a" AFTER INSERT ON "cb_eco_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_descontinuidade_geometrica_a" AFTER DELETE ON "cb_eco_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_eco_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT eco_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_descontinuidade_geometrica_l', 'features','cb_eco_descontinuidade_geometrica_l', 'Camada eco_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_descontinuidade_geometrica_l" AFTER INSERT ON "cb_eco_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_descontinuidade_geometrica_l" AFTER DELETE ON "cb_eco_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_eco_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT eco_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_descontinuidade_geometrica_p', 'features','cb_eco_descontinuidade_geometrica_p', 'Camada eco_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_descontinuidade_geometrica_p" AFTER INSERT ON "cb_eco_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_descontinuidade_geometrica_p" AFTER DELETE ON "cb_eco_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_eco_edif_agrop_ext_veg_pesca_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifagropec smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_edif_agrop_ext_veg_pesca_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_edif_agrop_ext_veg_pesca_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_edif_agrop_ext_veg_pesca_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_edif_agrop_ext_veg_pesca_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_edif_agrop_ext_veg_pesca_a_tipoedifagropec_check CHECK ((tipoedifagropec = 0) OR (tipoedifagropec = 12) OR (tipoedifagropec = 13) OR (tipoedifagropec = 14) OR (tipoedifagropec = 15) OR (tipoedifagropec = 16) OR (tipoedifagropec = 17) OR (tipoedifagropec = 18) OR (tipoedifagropec = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_edif_agrop_ext_veg_pesca_a', 'features','cb_eco_edif_agrop_ext_veg_pesca_a', 'Camada eco_edif_agrop_ext_veg_pesca_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_edif_agrop_ext_veg_pesca_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_edif_agrop_ext_veg_pesca_a" AFTER INSERT ON "cb_eco_edif_agrop_ext_veg_pesca_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_edif_agrop_ext_veg_pesca_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_edif_agrop_ext_veg_pesca_a" AFTER DELETE ON "cb_eco_edif_agrop_ext_veg_pesca_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_edif_agrop_ext_veg_pesca_a'); END ;CREATE TABLE cb_eco_edif_agrop_ext_veg_pesca_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifagropec smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT eco_edif_agrop_ext_veg_pesca_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_edif_agrop_ext_veg_pesca_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_edif_agrop_ext_veg_pesca_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_edif_agrop_ext_veg_pesca_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_edif_agrop_ext_veg_pesca_p_tipoedifagropec_check CHECK ((tipoedifagropec = 0) OR (tipoedifagropec = 12) OR (tipoedifagropec = 13) OR (tipoedifagropec = 14) OR (tipoedifagropec = 15) OR (tipoedifagropec = 16) OR (tipoedifagropec = 17) OR (tipoedifagropec = 18) OR (tipoedifagropec = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_edif_agrop_ext_veg_pesca_p', 'features','cb_eco_edif_agrop_ext_veg_pesca_p', 'Camada eco_edif_agrop_ext_veg_pesca_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_edif_agrop_ext_veg_pesca_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_edif_agrop_ext_veg_pesca_p" AFTER INSERT ON "cb_eco_edif_agrop_ext_veg_pesca_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_edif_agrop_ext_veg_pesca_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_edif_agrop_ext_veg_pesca_p" AFTER DELETE ON "cb_eco_edif_agrop_ext_veg_pesca_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_edif_agrop_ext_veg_pesca_p'); END ;CREATE TABLE cb_eco_edif_comerc_serv_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 finalidade smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifcomercserv smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_edif_comerc_serv_a_finalidade_check CHECK ((finalidade = 0) OR (finalidade = 1) OR (finalidade = 2) OR (finalidade = 98)),	 CONSTRAINT eco_edif_comerc_serv_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_edif_comerc_serv_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_edif_comerc_serv_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_edif_comerc_serv_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_edif_comerc_serv_a_tipoedifcomercserv_check CHECK ((tipoedifcomercserv = 0) OR (tipoedifcomercserv = 3) OR (tipoedifcomercserv = 4) OR (tipoedifcomercserv = 5) OR (tipoedifcomercserv = 6) OR (tipoedifcomercserv = 7) OR (tipoedifcomercserv = 8) OR (tipoedifcomercserv = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_edif_comerc_serv_a', 'features','cb_eco_edif_comerc_serv_a', 'Camada eco_edif_comerc_serv_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_edif_comerc_serv_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_edif_comerc_serv_a" AFTER INSERT ON "cb_eco_edif_comerc_serv_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_edif_comerc_serv_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_edif_comerc_serv_a" AFTER DELETE ON "cb_eco_edif_comerc_serv_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_edif_comerc_serv_a'); END ;CREATE TABLE cb_eco_edif_comerc_serv_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 finalidade smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifcomercserv smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT eco_edif_comerc_serv_p_finalidade_check CHECK ((finalidade = 0) OR (finalidade = 1) OR (finalidade = 2) OR (finalidade = 98)),	 CONSTRAINT eco_edif_comerc_serv_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_edif_comerc_serv_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_edif_comerc_serv_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_edif_comerc_serv_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_edif_comerc_serv_p_tipoedifcomercserv_check CHECK ((tipoedifcomercserv = 0) OR (tipoedifcomercserv = 3) OR (tipoedifcomercserv = 4) OR (tipoedifcomercserv = 5) OR (tipoedifcomercserv = 6) OR (tipoedifcomercserv = 7) OR (tipoedifcomercserv = 8) OR (tipoedifcomercserv = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_edif_comerc_serv_p', 'features','cb_eco_edif_comerc_serv_p', 'Camada eco_edif_comerc_serv_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_edif_comerc_serv_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_edif_comerc_serv_p" AFTER INSERT ON "cb_eco_edif_comerc_serv_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_edif_comerc_serv_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_edif_comerc_serv_p" AFTER DELETE ON "cb_eco_edif_comerc_serv_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_edif_comerc_serv_p'); END ;CREATE TABLE cb_eco_edif_ext_mineral_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipodivisaocnae smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_edif_ext_mineral_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_edif_ext_mineral_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_edif_ext_mineral_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_edif_ext_mineral_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_edif_ext_mineral_a_tipodivisaocnae_check CHECK ((tipodivisaocnae = 0) OR (tipodivisaocnae = 1) OR (tipodivisaocnae = 2) OR (tipodivisaocnae = 5) OR (tipodivisaocnae = 10) OR (tipodivisaocnae = 11) OR (tipodivisaocnae = 13) OR (tipodivisaocnae = 14) OR (tipodivisaocnae = 15) OR (tipodivisaocnae = 16) OR (tipodivisaocnae = 17) OR (tipodivisaocnae = 18) OR (tipodivisaocnae = 19) OR (tipodivisaocnae = 20) OR (tipodivisaocnae = 21) OR (tipodivisaocnae = 22) OR (tipodivisaocnae = 23) OR (tipodivisaocnae = 24) OR (tipodivisaocnae = 25) OR (tipodivisaocnae = 26) OR (tipodivisaocnae = 27) OR (tipodivisaocnae = 28) OR (tipodivisaocnae = 29) OR (tipodivisaocnae = 30) OR (tipodivisaocnae = 31) OR (tipodivisaocnae = 32) OR (tipodivisaocnae = 33) OR (tipodivisaocnae = 34) OR (tipodivisaocnae = 35) OR (tipodivisaocnae = 36) OR (tipodivisaocnae = 37) OR (tipodivisaocnae = 45) OR (tipodivisaocnae = 50) OR (tipodivisaocnae = 51) OR (tipodivisaocnae = 52) OR (tipodivisaocnae = 55) OR (tipodivisaocnae = 74) OR (tipodivisaocnae = 92) OR (tipodivisaocnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_edif_ext_mineral_a', 'features','cb_eco_edif_ext_mineral_a', 'Camada eco_edif_ext_mineral_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_edif_ext_mineral_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_edif_ext_mineral_a" AFTER INSERT ON "cb_eco_edif_ext_mineral_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_edif_ext_mineral_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_edif_ext_mineral_a" AFTER DELETE ON "cb_eco_edif_ext_mineral_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_edif_ext_mineral_a'); END ;CREATE TABLE cb_eco_edif_ext_mineral_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipodivisaocnae smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT eco_edif_ext_mineral_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_edif_ext_mineral_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_edif_ext_mineral_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_edif_ext_mineral_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_edif_ext_mineral_p_tipodivisaocnae_check CHECK ((tipodivisaocnae = 0) OR (tipodivisaocnae = 1) OR (tipodivisaocnae = 2) OR (tipodivisaocnae = 5) OR (tipodivisaocnae = 10) OR (tipodivisaocnae = 11) OR (tipodivisaocnae = 13) OR (tipodivisaocnae = 14) OR (tipodivisaocnae = 15) OR (tipodivisaocnae = 16) OR (tipodivisaocnae = 17) OR (tipodivisaocnae = 18) OR (tipodivisaocnae = 19) OR (tipodivisaocnae = 20) OR (tipodivisaocnae = 21) OR (tipodivisaocnae = 22) OR (tipodivisaocnae = 23) OR (tipodivisaocnae = 24) OR (tipodivisaocnae = 25) OR (tipodivisaocnae = 26) OR (tipodivisaocnae = 27) OR (tipodivisaocnae = 28) OR (tipodivisaocnae = 29) OR (tipodivisaocnae = 30) OR (tipodivisaocnae = 31) OR (tipodivisaocnae = 32) OR (tipodivisaocnae = 33) OR (tipodivisaocnae = 34) OR (tipodivisaocnae = 35) OR (tipodivisaocnae = 36) OR (tipodivisaocnae = 37) OR (tipodivisaocnae = 45) OR (tipodivisaocnae = 50) OR (tipodivisaocnae = 51) OR (tipodivisaocnae = 52) OR (tipodivisaocnae = 55) OR (tipodivisaocnae = 74) OR (tipodivisaocnae = 92) OR (tipodivisaocnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_edif_ext_mineral_p', 'features','cb_eco_edif_ext_mineral_p', 'Camada eco_edif_ext_mineral_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_edif_ext_mineral_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_edif_ext_mineral_p" AFTER INSERT ON "cb_eco_edif_ext_mineral_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_edif_ext_mineral_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_edif_ext_mineral_p" AFTER DELETE ON "cb_eco_edif_ext_mineral_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_edif_ext_mineral_p'); END ;CREATE TABLE cb_eco_edif_industrial_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 chamine smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipodivisaocnae smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_edif_industrial_a_chamine_check CHECK ((chamine = 1) OR (chamine = 2)),	 CONSTRAINT eco_edif_industrial_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_edif_industrial_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_edif_industrial_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_edif_industrial_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_edif_industrial_a_tipodivisaocnae_check CHECK ((tipodivisaocnae = 0) OR (tipodivisaocnae = 1) OR (tipodivisaocnae = 2) OR (tipodivisaocnae = 5) OR (tipodivisaocnae = 10) OR (tipodivisaocnae = 11) OR (tipodivisaocnae = 13) OR (tipodivisaocnae = 14) OR (tipodivisaocnae = 15) OR (tipodivisaocnae = 16) OR (tipodivisaocnae = 17) OR (tipodivisaocnae = 18) OR (tipodivisaocnae = 19) OR (tipodivisaocnae = 20) OR (tipodivisaocnae = 21) OR (tipodivisaocnae = 22) OR (tipodivisaocnae = 23) OR (tipodivisaocnae = 24) OR (tipodivisaocnae = 25) OR (tipodivisaocnae = 26) OR (tipodivisaocnae = 27) OR (tipodivisaocnae = 28) OR (tipodivisaocnae = 29) OR (tipodivisaocnae = 30) OR (tipodivisaocnae = 31) OR (tipodivisaocnae = 32) OR (tipodivisaocnae = 33) OR (tipodivisaocnae = 34) OR (tipodivisaocnae = 35) OR (tipodivisaocnae = 36) OR (tipodivisaocnae = 37) OR (tipodivisaocnae = 45) OR (tipodivisaocnae = 50) OR (tipodivisaocnae = 51) OR (tipodivisaocnae = 52) OR (tipodivisaocnae = 55) OR (tipodivisaocnae = 74) OR (tipodivisaocnae = 92) OR (tipodivisaocnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_edif_industrial_a', 'features','cb_eco_edif_industrial_a', 'Camada eco_edif_industrial_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_edif_industrial_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_edif_industrial_a" AFTER INSERT ON "cb_eco_edif_industrial_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_edif_industrial_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_edif_industrial_a" AFTER DELETE ON "cb_eco_edif_industrial_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_edif_industrial_a'); END ;CREATE TABLE cb_eco_edif_industrial_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 chamine smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipodivisaocnae smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT eco_edif_industrial_p_chamine_check CHECK ((chamine = 1) OR (chamine = 2)),	 CONSTRAINT eco_edif_industrial_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_edif_industrial_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_edif_industrial_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_edif_industrial_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_edif_industrial_p_tipodivisaocnae_check CHECK ((tipodivisaocnae = 0) OR (tipodivisaocnae = 1) OR (tipodivisaocnae = 2) OR (tipodivisaocnae = 5) OR (tipodivisaocnae = 10) OR (tipodivisaocnae = 11) OR (tipodivisaocnae = 13) OR (tipodivisaocnae = 14) OR (tipodivisaocnae = 15) OR (tipodivisaocnae = 16) OR (tipodivisaocnae = 17) OR (tipodivisaocnae = 18) OR (tipodivisaocnae = 19) OR (tipodivisaocnae = 20) OR (tipodivisaocnae = 21) OR (tipodivisaocnae = 22) OR (tipodivisaocnae = 23) OR (tipodivisaocnae = 24) OR (tipodivisaocnae = 25) OR (tipodivisaocnae = 26) OR (tipodivisaocnae = 27) OR (tipodivisaocnae = 28) OR (tipodivisaocnae = 29) OR (tipodivisaocnae = 30) OR (tipodivisaocnae = 31) OR (tipodivisaocnae = 32) OR (tipodivisaocnae = 33) OR (tipodivisaocnae = 34) OR (tipodivisaocnae = 35) OR (tipodivisaocnae = 36) OR (tipodivisaocnae = 37) OR (tipodivisaocnae = 45) OR (tipodivisaocnae = 50) OR (tipodivisaocnae = 51) OR (tipodivisaocnae = 52) OR (tipodivisaocnae = 55) OR (tipodivisaocnae = 74) OR (tipodivisaocnae = 92) OR (tipodivisaocnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_edif_industrial_p', 'features','cb_eco_edif_industrial_p', 'Camada eco_edif_industrial_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_edif_industrial_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_edif_industrial_p" AFTER INSERT ON "cb_eco_edif_industrial_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_edif_industrial_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_edif_industrial_p" AFTER DELETE ON "cb_eco_edif_industrial_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_edif_industrial_p'); END ;CREATE TABLE cb_eco_equip_agropec_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoequipagropec smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_equip_agropec_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_equip_agropec_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_equip_agropec_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_equip_agropec_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_equip_agropec_a_tipoequipagropec_check CHECK ((tipoequipagropec = 0) OR (tipoequipagropec = 1) OR (tipoequipagropec = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_equip_agropec_a', 'features','cb_eco_equip_agropec_a', 'Camada eco_equip_agropec_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_equip_agropec_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_equip_agropec_a" AFTER INSERT ON "cb_eco_equip_agropec_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_equip_agropec_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_equip_agropec_a" AFTER DELETE ON "cb_eco_equip_agropec_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_equip_agropec_a'); END ;CREATE TABLE cb_eco_equip_agropec_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoequipagropec smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT eco_equip_agropec_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_equip_agropec_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_equip_agropec_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_equip_agropec_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_equip_agropec_l_tipoequipagropec_check CHECK ((tipoequipagropec = 0) OR (tipoequipagropec = 1) OR (tipoequipagropec = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_equip_agropec_l', 'features','cb_eco_equip_agropec_l', 'Camada eco_equip_agropec_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_equip_agropec_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_equip_agropec_l" AFTER INSERT ON "cb_eco_equip_agropec_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_equip_agropec_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_equip_agropec_l" AFTER DELETE ON "cb_eco_equip_agropec_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_equip_agropec_l'); END ;CREATE TABLE cb_eco_equip_agropec_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoequipagropec smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT eco_equip_agropec_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_equip_agropec_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT eco_equip_agropec_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_equip_agropec_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_equip_agropec_p_tipoequipagropec_check CHECK ((tipoequipagropec = 0) OR (tipoequipagropec = 1) OR (tipoequipagropec = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_equip_agropec_p', 'features','cb_eco_equip_agropec_p', 'Camada eco_equip_agropec_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_equip_agropec_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_equip_agropec_p" AFTER INSERT ON "cb_eco_equip_agropec_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_equip_agropec_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_equip_agropec_p" AFTER DELETE ON "cb_eco_equip_agropec_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_equip_agropec_p'); END ;CREATE TABLE cb_eco_ext_mineral_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 atividade smallint NOT NULL,	 formaextracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 procextracao smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoextmin smallint NOT NULL,	 tipopocomina smallint NOT NULL,	 tipoprodutoresiduo smallint NOT NULL,	 tiposecaocnae smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_ext_mineral_a_atividade_check CHECK ((atividade = 0) OR (atividade = 9) OR (atividade = 10)),	 CONSTRAINT eco_ext_mineral_a_formaextracao_check CHECK ((formaextracao = 0) OR (formaextracao = 5) OR (formaextracao = 6)),	 CONSTRAINT eco_ext_mineral_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_ext_mineral_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_ext_mineral_a_procextracao_check CHECK ((procextracao = 0) OR (procextracao = 1) OR (procextracao = 2)),	 CONSTRAINT eco_ext_mineral_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_ext_mineral_a_tipoextmin_check CHECK ((tipoextmin = 0) OR (tipoextmin = 1) OR (tipoextmin = 4) OR (tipoextmin = 5) OR (tipoextmin = 6) OR (tipoextmin = 7) OR (tipoextmin = 8) OR (tipoextmin = 99)),	 CONSTRAINT eco_ext_mineral_a_tipopocomina_check CHECK ((tipopocomina = 0) OR (tipopocomina = 2) OR (tipopocomina = 3) OR (tipopocomina = 97)),	 CONSTRAINT eco_ext_mineral_a_tipoprodutoresiduo_check CHECK ((tipoprodutoresiduo = 0) OR (tipoprodutoresiduo = 3) OR (tipoprodutoresiduo = 5) OR (tipoprodutoresiduo = 6) OR (tipoprodutoresiduo = 16) OR (tipoprodutoresiduo = 17) OR (tipoprodutoresiduo = 18) OR (tipoprodutoresiduo = 19) OR (tipoprodutoresiduo = 20) OR (tipoprodutoresiduo = 21) OR (tipoprodutoresiduo = 22) OR (tipoprodutoresiduo = 23) OR (tipoprodutoresiduo = 24) OR (tipoprodutoresiduo = 25) OR (tipoprodutoresiduo = 26) OR (tipoprodutoresiduo = 27) OR (tipoprodutoresiduo = 28) OR (tipoprodutoresiduo = 29) OR (tipoprodutoresiduo = 30) OR (tipoprodutoresiduo = 31) OR (tipoprodutoresiduo = 32) OR (tipoprodutoresiduo = 33) OR (tipoprodutoresiduo = 34) OR (tipoprodutoresiduo = 35) OR (tipoprodutoresiduo = 36) OR (tipoprodutoresiduo = 37) OR (tipoprodutoresiduo = 38) OR (tipoprodutoresiduo = 39) OR (tipoprodutoresiduo = 40) OR (tipoprodutoresiduo = 41) OR (tipoprodutoresiduo = 42) OR (tipoprodutoresiduo = 43) OR (tipoprodutoresiduo = 98) OR (tipoprodutoresiduo = 99)),	 CONSTRAINT eco_ext_mineral_a_tiposecaocnae_check CHECK ((tiposecaocnae = 0) OR (tiposecaocnae = 1) OR (tiposecaocnae = 2) OR (tiposecaocnae = 3) OR (tiposecaocnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_ext_mineral_a', 'features','cb_eco_ext_mineral_a', 'Camada eco_ext_mineral_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_ext_mineral_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_ext_mineral_a" AFTER INSERT ON "cb_eco_ext_mineral_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_ext_mineral_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_ext_mineral_a" AFTER DELETE ON "cb_eco_ext_mineral_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_ext_mineral_a'); END ;CREATE TABLE cb_eco_ext_mineral_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 atividade smallint NOT NULL,	 formaextracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 procextracao smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoextmin smallint NOT NULL,	 tipopocomina smallint NOT NULL,	 tipoprodutoresiduo smallint NOT NULL,	 tiposecaocnae smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT eco_ext_mineral_p_atividade_check CHECK ((atividade = 0) OR (atividade = 9) OR (atividade = 10)),	 CONSTRAINT eco_ext_mineral_p_formaextracao_check CHECK ((formaextracao = 0) OR (formaextracao = 5) OR (formaextracao = 6)),	 CONSTRAINT eco_ext_mineral_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_ext_mineral_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT eco_ext_mineral_p_procextracao_check CHECK ((procextracao = 0) OR (procextracao = 1) OR (procextracao = 2)),	 CONSTRAINT eco_ext_mineral_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT eco_ext_mineral_p_tipoextmin_check CHECK ((tipoextmin = 0) OR (tipoextmin = 1) OR (tipoextmin = 4) OR (tipoextmin = 5) OR (tipoextmin = 6) OR (tipoextmin = 7) OR (tipoextmin = 8) OR (tipoextmin = 99)),	 CONSTRAINT eco_ext_mineral_p_tipopocomina_check CHECK ((tipopocomina = 0) OR (tipopocomina = 2) OR (tipopocomina = 3) OR (tipopocomina = 97)),	 CONSTRAINT eco_ext_mineral_p_tipoprodutoresiduo_check CHECK ((tipoprodutoresiduo = 0) OR (tipoprodutoresiduo = 3) OR (tipoprodutoresiduo = 5) OR (tipoprodutoresiduo = 6) OR (tipoprodutoresiduo = 16) OR (tipoprodutoresiduo = 17) OR (tipoprodutoresiduo = 18) OR (tipoprodutoresiduo = 19) OR (tipoprodutoresiduo = 20) OR (tipoprodutoresiduo = 21) OR (tipoprodutoresiduo = 22) OR (tipoprodutoresiduo = 23) OR (tipoprodutoresiduo = 24) OR (tipoprodutoresiduo = 25) OR (tipoprodutoresiduo = 26) OR (tipoprodutoresiduo = 27) OR (tipoprodutoresiduo = 28) OR (tipoprodutoresiduo = 29) OR (tipoprodutoresiduo = 30) OR (tipoprodutoresiduo = 31) OR (tipoprodutoresiduo = 32) OR (tipoprodutoresiduo = 33) OR (tipoprodutoresiduo = 34) OR (tipoprodutoresiduo = 35) OR (tipoprodutoresiduo = 36) OR (tipoprodutoresiduo = 37) OR (tipoprodutoresiduo = 38) OR (tipoprodutoresiduo = 39) OR (tipoprodutoresiduo = 40) OR (tipoprodutoresiduo = 41) OR (tipoprodutoresiduo = 42) OR (tipoprodutoresiduo = 43) OR (tipoprodutoresiduo = 98) OR (tipoprodutoresiduo = 99)),	 CONSTRAINT eco_ext_mineral_p_tiposecaocnae_check CHECK ((tiposecaocnae = 0) OR (tiposecaocnae = 1) OR (tiposecaocnae = 2) OR (tiposecaocnae = 3) OR (tiposecaocnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_ext_mineral_p', 'features','cb_eco_ext_mineral_p', 'Camada eco_ext_mineral_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_ext_mineral_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_ext_mineral_p" AFTER INSERT ON "cb_eco_ext_mineral_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_ext_mineral_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_ext_mineral_p" AFTER DELETE ON "cb_eco_ext_mineral_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_ext_mineral_p'); END ;CREATE TABLE cb_eco_plataforma_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoplataforma smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT eco_plataforma_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_plataforma_a_tipoplataforma_check CHECK ((tipoplataforma = 0) OR (tipoplataforma = 3) OR (tipoplataforma = 5) OR (tipoplataforma = 98)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_plataforma_a', 'features','cb_eco_plataforma_a', 'Camada eco_plataforma_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_plataforma_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_plataforma_a" AFTER INSERT ON "cb_eco_plataforma_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_plataforma_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_plataforma_a" AFTER DELETE ON "cb_eco_plataforma_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_plataforma_a'); END ;CREATE TABLE cb_eco_plataforma_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoplataforma smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT eco_plataforma_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT eco_plataforma_p_tipoplataforma_check CHECK ((tipoplataforma = 0) OR (tipoplataforma = 3) OR (tipoplataforma = 5) OR (tipoplataforma = 98)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_eco_plataforma_p', 'features','cb_eco_plataforma_p', 'Camada eco_plataforma_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_eco_plataforma_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_eco_plataforma_p" AFTER INSERT ON "cb_eco_plataforma_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_eco_plataforma_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_eco_plataforma_p" AFTER DELETE ON "cb_eco_plataforma_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_eco_plataforma_p'); END ;CREATE TABLE cb_edu_area_ensino_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_area_ensino_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_area_ensino_a', 'features','cb_edu_area_ensino_a', 'Camada edu_area_ensino_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_area_ensino_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_area_ensino_a" AFTER INSERT ON "cb_edu_area_ensino_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_area_ensino_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_area_ensino_a" AFTER DELETE ON "cb_edu_area_ensino_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_area_ensino_a'); END ;CREATE TABLE cb_edu_area_lazer_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_area_lazer_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_area_lazer_a', 'features','cb_edu_area_lazer_a', 'Camada edu_area_lazer_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_area_lazer_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_area_lazer_a" AFTER INSERT ON "cb_edu_area_lazer_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_area_lazer_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_area_lazer_a" AFTER DELETE ON "cb_edu_area_lazer_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_area_lazer_a'); END ;CREATE TABLE cb_edu_area_religiosa_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_area_religiosa_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_area_religiosa_a', 'features','cb_edu_area_religiosa_a', 'Camada edu_area_religiosa_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_area_religiosa_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_area_religiosa_a" AFTER INSERT ON "cb_edu_area_religiosa_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_area_religiosa_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_area_religiosa_a" AFTER DELETE ON "cb_edu_area_religiosa_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_area_religiosa_a'); END ;CREATE TABLE cb_edu_area_ruinas_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_area_ruinas_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_area_ruinas_a', 'features','cb_edu_area_ruinas_a', 'Camada edu_area_ruinas_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_area_ruinas_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_area_ruinas_a" AFTER INSERT ON "cb_edu_area_ruinas_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_area_ruinas_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_area_ruinas_a" AFTER DELETE ON "cb_edu_area_ruinas_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_area_ruinas_a'); END ;CREATE TABLE cb_edu_arquibancada_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_arquibancada_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_arquibancada_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_arquibancada_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_arquibancada_a', 'features','cb_edu_arquibancada_a', 'Camada edu_arquibancada_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_arquibancada_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_arquibancada_a" AFTER INSERT ON "cb_edu_arquibancada_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_arquibancada_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_arquibancada_a" AFTER DELETE ON "cb_edu_arquibancada_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_arquibancada_a'); END ;CREATE TABLE cb_edu_arquibancada_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT edu_arquibancada_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_arquibancada_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_arquibancada_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_arquibancada_p', 'features','cb_edu_arquibancada_p', 'Camada edu_arquibancada_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_arquibancada_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_arquibancada_p" AFTER INSERT ON "cb_edu_arquibancada_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_arquibancada_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_arquibancada_p" AFTER DELETE ON "cb_edu_arquibancada_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_arquibancada_p'); END ;CREATE TABLE cb_edu_campo_quadra_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipocampoquadra smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_campo_quadra_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_campo_quadra_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_campo_quadra_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_campo_quadra_a_tipocampoquadra_check CHECK ((tipocampoquadra = 0) OR (tipocampoquadra = 1) OR (tipocampoquadra = 2) OR (tipocampoquadra = 3) OR (tipocampoquadra = 4) OR (tipocampoquadra = 5) OR (tipocampoquadra = 6) OR (tipocampoquadra = 7) OR (tipocampoquadra = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_campo_quadra_a', 'features','cb_edu_campo_quadra_a', 'Camada edu_campo_quadra_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_campo_quadra_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_campo_quadra_a" AFTER INSERT ON "cb_edu_campo_quadra_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_campo_quadra_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_campo_quadra_a" AFTER DELETE ON "cb_edu_campo_quadra_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_campo_quadra_a'); END ;CREATE TABLE cb_edu_campo_quadra_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipocampoquadra smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT edu_campo_quadra_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_campo_quadra_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_campo_quadra_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_campo_quadra_p_tipocampoquadra_check CHECK ((tipocampoquadra = 0) OR (tipocampoquadra = 1) OR (tipocampoquadra = 2) OR (tipocampoquadra = 3) OR (tipocampoquadra = 4) OR (tipocampoquadra = 5) OR (tipocampoquadra = 6) OR (tipocampoquadra = 7) OR (tipocampoquadra = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_campo_quadra_p', 'features','cb_edu_campo_quadra_p', 'Camada edu_campo_quadra_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_campo_quadra_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_campo_quadra_p" AFTER INSERT ON "cb_edu_campo_quadra_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_campo_quadra_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_campo_quadra_p" AFTER DELETE ON "cb_edu_campo_quadra_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_campo_quadra_p'); END ;CREATE TABLE cb_edu_coreto_tribuna_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_coreto_tribuna_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_coreto_tribuna_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_coreto_tribuna_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_coreto_tribuna_a', 'features','cb_edu_coreto_tribuna_a', 'Camada edu_coreto_tribuna_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_coreto_tribuna_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_coreto_tribuna_a" AFTER INSERT ON "cb_edu_coreto_tribuna_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_coreto_tribuna_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_coreto_tribuna_a" AFTER DELETE ON "cb_edu_coreto_tribuna_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_coreto_tribuna_a'); END ;CREATE TABLE cb_edu_coreto_tribuna_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT edu_coreto_tribuna_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_coreto_tribuna_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_coreto_tribuna_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_coreto_tribuna_p', 'features','cb_edu_coreto_tribuna_p', 'Camada edu_coreto_tribuna_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_coreto_tribuna_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_coreto_tribuna_p" AFTER INSERT ON "cb_edu_coreto_tribuna_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_coreto_tribuna_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_coreto_tribuna_p" AFTER DELETE ON "cb_edu_coreto_tribuna_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_coreto_tribuna_p'); END ;CREATE TABLE cb_edu_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_descontinuidade_geometrica_a', 'features','cb_edu_descontinuidade_geometrica_a', 'Camada edu_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_descontinuidade_geometrica_a" AFTER INSERT ON "cb_edu_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_descontinuidade_geometrica_a" AFTER DELETE ON "cb_edu_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_edu_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT edu_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_descontinuidade_geometrica_l', 'features','cb_edu_descontinuidade_geometrica_l', 'Camada edu_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_descontinuidade_geometrica_l" AFTER INSERT ON "cb_edu_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_descontinuidade_geometrica_l" AFTER DELETE ON "cb_edu_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_edu_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT edu_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_descontinuidade_geometrica_p', 'features','cb_edu_descontinuidade_geometrica_p', 'Camada edu_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_descontinuidade_geometrica_p" AFTER INSERT ON "cb_edu_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_descontinuidade_geometrica_p" AFTER DELETE ON "cb_edu_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_edu_edif_const_lazer_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoediflazer smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_edif_const_lazer_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_edif_const_lazer_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT edu_edif_const_lazer_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_edif_const_lazer_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_edif_const_lazer_a_tipoediflazer_check CHECK ((tipoediflazer = 0) OR (tipoediflazer = 1) OR (tipoediflazer = 2) OR (tipoediflazer = 3) OR (tipoediflazer = 4) OR (tipoediflazer = 5) OR (tipoediflazer = 6) OR (tipoediflazer = 7) OR (tipoediflazer = 8) OR (tipoediflazer = 9) OR (tipoediflazer = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_edif_const_lazer_a', 'features','cb_edu_edif_const_lazer_a', 'Camada edu_edif_const_lazer_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_edif_const_lazer_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_edif_const_lazer_a" AFTER INSERT ON "cb_edu_edif_const_lazer_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_edif_const_lazer_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_edif_const_lazer_a" AFTER DELETE ON "cb_edu_edif_const_lazer_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_edif_const_lazer_a'); END ;CREATE TABLE cb_edu_edif_const_lazer_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoediflazer smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT edu_edif_const_lazer_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_edif_const_lazer_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT edu_edif_const_lazer_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_edif_const_lazer_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_edif_const_lazer_p_tipoediflazer_check CHECK ((tipoediflazer = 0) OR (tipoediflazer = 1) OR (tipoediflazer = 2) OR (tipoediflazer = 3) OR (tipoediflazer = 4) OR (tipoediflazer = 5) OR (tipoediflazer = 6) OR (tipoediflazer = 7) OR (tipoediflazer = 8) OR (tipoediflazer = 9) OR (tipoediflazer = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_edif_const_lazer_p', 'features','cb_edu_edif_const_lazer_p', 'Camada edu_edif_const_lazer_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_edif_const_lazer_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_edif_const_lazer_p" AFTER INSERT ON "cb_edu_edif_const_lazer_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_edif_const_lazer_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_edif_const_lazer_p" AFTER DELETE ON "cb_edu_edif_const_lazer_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_edif_const_lazer_p'); END ;CREATE TABLE cb_edu_edif_const_turistica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 ovgd smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifturist smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_edif_const_turistica_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_edif_const_turistica_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT edu_edif_const_turistica_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_edif_const_turistica_a_ovgd_check CHECK ((ovgd = 0) OR (ovgd = 1) OR (ovgd = 2)),	 CONSTRAINT edu_edif_const_turistica_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_edif_const_turistica_a_tipoedifturist_check CHECK ((tipoedifturist = 0) OR (tipoedifturist = 9) OR (tipoedifturist = 10) OR (tipoedifturist = 11) OR (tipoedifturist = 12) OR (tipoedifturist = 13) OR (tipoedifturist = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_edif_const_turistica_a', 'features','cb_edu_edif_const_turistica_a', 'Camada edu_edif_const_turistica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_edif_const_turistica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_edif_const_turistica_a" AFTER INSERT ON "cb_edu_edif_const_turistica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_edif_const_turistica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_edif_const_turistica_a" AFTER DELETE ON "cb_edu_edif_const_turistica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_edif_const_turistica_a'); END ;CREATE TABLE cb_edu_edif_const_turistica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 ovgd smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifturist smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT edu_edif_const_turistica_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_edif_const_turistica_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT edu_edif_const_turistica_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_edif_const_turistica_p_ovgd_check CHECK ((ovgd = 0) OR (ovgd = 1) OR (ovgd = 2)),	 CONSTRAINT edu_edif_const_turistica_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_edif_const_turistica_p_tipoedifturist_check CHECK ((tipoedifturist = 0) OR (tipoedifturist = 9) OR (tipoedifturist = 10) OR (tipoedifturist = 11) OR (tipoedifturist = 12) OR (tipoedifturist = 13) OR (tipoedifturist = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_edif_const_turistica_p', 'features','cb_edu_edif_const_turistica_p', 'Camada edu_edif_const_turistica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_edif_const_turistica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_edif_const_turistica_p" AFTER INSERT ON "cb_edu_edif_const_turistica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_edif_const_turistica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_edif_const_turistica_p" AFTER DELETE ON "cb_edu_edif_const_turistica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_edif_const_turistica_p'); END ;CREATE TABLE cb_edu_edif_ensino_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoclassecnae smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_edif_ensino_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_edif_ensino_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT edu_edif_ensino_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_edif_ensino_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_edif_ensino_a_tipoclassecnae_check CHECK ((tipoclassecnae = 0) OR (tipoclassecnae = 1) OR (tipoclassecnae = 2) OR (tipoclassecnae = 3) OR (tipoclassecnae = 4) OR (tipoclassecnae = 5) OR (tipoclassecnae = 6) OR (tipoclassecnae = 7) OR (tipoclassecnae = 8) OR (tipoclassecnae = 9) OR (tipoclassecnae = 10) OR (tipoclassecnae = 11) OR (tipoclassecnae = 12) OR (tipoclassecnae = 13) OR (tipoclassecnae = 14) OR (tipoclassecnae = 15) OR (tipoclassecnae = 16) OR (tipoclassecnae = 17) OR (tipoclassecnae = 18) OR (tipoclassecnae = 19) OR (tipoclassecnae = 20) OR (tipoclassecnae = 21) OR (tipoclassecnae = 22) OR (tipoclassecnae = 23) OR (tipoclassecnae = 24) OR (tipoclassecnae = 25) OR (tipoclassecnae = 26) OR (tipoclassecnae = 27) OR (tipoclassecnae = 28) OR (tipoclassecnae = 29) OR (tipoclassecnae = 30) OR (tipoclassecnae = 31) OR (tipoclassecnae = 32) OR (tipoclassecnae = 33) OR (tipoclassecnae = 34) OR (tipoclassecnae = 35) OR (tipoclassecnae = 97) OR (tipoclassecnae = 98) OR (tipoclassecnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_edif_ensino_a', 'features','cb_edu_edif_ensino_a', 'Camada edu_edif_ensino_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_edif_ensino_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_edif_ensino_a" AFTER INSERT ON "cb_edu_edif_ensino_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_edif_ensino_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_edif_ensino_a" AFTER DELETE ON "cb_edu_edif_ensino_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_edif_ensino_a'); END ;CREATE TABLE cb_edu_edif_ensino_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoclassecnae smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT edu_edif_ensino_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_edif_ensino_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT edu_edif_ensino_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_edif_ensino_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_edif_ensino_p_tipoclassecnae_check CHECK ((tipoclassecnae = 0) OR (tipoclassecnae = 1) OR (tipoclassecnae = 2) OR (tipoclassecnae = 3) OR (tipoclassecnae = 4) OR (tipoclassecnae = 5) OR (tipoclassecnae = 6) OR (tipoclassecnae = 7) OR (tipoclassecnae = 8) OR (tipoclassecnae = 9) OR (tipoclassecnae = 10) OR (tipoclassecnae = 11) OR (tipoclassecnae = 12) OR (tipoclassecnae = 13) OR (tipoclassecnae = 14) OR (tipoclassecnae = 15) OR (tipoclassecnae = 16) OR (tipoclassecnae = 17) OR (tipoclassecnae = 18) OR (tipoclassecnae = 19) OR (tipoclassecnae = 20) OR (tipoclassecnae = 21) OR (tipoclassecnae = 22) OR (tipoclassecnae = 23) OR (tipoclassecnae = 24) OR (tipoclassecnae = 25) OR (tipoclassecnae = 26) OR (tipoclassecnae = 27) OR (tipoclassecnae = 28) OR (tipoclassecnae = 29) OR (tipoclassecnae = 30) OR (tipoclassecnae = 31) OR (tipoclassecnae = 32) OR (tipoclassecnae = 33) OR (tipoclassecnae = 34) OR (tipoclassecnae = 35) OR (tipoclassecnae = 97) OR (tipoclassecnae = 98) OR (tipoclassecnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_edif_ensino_p', 'features','cb_edu_edif_ensino_p', 'Camada edu_edif_ensino_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_edif_ensino_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_edif_ensino_p" AFTER INSERT ON "cb_edu_edif_ensino_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_edif_ensino_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_edif_ensino_p" AFTER DELETE ON "cb_edu_edif_ensino_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_edif_ensino_p'); END ;CREATE TABLE cb_edu_edif_religiosa_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 ensino smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 religiao varchar(255),	 situacaofisica smallint NOT NULL,	 tipoedifrelig smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_edif_religiosa_a_ensino_check CHECK ((ensino = 0) OR (ensino = 1) OR (ensino = 2)),	 CONSTRAINT edu_edif_religiosa_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_edif_religiosa_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT edu_edif_religiosa_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_edif_religiosa_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_edif_religiosa_a_tipoedifrelig_check CHECK ((tipoedifrelig = 0) OR (tipoedifrelig = 1) OR (tipoedifrelig = 2) OR (tipoedifrelig = 3) OR (tipoedifrelig = 4) OR (tipoedifrelig = 5) OR (tipoedifrelig = 6) OR (tipoedifrelig = 7) OR (tipoedifrelig = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_edif_religiosa_a', 'features','cb_edu_edif_religiosa_a', 'Camada edu_edif_religiosa_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_edif_religiosa_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_edif_religiosa_a" AFTER INSERT ON "cb_edu_edif_religiosa_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_edif_religiosa_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_edif_religiosa_a" AFTER DELETE ON "cb_edu_edif_religiosa_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_edif_religiosa_a'); END ;CREATE TABLE cb_edu_edif_religiosa_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 ensino smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 religiao varchar(255),	 situacaofisica smallint NOT NULL,	 tipoedifrelig smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT edu_edif_religiosa_p_ensino_check CHECK ((ensino = 0) OR (ensino = 1) OR (ensino = 2)),	 CONSTRAINT edu_edif_religiosa_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_edif_religiosa_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT edu_edif_religiosa_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_edif_religiosa_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_edif_religiosa_p_tipoedifrelig_check CHECK ((tipoedifrelig = 0) OR (tipoedifrelig = 1) OR (tipoedifrelig = 2) OR (tipoedifrelig = 3) OR (tipoedifrelig = 4) OR (tipoedifrelig = 5) OR (tipoedifrelig = 6) OR (tipoedifrelig = 7) OR (tipoedifrelig = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_edif_religiosa_p', 'features','cb_edu_edif_religiosa_p', 'Camada edu_edif_religiosa_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_edif_religiosa_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_edif_religiosa_p" AFTER INSERT ON "cb_edu_edif_religiosa_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_edif_religiosa_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_edif_religiosa_p" AFTER DELETE ON "cb_edu_edif_religiosa_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_edif_religiosa_p'); END ;CREATE TABLE cb_edu_piscina_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT edu_piscina_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_piscina_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_piscina_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_piscina_a', 'features','cb_edu_piscina_a', 'Camada edu_piscina_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_piscina_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_piscina_a" AFTER INSERT ON "cb_edu_piscina_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_piscina_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_piscina_a" AFTER DELETE ON "cb_edu_piscina_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_piscina_a'); END ;CREATE TABLE cb_edu_pista_competicao_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipopista smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT edu_pista_competicao_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT edu_pista_competicao_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT edu_pista_competicao_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT edu_pista_competicao_l_tipopista_check CHECK ((tipopista = 0) OR (tipopista = 1) OR (tipopista = 2) OR (tipopista = 3) OR (tipopista = 4) OR (tipopista = 5) OR (tipopista = 9) OR (tipopista = 10) OR (tipopista = 11) OR (tipopista = 98) OR (tipopista = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_pista_competicao_l', 'features','cb_edu_pista_competicao_l', 'Camada edu_pista_competicao_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_pista_competicao_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_pista_competicao_l" AFTER INSERT ON "cb_edu_pista_competicao_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_pista_competicao_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_pista_competicao_l" AFTER DELETE ON "cb_edu_pista_competicao_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_pista_competicao_l'); END ;CREATE TABLE cb_edu_ruina_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT edu_ruina_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_ruina_a', 'features','cb_edu_ruina_a', 'Camada edu_ruina_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_ruina_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_ruina_a" AFTER INSERT ON "cb_edu_ruina_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_ruina_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_ruina_a" AFTER DELETE ON "cb_edu_ruina_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_ruina_a'); END ;CREATE TABLE cb_edu_ruina_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT edu_ruina_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_edu_ruina_p', 'features','cb_edu_ruina_p', 'Camada edu_ruina_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_edu_ruina_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_edu_ruina_p" AFTER INSERT ON "cb_edu_ruina_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_edu_ruina_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_edu_ruina_p" AFTER DELETE ON "cb_edu_ruina_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_edu_ruina_p'); END ;CREATE TABLE cb_enc_antena_comunic_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 posicaoreledific smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT enc_antena_comunic_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_antena_comunic_p_posicaoreledific_check CHECK ((posicaoreledific = 14) OR (posicaoreledific = 17) OR (posicaoreledific = 18)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_antena_comunic_p', 'features','cb_enc_antena_comunic_p', 'Camada enc_antena_comunic_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_antena_comunic_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_antena_comunic_p" AFTER INSERT ON "cb_enc_antena_comunic_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_antena_comunic_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_antena_comunic_p" AFTER DELETE ON "cb_enc_antena_comunic_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_antena_comunic_p'); END ;CREATE TABLE cb_enc_area_comunicacao_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT enc_area_comunicacao_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_area_comunicacao_a', 'features','cb_enc_area_comunicacao_a', 'Camada enc_area_comunicacao_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_area_comunicacao_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_area_comunicacao_a" AFTER INSERT ON "cb_enc_area_comunicacao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_area_comunicacao_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_area_comunicacao_a" AFTER DELETE ON "cb_enc_area_comunicacao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_area_comunicacao_a'); END ;CREATE TABLE cb_enc_area_energia_eletrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT enc_area_energia_eletrica_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_area_energia_eletrica_a', 'features','cb_enc_area_energia_eletrica_a', 'Camada enc_area_energia_eletrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_area_energia_eletrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_area_energia_eletrica_a" AFTER INSERT ON "cb_enc_area_energia_eletrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_area_energia_eletrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_area_energia_eletrica_a" AFTER DELETE ON "cb_enc_area_energia_eletrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_area_energia_eletrica_a'); END ;CREATE TABLE cb_enc_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT enc_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_descontinuidade_geometrica_a', 'features','cb_enc_descontinuidade_geometrica_a', 'Camada enc_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_descontinuidade_geometrica_a" AFTER INSERT ON "cb_enc_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_descontinuidade_geometrica_a" AFTER DELETE ON "cb_enc_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_enc_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT enc_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_descontinuidade_geometrica_l', 'features','cb_enc_descontinuidade_geometrica_l', 'Camada enc_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_descontinuidade_geometrica_l" AFTER INSERT ON "cb_enc_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_descontinuidade_geometrica_l" AFTER DELETE ON "cb_enc_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_enc_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT enc_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_descontinuidade_geometrica_p', 'features','cb_enc_descontinuidade_geometrica_p', 'Camada enc_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_descontinuidade_geometrica_p" AFTER INSERT ON "cb_enc_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_descontinuidade_geometrica_p" AFTER DELETE ON "cb_enc_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_enc_edif_comunic_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 modalidade smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifcomunic smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT enc_edif_comunic_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_edif_comunic_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT enc_edif_comunic_a_modalidade_check CHECK ((modalidade = 0) OR (modalidade = 1) OR (modalidade = 2) OR (modalidade = 3) OR (modalidade = 4) OR (modalidade = 5) OR (modalidade = 99)),	 CONSTRAINT enc_edif_comunic_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_edif_comunic_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_edif_comunic_a_tipoedifcomunic_check CHECK ((tipoedifcomunic = 0) OR (tipoedifcomunic = 1) OR (tipoedifcomunic = 2) OR (tipoedifcomunic = 3) OR (tipoedifcomunic = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_edif_comunic_a', 'features','cb_enc_edif_comunic_a', 'Camada enc_edif_comunic_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_edif_comunic_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_edif_comunic_a" AFTER INSERT ON "cb_enc_edif_comunic_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_edif_comunic_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_edif_comunic_a" AFTER DELETE ON "cb_enc_edif_comunic_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_edif_comunic_a'); END ;CREATE TABLE cb_enc_edif_comunic_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 modalidade smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifcomunic smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT enc_edif_comunic_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_edif_comunic_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT enc_edif_comunic_p_modalidade_check CHECK ((modalidade = 0) OR (modalidade = 1) OR (modalidade = 2) OR (modalidade = 3) OR (modalidade = 4) OR (modalidade = 5) OR (modalidade = 99)),	 CONSTRAINT enc_edif_comunic_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_edif_comunic_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_edif_comunic_p_tipoedifcomunic_check CHECK ((tipoedifcomunic = 0) OR (tipoedifcomunic = 1) OR (tipoedifcomunic = 2) OR (tipoedifcomunic = 3) OR (tipoedifcomunic = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_edif_comunic_p', 'features','cb_enc_edif_comunic_p', 'Camada enc_edif_comunic_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_edif_comunic_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_edif_comunic_p" AFTER INSERT ON "cb_enc_edif_comunic_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_edif_comunic_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_edif_comunic_p" AFTER DELETE ON "cb_enc_edif_comunic_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_edif_comunic_p'); END ;CREATE TABLE cb_enc_edif_energia_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifenergia smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT enc_edif_energia_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_edif_energia_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT enc_edif_energia_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_edif_energia_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_edif_energia_a_tipoedifenergia_check CHECK ((tipoedifenergia = 0) OR (tipoedifenergia = 1) OR (tipoedifenergia = 2) OR (tipoedifenergia = 3) OR (tipoedifenergia = 4) OR (tipoedifenergia = 5) OR (tipoedifenergia = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_edif_energia_a', 'features','cb_enc_edif_energia_a', 'Camada enc_edif_energia_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_edif_energia_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_edif_energia_a" AFTER INSERT ON "cb_enc_edif_energia_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_edif_energia_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_edif_energia_a" AFTER DELETE ON "cb_enc_edif_energia_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_edif_energia_a'); END ;CREATE TABLE cb_enc_edif_energia_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifenergia smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT enc_edif_energia_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_edif_energia_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT enc_edif_energia_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_edif_energia_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_edif_energia_p_tipoedifenergia_check CHECK ((tipoedifenergia = 0) OR (tipoedifenergia = 1) OR (tipoedifenergia = 2) OR (tipoedifenergia = 3) OR (tipoedifenergia = 4) OR (tipoedifenergia = 5) OR (tipoedifenergia = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_edif_energia_p', 'features','cb_enc_edif_energia_p', 'Camada enc_edif_energia_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_edif_energia_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_edif_energia_p" AFTER INSERT ON "cb_enc_edif_energia_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_edif_energia_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_edif_energia_p" AFTER DELETE ON "cb_enc_edif_energia_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_edif_energia_p'); END ;CREATE TABLE cb_enc_est_gerad_energia_eletr_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codigoestacao varchar(255),	 destenergelet smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 potenciafiscalizada real,	 potenciaoutorgada real,	 situacaofisica smallint NOT NULL,	 tipoestgerad smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT enc_est_gerad_energia_eletr_a_destenergelet_check CHECK ((destenergelet = 0) OR (destenergelet = 1) OR (destenergelet = 2) OR (destenergelet = 3) OR (destenergelet = 4) OR (destenergelet = 5)),	 CONSTRAINT enc_est_gerad_energia_eletr_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_est_gerad_energia_eletr_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_est_gerad_energia_eletr_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_est_gerad_energia_eletr_a_tipoestgerad_check CHECK ((tipoestgerad = 0) OR (tipoestgerad = 5) OR (tipoestgerad = 6) OR (tipoestgerad = 7) OR (tipoestgerad = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_est_gerad_energia_eletr_a', 'features','cb_enc_est_gerad_energia_eletr_a', 'Camada enc_est_gerad_energia_eletr_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_est_gerad_energia_eletr_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_est_gerad_energia_eletr_a" AFTER INSERT ON "cb_enc_est_gerad_energia_eletr_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_est_gerad_energia_eletr_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_est_gerad_energia_eletr_a" AFTER DELETE ON "cb_enc_est_gerad_energia_eletr_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_est_gerad_energia_eletr_a'); END ;CREATE TABLE cb_enc_est_gerad_energia_eletr_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codigoestacao varchar(255),	 destenergelet smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 potenciafiscalizada real,	 potenciaoutorgada real,	 situacaofisica smallint NOT NULL,	 tipoestgerad smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT enc_est_gerad_energia_eletr_l_destenergelet_check CHECK ((destenergelet = 0) OR (destenergelet = 1) OR (destenergelet = 2) OR (destenergelet = 3) OR (destenergelet = 4) OR (destenergelet = 5)),	 CONSTRAINT enc_est_gerad_energia_eletr_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_est_gerad_energia_eletr_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_est_gerad_energia_eletr_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_est_gerad_energia_eletr_l_tipoestgerad_check CHECK ((tipoestgerad = 0) OR (tipoestgerad = 5) OR (tipoestgerad = 6) OR (tipoestgerad = 7) OR (tipoestgerad = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_est_gerad_energia_eletr_l', 'features','cb_enc_est_gerad_energia_eletr_l', 'Camada enc_est_gerad_energia_eletr_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_est_gerad_energia_eletr_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_est_gerad_energia_eletr_l" AFTER INSERT ON "cb_enc_est_gerad_energia_eletr_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_est_gerad_energia_eletr_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_est_gerad_energia_eletr_l" AFTER DELETE ON "cb_enc_est_gerad_energia_eletr_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_est_gerad_energia_eletr_l'); END ;CREATE TABLE cb_enc_est_gerad_energia_eletr_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codigoestacao varchar(255),	 destenergelet smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 potenciafiscalizada real,	 potenciaoutorgada real,	 situacaofisica smallint NOT NULL,	 tipoestgerad smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT enc_est_gerad_energia_eletr_p_destenergelet_check CHECK ((destenergelet = 0) OR (destenergelet = 1) OR (destenergelet = 2) OR (destenergelet = 3) OR (destenergelet = 4) OR (destenergelet = 5)),	 CONSTRAINT enc_est_gerad_energia_eletr_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_est_gerad_energia_eletr_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_est_gerad_energia_eletr_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_est_gerad_energia_eletr_p_tipoestgerad_check CHECK ((tipoestgerad = 0) OR (tipoestgerad = 5) OR (tipoestgerad = 6) OR (tipoestgerad = 7) OR (tipoestgerad = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_est_gerad_energia_eletr_p', 'features','cb_enc_est_gerad_energia_eletr_p', 'Camada enc_est_gerad_energia_eletr_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_est_gerad_energia_eletr_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_est_gerad_energia_eletr_p" AFTER INSERT ON "cb_enc_est_gerad_energia_eletr_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_est_gerad_energia_eletr_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_est_gerad_energia_eletr_p" AFTER DELETE ON "cb_enc_est_gerad_energia_eletr_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_est_gerad_energia_eletr_p'); END ;CREATE TABLE cb_enc_grupo_transformadores_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT enc_grupo_transformadores_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_grupo_transformadores_a', 'features','cb_enc_grupo_transformadores_a', 'Camada enc_grupo_transformadores_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_grupo_transformadores_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_grupo_transformadores_a" AFTER INSERT ON "cb_enc_grupo_transformadores_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_grupo_transformadores_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_grupo_transformadores_a" AFTER DELETE ON "cb_enc_grupo_transformadores_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_grupo_transformadores_a'); END ;CREATE TABLE cb_enc_grupo_transformadores_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT enc_grupo_transformadores_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_grupo_transformadores_p', 'features','cb_enc_grupo_transformadores_p', 'Camada enc_grupo_transformadores_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_grupo_transformadores_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_grupo_transformadores_p" AFTER INSERT ON "cb_enc_grupo_transformadores_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_grupo_transformadores_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_grupo_transformadores_p" AFTER DELETE ON "cb_enc_grupo_transformadores_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_grupo_transformadores_p'); END ;CREATE TABLE cb_enc_hidreletrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codigoestacao varchar(255),	 codigohidreletrica varchar(255),	 destenergelet smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 potenciafiscalizada real,	 potenciaoutorgada real,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT enc_hidreletrica_a_destenergelet_check CHECK ((destenergelet = 0) OR (destenergelet = 1) OR (destenergelet = 2) OR (destenergelet = 3) OR (destenergelet = 4) OR (destenergelet = 5)),	 CONSTRAINT enc_hidreletrica_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_hidreletrica_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_hidreletrica_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_hidreletrica_a', 'features','cb_enc_hidreletrica_a', 'Camada enc_hidreletrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_hidreletrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_hidreletrica_a" AFTER INSERT ON "cb_enc_hidreletrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_hidreletrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_hidreletrica_a" AFTER DELETE ON "cb_enc_hidreletrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_hidreletrica_a'); END ;CREATE TABLE cb_enc_hidreletrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codigoestacao varchar(255),	 codigohidreletrica varchar(255),	 destenergelet smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 potenciafiscalizada real,	 potenciaoutorgada real,	 situacaofisica smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT enc_hidreletrica_l_destenergelet_check CHECK ((destenergelet = 0) OR (destenergelet = 1) OR (destenergelet = 2) OR (destenergelet = 3) OR (destenergelet = 4) OR (destenergelet = 5)),	 CONSTRAINT enc_hidreletrica_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_hidreletrica_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_hidreletrica_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_hidreletrica_l', 'features','cb_enc_hidreletrica_l', 'Camada enc_hidreletrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_hidreletrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_hidreletrica_l" AFTER INSERT ON "cb_enc_hidreletrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_hidreletrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_hidreletrica_l" AFTER DELETE ON "cb_enc_hidreletrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_hidreletrica_l'); END ;CREATE TABLE cb_enc_hidreletrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codigoestacao varchar(255),	 codigohidreletrica varchar(255),	 destenergelet smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 potenciafiscalizada real,	 potenciaoutorgada real,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT enc_hidreletrica_p_destenergelet_check CHECK ((destenergelet = 0) OR (destenergelet = 1) OR (destenergelet = 2) OR (destenergelet = 3) OR (destenergelet = 4) OR (destenergelet = 5)),	 CONSTRAINT enc_hidreletrica_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_hidreletrica_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_hidreletrica_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_hidreletrica_p', 'features','cb_enc_hidreletrica_p', 'Camada enc_hidreletrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_hidreletrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_hidreletrica_p" AFTER INSERT ON "cb_enc_hidreletrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_hidreletrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_hidreletrica_p" AFTER DELETE ON "cb_enc_hidreletrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_hidreletrica_p'); END ;CREATE TABLE cb_enc_ponto_trecho_energia_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 tipoptoenergia smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT enc_ponto_trecho_energia_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_ponto_trecho_energia_p_tipoptoenergia_check CHECK ((tipoptoenergia = 0) OR (tipoptoenergia = 1) OR (tipoptoenergia = 2) OR (tipoptoenergia = 3) OR (tipoptoenergia = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_ponto_trecho_energia_p', 'features','cb_enc_ponto_trecho_energia_p', 'Camada enc_ponto_trecho_energia_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_ponto_trecho_energia_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_ponto_trecho_energia_p" AFTER INSERT ON "cb_enc_ponto_trecho_energia_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_ponto_trecho_energia_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_ponto_trecho_energia_p" AFTER DELETE ON "cb_enc_ponto_trecho_energia_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_ponto_trecho_energia_p'); END ;CREATE TABLE cb_enc_termeletrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codigoestacao varchar(255),	 combrenovavel smallint NOT NULL,	 destenergelet smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 geracao smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 potenciafiscalizada real,	 potenciaoutorgada real,	 situacaofisica smallint NOT NULL,	 tipocombustivel smallint NOT NULL,	 tipomaqtermica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT enc_termeletrica_a_combrenovavel_check CHECK ((combrenovavel = 0) OR (combrenovavel = 1) OR (combrenovavel = 2)),	 CONSTRAINT enc_termeletrica_a_destenergelet_check CHECK ((destenergelet = 0) OR (destenergelet = 1) OR (destenergelet = 2) OR (destenergelet = 3) OR (destenergelet = 4) OR (destenergelet = 5)),	 CONSTRAINT enc_termeletrica_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_termeletrica_a_geracao_check CHECK ((geracao = 0) OR (geracao = 1) OR (geracao = 2)),	 CONSTRAINT enc_termeletrica_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_termeletrica_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_termeletrica_a_tipocombustivel_check CHECK ((tipocombustivel = 0) OR (tipocombustivel = 1) OR (tipocombustivel = 3) OR (tipocombustivel = 5) OR (tipocombustivel = 33) OR (tipocombustivel = 98) OR (tipocombustivel = 99)),	 CONSTRAINT enc_termeletrica_a_tipomaqtermica_check CHECK ((tipomaqtermica = 0) OR (tipomaqtermica = 1) OR (tipomaqtermica = 2) OR (tipomaqtermica = 3) OR (tipomaqtermica = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_termeletrica_a', 'features','cb_enc_termeletrica_a', 'Camada enc_termeletrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_termeletrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_termeletrica_a" AFTER INSERT ON "cb_enc_termeletrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_termeletrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_termeletrica_a" AFTER DELETE ON "cb_enc_termeletrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_termeletrica_a'); END ;CREATE TABLE cb_enc_termeletrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codigoestacao varchar(255),	 combrenovavel smallint NOT NULL,	 destenergelet smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 geracao smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 potenciafiscalizada real,	 potenciaoutorgada real,	 situacaofisica smallint NOT NULL,	 tipocombustivel smallint NOT NULL,	 tipomaqtermica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT enc_termeletrica_p_combrenovavel_check CHECK ((combrenovavel = 0) OR (combrenovavel = 1) OR (combrenovavel = 2)),	 CONSTRAINT enc_termeletrica_p_destenergelet_check CHECK ((destenergelet = 0) OR (destenergelet = 1) OR (destenergelet = 2) OR (destenergelet = 3) OR (destenergelet = 4) OR (destenergelet = 5)),	 CONSTRAINT enc_termeletrica_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_termeletrica_p_geracao_check CHECK ((geracao = 0) OR (geracao = 1) OR (geracao = 2)),	 CONSTRAINT enc_termeletrica_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_termeletrica_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_termeletrica_p_tipocombustivel_check CHECK ((tipocombustivel = 0) OR (tipocombustivel = 1) OR (tipocombustivel = 3) OR (tipocombustivel = 5) OR (tipocombustivel = 33) OR (tipocombustivel = 98) OR (tipocombustivel = 99)),	 CONSTRAINT enc_termeletrica_p_tipomaqtermica_check CHECK ((tipomaqtermica = 0) OR (tipomaqtermica = 1) OR (tipomaqtermica = 2) OR (tipomaqtermica = 3) OR (tipomaqtermica = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_termeletrica_p', 'features','cb_enc_termeletrica_p', 'Camada enc_termeletrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_termeletrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_termeletrica_p" AFTER INSERT ON "cb_enc_termeletrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_termeletrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_termeletrica_p" AFTER DELETE ON "cb_enc_termeletrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_termeletrica_p'); END ;CREATE TABLE cb_enc_torre_comunic_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturaestimada real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 ovgd smallint NOT NULL,	 posicaoreledific smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT enc_torre_comunic_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_torre_comunic_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_torre_comunic_p_ovgd_check CHECK ((ovgd = 0) OR (ovgd = 1) OR (ovgd = 2)),	 CONSTRAINT enc_torre_comunic_p_posicaoreledific_check CHECK ((posicaoreledific = 14) OR (posicaoreledific = 17) OR (posicaoreledific = 18)),	 CONSTRAINT enc_torre_comunic_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_torre_comunic_p', 'features','cb_enc_torre_comunic_p', 'Camada enc_torre_comunic_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_torre_comunic_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_torre_comunic_p" AFTER INSERT ON "cb_enc_torre_comunic_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_torre_comunic_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_torre_comunic_p" AFTER DELETE ON "cb_enc_torre_comunic_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_torre_comunic_p'); END ;CREATE TABLE cb_enc_torre_energia_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturaestimada real,	 arranjofases varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 ovgd smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipotorre smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT enc_torre_energia_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_torre_energia_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_torre_energia_p_ovgd_check CHECK ((ovgd = 0) OR (ovgd = 1) OR (ovgd = 2)),	 CONSTRAINT enc_torre_energia_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_torre_energia_p_tipotorre_check CHECK ((tipotorre = 0) OR (tipotorre = 1) OR (tipotorre = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_torre_energia_p', 'features','cb_enc_torre_energia_p', 'Camada enc_torre_energia_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_torre_energia_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_torre_energia_p" AFTER INSERT ON "cb_enc_torre_energia_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_torre_energia_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_torre_energia_p" AFTER DELETE ON "cb_enc_torre_energia_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_torre_energia_p'); END ;CREATE TABLE cb_enc_trecho_comunic_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 emduto smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 posicaorelativa smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipotrechocomunic smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT enc_trecho_comunic_l_emduto_check CHECK ((emduto = 1) OR (emduto = 2)),	 CONSTRAINT enc_trecho_comunic_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_trecho_comunic_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT enc_trecho_comunic_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_trecho_comunic_l_posicaorelativa_check CHECK ((posicaorelativa = 0) OR (posicaorelativa = 2) OR (posicaorelativa = 3) OR (posicaorelativa = 4) OR (posicaorelativa = 5) OR (posicaorelativa = 6)),	 CONSTRAINT enc_trecho_comunic_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT enc_trecho_comunic_l_tipotrechocomunic_check CHECK ((tipotrechocomunic = 0) OR (tipotrechocomunic = 4) OR (tipotrechocomunic = 6) OR (tipotrechocomunic = 7) OR (tipotrechocomunic = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_trecho_comunic_l', 'features','cb_enc_trecho_comunic_l', 'Camada enc_trecho_comunic_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_trecho_comunic_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_trecho_comunic_l" AFTER INSERT ON "cb_enc_trecho_comunic_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_trecho_comunic_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_trecho_comunic_l" AFTER DELETE ON "cb_enc_trecho_comunic_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_trecho_comunic_l'); END ;CREATE TABLE cb_enc_trecho_energia_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 emduto smallint NOT NULL,	 especie smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 numcircuitos integer,	 operacional smallint NOT NULL,	 posicaorelativa smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tensaoeletrica real,	 geom MultiLinestring,	 CONSTRAINT enc_trecho_energia_l_emduto_check CHECK ((emduto = 1) OR (emduto = 2)),	 CONSTRAINT enc_trecho_energia_l_especie_check CHECK ((especie = 0) OR (especie = 2) OR (especie = 3)),	 CONSTRAINT enc_trecho_energia_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT enc_trecho_energia_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT enc_trecho_energia_l_posicaorelativa_check CHECK ((posicaorelativa = 0) OR (posicaorelativa = 2) OR (posicaorelativa = 3) OR (posicaorelativa = 4) OR (posicaorelativa = 5) OR (posicaorelativa = 6)),	 CONSTRAINT enc_trecho_energia_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_trecho_energia_l', 'features','cb_enc_trecho_energia_l', 'Camada enc_trecho_energia_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_trecho_energia_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_trecho_energia_l" AFTER INSERT ON "cb_enc_trecho_energia_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_trecho_energia_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_trecho_energia_l" AFTER DELETE ON "cb_enc_trecho_energia_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_trecho_energia_l'); END ;CREATE TABLE cb_enc_zona_linhas_energia_com_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT enc_zona_linhas_energia_com_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_enc_zona_linhas_energia_com_a', 'features','cb_enc_zona_linhas_energia_com_a', 'Camada enc_zona_linhas_energia_com_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_enc_zona_linhas_energia_com_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_enc_zona_linhas_energia_com_a" AFTER INSERT ON "cb_enc_zona_linhas_energia_com_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_enc_zona_linhas_energia_com_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_enc_zona_linhas_energia_com_a" AFTER DELETE ON "cb_enc_zona_linhas_energia_com_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_enc_zona_linhas_energia_com_a'); END ;CREATE TABLE cb_hid_area_umida_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoareaumida smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_area_umida_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_area_umida_a_tipoareaumida_check CHECK ((tipoareaumida = 0) OR (tipoareaumida = 3) OR (tipoareaumida = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_area_umida_a', 'features','cb_hid_area_umida_a', 'Camada hid_area_umida_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_area_umida_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_area_umida_a" AFTER INSERT ON "cb_hid_area_umida_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_area_umida_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_area_umida_a" AFTER DELETE ON "cb_hid_area_umida_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_area_umida_a'); END ;CREATE TABLE cb_hid_bacia_hidrografica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codigootto integer,	 geometriaaproximada smallint NOT NULL,	 nivelotto integer,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT hid_bacia_hidrografica_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_bacia_hidrografica_a', 'features','cb_hid_bacia_hidrografica_a', 'Camada hid_bacia_hidrografica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_bacia_hidrografica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_bacia_hidrografica_a" AFTER INSERT ON "cb_hid_bacia_hidrografica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_bacia_hidrografica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_bacia_hidrografica_a" AFTER DELETE ON "cb_hid_bacia_hidrografica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_bacia_hidrografica_a'); END ;CREATE TABLE cb_hid_banco_areia_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 materialpredominante smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 situacaoemagua smallint NOT NULL,	 tipobanco smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_banco_areia_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_banco_areia_a_materialpredominante_check CHECK ((materialpredominante = 0) OR (materialpredominante = 4) OR (materialpredominante = 12) OR (materialpredominante = 13) OR (materialpredominante = 14) OR (materialpredominante = 15) OR (materialpredominante = 16) OR (materialpredominante = 18) OR (materialpredominante = 19) OR (materialpredominante = 20) OR (materialpredominante = 21) OR (materialpredominante = 22) OR (materialpredominante = 24) OR (materialpredominante = 50) OR (materialpredominante = 97) OR (materialpredominante = 98)),	 CONSTRAINT hid_banco_areia_a_situacaoemagua_check CHECK ((situacaoemagua = 0) OR (situacaoemagua = 4) OR (situacaoemagua = 5) OR (situacaoemagua = 7)),	 CONSTRAINT hid_banco_areia_a_tipobanco_check CHECK ((tipobanco = 1) OR (tipobanco = 2) OR (tipobanco = 3) OR (tipobanco = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_banco_areia_a', 'features','cb_hid_banco_areia_a', 'Camada hid_banco_areia_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_banco_areia_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_banco_areia_a" AFTER INSERT ON "cb_hid_banco_areia_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_banco_areia_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_banco_areia_a" AFTER DELETE ON "cb_hid_banco_areia_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_banco_areia_a'); END ;CREATE TABLE cb_hid_banco_areia_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 materialpredominante smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 situacaoemagua smallint NOT NULL,	 tipobanco smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT hid_banco_areia_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_banco_areia_l_materialpredominante_check CHECK ((materialpredominante = 0) OR (materialpredominante = 4) OR (materialpredominante = 12) OR (materialpredominante = 13) OR (materialpredominante = 14) OR (materialpredominante = 15) OR (materialpredominante = 16) OR (materialpredominante = 18) OR (materialpredominante = 19) OR (materialpredominante = 20) OR (materialpredominante = 21) OR (materialpredominante = 22) OR (materialpredominante = 24) OR (materialpredominante = 50) OR (materialpredominante = 97) OR (materialpredominante = 98)),	 CONSTRAINT hid_banco_areia_l_situacaoemagua_check CHECK ((situacaoemagua = 0) OR (situacaoemagua = 4) OR (situacaoemagua = 5) OR (situacaoemagua = 7)),	 CONSTRAINT hid_banco_areia_l_tipobanco_check CHECK ((tipobanco = 1) OR (tipobanco = 2) OR (tipobanco = 3) OR (tipobanco = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_banco_areia_l', 'features','cb_hid_banco_areia_l', 'Camada hid_banco_areia_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_banco_areia_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_banco_areia_l" AFTER INSERT ON "cb_hid_banco_areia_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_banco_areia_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_banco_areia_l" AFTER DELETE ON "cb_hid_banco_areia_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_banco_areia_l'); END ;CREATE TABLE cb_hid_barragem_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 usoprincipal smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_barragem_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_barragem_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT hid_barragem_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT hid_barragem_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT hid_barragem_a_usoprincipal_check CHECK ((usoprincipal = 0) OR (usoprincipal = 1) OR (usoprincipal = 2) OR (usoprincipal = 3) OR (usoprincipal = 97) OR (usoprincipal = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_barragem_a', 'features','cb_hid_barragem_a', 'Camada hid_barragem_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_barragem_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_barragem_a" AFTER INSERT ON "cb_hid_barragem_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_barragem_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_barragem_a" AFTER DELETE ON "cb_hid_barragem_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_barragem_a'); END ;CREATE TABLE cb_hid_barragem_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 usoprincipal smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT hid_barragem_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_barragem_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT hid_barragem_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT hid_barragem_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT hid_barragem_l_usoprincipal_check CHECK ((usoprincipal = 0) OR (usoprincipal = 1) OR (usoprincipal = 2) OR (usoprincipal = 3) OR (usoprincipal = 97) OR (usoprincipal = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_barragem_l', 'features','cb_hid_barragem_l', 'Camada hid_barragem_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_barragem_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_barragem_l" AFTER INSERT ON "cb_hid_barragem_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_barragem_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_barragem_l" AFTER DELETE ON "cb_hid_barragem_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_barragem_l'); END ;CREATE TABLE cb_hid_barragem_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 usoprincipal smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT hid_barragem_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_barragem_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT hid_barragem_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT hid_barragem_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT hid_barragem_p_usoprincipal_check CHECK ((usoprincipal = 0) OR (usoprincipal = 1) OR (usoprincipal = 2) OR (usoprincipal = 3) OR (usoprincipal = 97) OR (usoprincipal = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_barragem_p', 'features','cb_hid_barragem_p', 'Camada hid_barragem_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_barragem_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_barragem_p" AFTER INSERT ON "cb_hid_barragem_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_barragem_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_barragem_p" AFTER DELETE ON "cb_hid_barragem_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_barragem_p'); END ;CREATE TABLE cb_hid_comporta_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT hid_comporta_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_comporta_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT hid_comporta_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_comporta_l', 'features','cb_hid_comporta_l', 'Camada hid_comporta_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_comporta_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_comporta_l" AFTER INSERT ON "cb_hid_comporta_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_comporta_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_comporta_l" AFTER DELETE ON "cb_hid_comporta_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_comporta_l'); END ;CREATE TABLE cb_hid_comporta_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT hid_comporta_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_comporta_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT hid_comporta_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_comporta_p', 'features','cb_hid_comporta_p', 'Camada hid_comporta_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_comporta_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_comporta_p" AFTER INSERT ON "cb_hid_comporta_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_comporta_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_comporta_p" AFTER DELETE ON "cb_hid_comporta_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_comporta_p'); END ;CREATE TABLE cb_hid_confluencia_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT hid_confluencia_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_confluencia_p', 'features','cb_hid_confluencia_p', 'Camada hid_confluencia_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_confluencia_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_confluencia_p" AFTER INSERT ON "cb_hid_confluencia_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_confluencia_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_confluencia_p" AFTER DELETE ON "cb_hid_confluencia_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_confluencia_p'); END ;CREATE TABLE cb_hid_corredeira_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT hid_corredeira_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_corredeira_a', 'features','cb_hid_corredeira_a', 'Camada hid_corredeira_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_corredeira_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_corredeira_a" AFTER INSERT ON "cb_hid_corredeira_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_corredeira_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_corredeira_a" AFTER DELETE ON "cb_hid_corredeira_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_corredeira_a'); END ;CREATE TABLE cb_hid_corredeira_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiLinestring,	 CONSTRAINT hid_corredeira_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_corredeira_l', 'features','cb_hid_corredeira_l', 'Camada hid_corredeira_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_corredeira_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_corredeira_l" AFTER INSERT ON "cb_hid_corredeira_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_corredeira_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_corredeira_l" AFTER DELETE ON "cb_hid_corredeira_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_corredeira_l'); END ;CREATE TABLE cb_hid_corredeira_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT hid_corredeira_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_corredeira_p', 'features','cb_hid_corredeira_p', 'Camada hid_corredeira_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_corredeira_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_corredeira_p" AFTER INSERT ON "cb_hid_corredeira_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_corredeira_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_corredeira_p" AFTER DELETE ON "cb_hid_corredeira_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_corredeira_p'); END ;CREATE TABLE cb_hid_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_descontinuidade_geometrica_a', 'features','cb_hid_descontinuidade_geometrica_a', 'Camada hid_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_descontinuidade_geometrica_a" AFTER INSERT ON "cb_hid_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_descontinuidade_geometrica_a" AFTER DELETE ON "cb_hid_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_hid_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT hid_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_descontinuidade_geometrica_l', 'features','cb_hid_descontinuidade_geometrica_l', 'Camada hid_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_descontinuidade_geometrica_l" AFTER INSERT ON "cb_hid_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_descontinuidade_geometrica_l" AFTER DELETE ON "cb_hid_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_hid_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT hid_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_descontinuidade_geometrica_p', 'features','cb_hid_descontinuidade_geometrica_p', 'Camada hid_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_descontinuidade_geometrica_p" AFTER INSERT ON "cb_hid_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_descontinuidade_geometrica_p" AFTER DELETE ON "cb_hid_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_hid_fonte_dagua_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 qualidagua smallint NOT NULL,	 regime smallint NOT NULL,	 tipofontedagua smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT hid_fonte_dagua_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_fonte_dagua_p_qualidagua_check CHECK ((qualidagua = 0) OR (qualidagua = 1) OR (qualidagua = 2) OR (qualidagua = 3) OR (qualidagua = 4)),	 CONSTRAINT hid_fonte_dagua_p_regime_check CHECK ((regime = 0) OR (regime = 1) OR (regime = 2) OR (regime = 3) OR (regime = 4) OR (regime = 5) OR (regime = 6)),	 CONSTRAINT hid_fonte_dagua_p_tipofontedagua_check CHECK ((tipofontedagua = 0) OR (tipofontedagua = 1) OR (tipofontedagua = 2) OR (tipofontedagua = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_fonte_dagua_p', 'features','cb_hid_fonte_dagua_p', 'Camada hid_fonte_dagua_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_fonte_dagua_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_fonte_dagua_p" AFTER INSERT ON "cb_hid_fonte_dagua_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_fonte_dagua_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_fonte_dagua_p" AFTER DELETE ON "cb_hid_fonte_dagua_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_fonte_dagua_p'); END ;CREATE TABLE cb_hid_foz_maritima_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT hid_foz_maritima_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_foz_maritima_a', 'features','cb_hid_foz_maritima_a', 'Camada hid_foz_maritima_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_foz_maritima_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_foz_maritima_a" AFTER INSERT ON "cb_hid_foz_maritima_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_foz_maritima_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_foz_maritima_a" AFTER DELETE ON "cb_hid_foz_maritima_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_foz_maritima_a'); END ;CREATE TABLE cb_hid_foz_maritima_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiLinestring,	 CONSTRAINT hid_foz_maritima_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_foz_maritima_l', 'features','cb_hid_foz_maritima_l', 'Camada hid_foz_maritima_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_foz_maritima_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_foz_maritima_l" AFTER INSERT ON "cb_hid_foz_maritima_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_foz_maritima_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_foz_maritima_l" AFTER DELETE ON "cb_hid_foz_maritima_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_foz_maritima_l'); END ;CREATE TABLE cb_hid_foz_maritima_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT hid_foz_maritima_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_foz_maritima_p', 'features','cb_hid_foz_maritima_p', 'Camada hid_foz_maritima_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_foz_maritima_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_foz_maritima_p" AFTER INSERT ON "cb_hid_foz_maritima_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_foz_maritima_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_foz_maritima_p" AFTER DELETE ON "cb_hid_foz_maritima_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_foz_maritima_p'); END ;CREATE TABLE cb_hid_ilha_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoilha smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_ilha_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_ilha_a_tipoilha_check CHECK ((tipoilha = 1) OR (tipoilha = 2) OR (tipoilha = 3) OR (tipoilha = 98)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_ilha_a', 'features','cb_hid_ilha_a', 'Camada hid_ilha_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_ilha_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_ilha_a" AFTER INSERT ON "cb_hid_ilha_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_ilha_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_ilha_a" AFTER DELETE ON "cb_hid_ilha_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_ilha_a'); END ;CREATE TABLE cb_hid_ilha_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoilha smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT hid_ilha_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_ilha_l_tipoilha_check CHECK ((tipoilha = 1) OR (tipoilha = 2) OR (tipoilha = 3) OR (tipoilha = 98)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_ilha_l', 'features','cb_hid_ilha_l', 'Camada hid_ilha_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_ilha_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_ilha_l" AFTER INSERT ON "cb_hid_ilha_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_ilha_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_ilha_l" AFTER DELETE ON "cb_hid_ilha_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_ilha_l'); END ;CREATE TABLE cb_hid_ilha_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoilha smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT hid_ilha_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_ilha_p_tipoilha_check CHECK ((tipoilha = 1) OR (tipoilha = 2) OR (tipoilha = 3) OR (tipoilha = 98)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_ilha_p', 'features','cb_hid_ilha_p', 'Camada hid_ilha_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_ilha_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_ilha_p" AFTER INSERT ON "cb_hid_ilha_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_ilha_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_ilha_p" AFTER DELETE ON "cb_hid_ilha_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_ilha_p'); END ;CREATE TABLE cb_hid_limite_massa_dagua_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturamediamargem real,	 geometriaaproximada smallint NOT NULL,	 materialpredominante smallint NOT NULL,	 nomeabrev varchar(255),	 tipolimmassa smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT hid_limite_massa_dagua_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_limite_massa_dagua_l_materialpredominante_check CHECK ((materialpredominante = 0) OR (materialpredominante = 4) OR (materialpredominante = 12) OR (materialpredominante = 13) OR (materialpredominante = 14) OR (materialpredominante = 15) OR (materialpredominante = 16) OR (materialpredominante = 18) OR (materialpredominante = 19) OR (materialpredominante = 20) OR (materialpredominante = 21) OR (materialpredominante = 22) OR (materialpredominante = 24) OR (materialpredominante = 50) OR (materialpredominante = 97) OR (materialpredominante = 98)),	 CONSTRAINT hid_limite_massa_dagua_l_tipolimmassa_check CHECK ((tipolimmassa = 1) OR (tipolimmassa = 2) OR (tipolimmassa = 3) OR (tipolimmassa = 4) OR (tipolimmassa = 5) OR (tipolimmassa = 6) OR (tipolimmassa = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_limite_massa_dagua_l', 'features','cb_hid_limite_massa_dagua_l', 'Camada hid_limite_massa_dagua_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_limite_massa_dagua_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_limite_massa_dagua_l" AFTER INSERT ON "cb_hid_limite_massa_dagua_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_limite_massa_dagua_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_limite_massa_dagua_l" AFTER DELETE ON "cb_hid_limite_massa_dagua_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_limite_massa_dagua_l'); END ;CREATE TABLE cb_hid_massa_dagua_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 regime smallint NOT NULL,	 salinidade smallint NOT NULL,	 tipomassadagua smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_massa_dagua_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_massa_dagua_a_regime_check CHECK ((regime = 0) OR (regime = 1) OR (regime = 2) OR (regime = 3) OR (regime = 4) OR (regime = 5) OR (regime = 6)),	 CONSTRAINT hid_massa_dagua_a_salinidade_check CHECK ((salinidade = 0) OR (salinidade = 1) OR (salinidade = 2)),	 CONSTRAINT hid_massa_dagua_a_tipomassadagua_check CHECK ((tipomassadagua = 0) OR (tipomassadagua = 3) OR (tipomassadagua = 4) OR (tipomassadagua = 5) OR (tipomassadagua = 6) OR (tipomassadagua = 7) OR (tipomassadagua = 8) OR (tipomassadagua = 10)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_massa_dagua_a', 'features','cb_hid_massa_dagua_a', 'Camada hid_massa_dagua_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_massa_dagua_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_massa_dagua_a" AFTER INSERT ON "cb_hid_massa_dagua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_massa_dagua_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_massa_dagua_a" AFTER DELETE ON "cb_hid_massa_dagua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_massa_dagua_a'); END ;CREATE TABLE cb_hid_natureza_fundo_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 espessalgas smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 materialpredominante smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT hid_natureza_fundo_a_espessalgas_check CHECK ((espessalgas = 1) OR (espessalgas = 2) OR (espessalgas = 3)),	 CONSTRAINT hid_natureza_fundo_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_natureza_fundo_a_materialpredominante_check CHECK ((materialpredominante = 0) OR (materialpredominante = 4) OR (materialpredominante = 12) OR (materialpredominante = 13) OR (materialpredominante = 14) OR (materialpredominante = 15) OR (materialpredominante = 16) OR (materialpredominante = 18) OR (materialpredominante = 19) OR (materialpredominante = 20) OR (materialpredominante = 21) OR (materialpredominante = 22) OR (materialpredominante = 24) OR (materialpredominante = 50) OR (materialpredominante = 97) OR (materialpredominante = 98)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_natureza_fundo_a', 'features','cb_hid_natureza_fundo_a', 'Camada hid_natureza_fundo_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_natureza_fundo_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_natureza_fundo_a" AFTER INSERT ON "cb_hid_natureza_fundo_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_natureza_fundo_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_natureza_fundo_a" AFTER DELETE ON "cb_hid_natureza_fundo_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_natureza_fundo_a'); END ;CREATE TABLE cb_hid_natureza_fundo_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 espessalgas smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 materialpredominante smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiLinestring,	 CONSTRAINT hid_natureza_fundo_l_espessalgas_check CHECK ((espessalgas = 1) OR (espessalgas = 2) OR (espessalgas = 3)),	 CONSTRAINT hid_natureza_fundo_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_natureza_fundo_l_materialpredominante_check CHECK ((materialpredominante = 0) OR (materialpredominante = 4) OR (materialpredominante = 12) OR (materialpredominante = 13) OR (materialpredominante = 14) OR (materialpredominante = 15) OR (materialpredominante = 16) OR (materialpredominante = 18) OR (materialpredominante = 19) OR (materialpredominante = 20) OR (materialpredominante = 21) OR (materialpredominante = 22) OR (materialpredominante = 24) OR (materialpredominante = 50) OR (materialpredominante = 97) OR (materialpredominante = 98)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_natureza_fundo_l', 'features','cb_hid_natureza_fundo_l', 'Camada hid_natureza_fundo_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_natureza_fundo_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_natureza_fundo_l" AFTER INSERT ON "cb_hid_natureza_fundo_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_natureza_fundo_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_natureza_fundo_l" AFTER DELETE ON "cb_hid_natureza_fundo_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_natureza_fundo_l'); END ;CREATE TABLE cb_hid_natureza_fundo_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 espessalgas smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 materialpredominante smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT hid_natureza_fundo_p_espessalgas_check CHECK ((espessalgas = 1) OR (espessalgas = 2) OR (espessalgas = 3)),	 CONSTRAINT hid_natureza_fundo_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_natureza_fundo_p_materialpredominante_check CHECK ((materialpredominante = 0) OR (materialpredominante = 4) OR (materialpredominante = 12) OR (materialpredominante = 13) OR (materialpredominante = 14) OR (materialpredominante = 15) OR (materialpredominante = 16) OR (materialpredominante = 18) OR (materialpredominante = 19) OR (materialpredominante = 20) OR (materialpredominante = 21) OR (materialpredominante = 22) OR (materialpredominante = 24) OR (materialpredominante = 50) OR (materialpredominante = 97) OR (materialpredominante = 98)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_natureza_fundo_p', 'features','cb_hid_natureza_fundo_p', 'Camada hid_natureza_fundo_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_natureza_fundo_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_natureza_fundo_p" AFTER INSERT ON "cb_hid_natureza_fundo_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_natureza_fundo_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_natureza_fundo_p" AFTER DELETE ON "cb_hid_natureza_fundo_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_natureza_fundo_p'); END ;CREATE TABLE cb_hid_ponto_drenagem_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 relacionado smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT hid_ponto_drenagem_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_ponto_drenagem_p_relacionado_check CHECK ((relacionado = 1) OR (relacionado = 2) OR (relacionado = 3) OR (relacionado = 4) OR (relacionado = 5) OR (relacionado = 6) OR (relacionado = 7) OR (relacionado = 8) OR (relacionado = 9) OR (relacionado = 10) OR (relacionado = 11) OR (relacionado = 12) OR (relacionado = 13) OR (relacionado = 16) OR (relacionado = 17) OR (relacionado = 18)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_ponto_drenagem_p', 'features','cb_hid_ponto_drenagem_p', 'Camada hid_ponto_drenagem_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_ponto_drenagem_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_ponto_drenagem_p" AFTER INSERT ON "cb_hid_ponto_drenagem_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_ponto_drenagem_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_ponto_drenagem_p" AFTER DELETE ON "cb_hid_ponto_drenagem_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_ponto_drenagem_p'); END ;CREATE TABLE cb_hid_ponto_inicio_drenagem_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nascente smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT hid_ponto_inicio_drenagem_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_ponto_inicio_drenagem_p_nascente_check CHECK ((nascente = 0) OR (nascente = 1) OR (nascente = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_ponto_inicio_drenagem_p', 'features','cb_hid_ponto_inicio_drenagem_p', 'Camada hid_ponto_inicio_drenagem_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_ponto_inicio_drenagem_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_ponto_inicio_drenagem_p" AFTER INSERT ON "cb_hid_ponto_inicio_drenagem_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_ponto_inicio_drenagem_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_ponto_inicio_drenagem_p" AFTER DELETE ON "cb_hid_ponto_inicio_drenagem_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_ponto_inicio_drenagem_p'); END ;CREATE TABLE cb_hid_quebramar_molhe_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 situamare smallint NOT NULL,	 tipoquebramolhe smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_quebramar_molhe_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_quebramar_molhe_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT hid_quebramar_molhe_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT hid_quebramar_molhe_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT hid_quebramar_molhe_a_situamare_check CHECK ((situamare = 0) OR (situamare = 7) OR (situamare = 8) OR (situamare = 9)),	 CONSTRAINT hid_quebramar_molhe_a_tipoquebramolhe_check CHECK ((tipoquebramolhe = 0) OR (tipoquebramolhe = 1) OR (tipoquebramolhe = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_quebramar_molhe_a', 'features','cb_hid_quebramar_molhe_a', 'Camada hid_quebramar_molhe_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_quebramar_molhe_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_quebramar_molhe_a" AFTER INSERT ON "cb_hid_quebramar_molhe_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_quebramar_molhe_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_quebramar_molhe_a" AFTER DELETE ON "cb_hid_quebramar_molhe_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_quebramar_molhe_a'); END ;CREATE TABLE cb_hid_quebramar_molhe_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 situamare smallint NOT NULL,	 tipoquebramolhe smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT hid_quebramar_molhe_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_quebramar_molhe_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT hid_quebramar_molhe_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT hid_quebramar_molhe_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT hid_quebramar_molhe_l_situamare_check CHECK ((situamare = 0) OR (situamare = 7) OR (situamare = 8) OR (situamare = 9)),	 CONSTRAINT hid_quebramar_molhe_l_tipoquebramolhe_check CHECK ((tipoquebramolhe = 0) OR (tipoquebramolhe = 1) OR (tipoquebramolhe = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_quebramar_molhe_l', 'features','cb_hid_quebramar_molhe_l', 'Camada hid_quebramar_molhe_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_quebramar_molhe_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_quebramar_molhe_l" AFTER INSERT ON "cb_hid_quebramar_molhe_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_quebramar_molhe_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_quebramar_molhe_l" AFTER DELETE ON "cb_hid_quebramar_molhe_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_quebramar_molhe_l'); END ;CREATE TABLE cb_hid_queda_dagua_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 altura real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoqueda smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_queda_dagua_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_queda_dagua_a_tipoqueda_check CHECK ((tipoqueda = 0) OR (tipoqueda = 1) OR (tipoqueda = 2) OR (tipoqueda = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_queda_dagua_a', 'features','cb_hid_queda_dagua_a', 'Camada hid_queda_dagua_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_queda_dagua_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_queda_dagua_a" AFTER INSERT ON "cb_hid_queda_dagua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_queda_dagua_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_queda_dagua_a" AFTER DELETE ON "cb_hid_queda_dagua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_queda_dagua_a'); END ;CREATE TABLE cb_hid_queda_dagua_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 altura real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoqueda smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT hid_queda_dagua_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_queda_dagua_l_tipoqueda_check CHECK ((tipoqueda = 0) OR (tipoqueda = 1) OR (tipoqueda = 2) OR (tipoqueda = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_queda_dagua_l', 'features','cb_hid_queda_dagua_l', 'Camada hid_queda_dagua_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_queda_dagua_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_queda_dagua_l" AFTER INSERT ON "cb_hid_queda_dagua_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_queda_dagua_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_queda_dagua_l" AFTER DELETE ON "cb_hid_queda_dagua_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_queda_dagua_l'); END ;CREATE TABLE cb_hid_queda_dagua_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 altura real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoqueda smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT hid_queda_dagua_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_queda_dagua_p_tipoqueda_check CHECK ((tipoqueda = 0) OR (tipoqueda = 1) OR (tipoqueda = 2) OR (tipoqueda = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_queda_dagua_p', 'features','cb_hid_queda_dagua_p', 'Camada hid_queda_dagua_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_queda_dagua_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_queda_dagua_p" AFTER INSERT ON "cb_hid_queda_dagua_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_queda_dagua_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_queda_dagua_p" AFTER DELETE ON "cb_hid_queda_dagua_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_queda_dagua_p'); END ;CREATE TABLE cb_hid_recife_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 situacaocosta smallint NOT NULL,	 situamare smallint NOT NULL,	 tiporecife smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_recife_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_recife_a_situacaocosta_check CHECK ((situacaocosta = 10) OR (situacaocosta = 11)),	 CONSTRAINT hid_recife_a_situamare_check CHECK ((situamare = 0) OR (situamare = 7) OR (situamare = 8) OR (situamare = 9)),	 CONSTRAINT hid_recife_a_tiporecife_check CHECK ((tiporecife = 0) OR (tiporecife = 1) OR (tiporecife = 2) OR (tiporecife = 20)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_recife_a', 'features','cb_hid_recife_a', 'Camada hid_recife_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_recife_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_recife_a" AFTER INSERT ON "cb_hid_recife_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_recife_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_recife_a" AFTER DELETE ON "cb_hid_recife_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_recife_a'); END ;CREATE TABLE cb_hid_recife_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 situacaocosta smallint NOT NULL,	 situamare smallint NOT NULL,	 tiporecife smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT hid_recife_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_recife_l_situacaocosta_check CHECK ((situacaocosta = 10) OR (situacaocosta = 11)),	 CONSTRAINT hid_recife_l_situamare_check CHECK ((situamare = 0) OR (situamare = 7) OR (situamare = 8) OR (situamare = 9)),	 CONSTRAINT hid_recife_l_tiporecife_check CHECK ((tiporecife = 0) OR (tiporecife = 1) OR (tiporecife = 2) OR (tiporecife = 20)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_recife_l', 'features','cb_hid_recife_l', 'Camada hid_recife_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_recife_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_recife_l" AFTER INSERT ON "cb_hid_recife_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_recife_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_recife_l" AFTER DELETE ON "cb_hid_recife_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_recife_l'); END ;CREATE TABLE cb_hid_recife_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 situacaocosta smallint NOT NULL,	 situamare smallint NOT NULL,	 tiporecife smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT hid_recife_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_recife_p_situacaocosta_check CHECK ((situacaocosta = 10) OR (situacaocosta = 11)),	 CONSTRAINT hid_recife_p_situamare_check CHECK ((situamare = 0) OR (situamare = 7) OR (situamare = 8) OR (situamare = 9)),	 CONSTRAINT hid_recife_p_tiporecife_check CHECK ((tiporecife = 0) OR (tiporecife = 1) OR (tiporecife = 2) OR (tiporecife = 20)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_recife_p', 'features','cb_hid_recife_p', 'Camada hid_recife_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_recife_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_recife_p" AFTER INSERT ON "cb_hid_recife_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_recife_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_recife_p" AFTER DELETE ON "cb_hid_recife_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_recife_p'); END ;CREATE TABLE cb_hid_reservatorio_hidrico_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 namaximomaximorum integer,	 namaximooperacional integer,	 nome varchar(255),	 nomeabrev varchar(255),	 usoprincipal smallint NOT NULL,	 volumeutil integer,	 geom MultiPolygon,	 CONSTRAINT hid_reservatorio_hidrico_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_reservatorio_hidrico_a_usoprincipal_check CHECK ((usoprincipal = 0) OR (usoprincipal = 1) OR (usoprincipal = 2) OR (usoprincipal = 3) OR (usoprincipal = 97) OR (usoprincipal = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_reservatorio_hidrico_a', 'features','cb_hid_reservatorio_hidrico_a', 'Camada hid_reservatorio_hidrico_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_reservatorio_hidrico_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_reservatorio_hidrico_a" AFTER INSERT ON "cb_hid_reservatorio_hidrico_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_reservatorio_hidrico_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_reservatorio_hidrico_a" AFTER DELETE ON "cb_hid_reservatorio_hidrico_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_reservatorio_hidrico_a'); END ;CREATE TABLE cb_hid_rocha_em_agua_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturalamina real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 situacaoemagua smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_rocha_em_agua_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_rocha_em_agua_a_situacaoemagua_check CHECK ((situacaoemagua = 0) OR (situacaoemagua = 4) OR (situacaoemagua = 5) OR (situacaoemagua = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_rocha_em_agua_a', 'features','cb_hid_rocha_em_agua_a', 'Camada hid_rocha_em_agua_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_rocha_em_agua_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_rocha_em_agua_a" AFTER INSERT ON "cb_hid_rocha_em_agua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_rocha_em_agua_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_rocha_em_agua_a" AFTER DELETE ON "cb_hid_rocha_em_agua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_rocha_em_agua_a'); END ;CREATE TABLE cb_hid_rocha_em_agua_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturalamina real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 situacaoemagua smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT hid_rocha_em_agua_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_rocha_em_agua_p_situacaoemagua_check CHECK ((situacaoemagua = 0) OR (situacaoemagua = 4) OR (situacaoemagua = 5) OR (situacaoemagua = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_rocha_em_agua_p', 'features','cb_hid_rocha_em_agua_p', 'Camada hid_rocha_em_agua_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_rocha_em_agua_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_rocha_em_agua_p" AFTER INSERT ON "cb_hid_rocha_em_agua_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_rocha_em_agua_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_rocha_em_agua_p" AFTER DELETE ON "cb_hid_rocha_em_agua_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_rocha_em_agua_p'); END ;CREATE TABLE cb_hid_sumidouro_vertedouro_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 causa smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tiposumvert smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT hid_sumidouro_vertedouro_p_causa_check CHECK ((causa = 0) OR (causa = 1) OR (causa = 2) OR (causa = 3)),	 CONSTRAINT hid_sumidouro_vertedouro_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_sumidouro_vertedouro_p_tiposumvert_check CHECK ((tiposumvert = 1) OR (tiposumvert = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_sumidouro_vertedouro_p', 'features','cb_hid_sumidouro_vertedouro_p', 'Camada hid_sumidouro_vertedouro_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_sumidouro_vertedouro_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_sumidouro_vertedouro_p" AFTER INSERT ON "cb_hid_sumidouro_vertedouro_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_sumidouro_vertedouro_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_sumidouro_vertedouro_p" AFTER DELETE ON "cb_hid_sumidouro_vertedouro_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_sumidouro_vertedouro_p'); END ;CREATE TABLE cb_hid_terreno_suj_inundacao_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 periodicidadeinunda varchar(255),	 geom MultiPolygon,	 CONSTRAINT hid_terreno_suj_inundacao_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_terreno_suj_inundacao_a', 'features','cb_hid_terreno_suj_inundacao_a', 'Camada hid_terreno_suj_inundacao_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_terreno_suj_inundacao_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_terreno_suj_inundacao_a" AFTER INSERT ON "cb_hid_terreno_suj_inundacao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_terreno_suj_inundacao_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_terreno_suj_inundacao_a" AFTER DELETE ON "cb_hid_terreno_suj_inundacao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_terreno_suj_inundacao_a'); END ;CREATE TABLE cb_hid_trecho_drenagem_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 caladomax real,	 coincidecomdentrode smallint NOT NULL,	 compartilhado smallint NOT NULL,	 dentrodepoligono smallint NOT NULL,	 eixoprincipal smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 larguramedia real,	 navegabilidade smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 profundidademedia real,	 regime smallint NOT NULL,	 velocidademedcorrente real,	 geom MultiLinestring,	 CONSTRAINT hid_trecho_drenagem_l_coincidecomdentrode_check CHECK ((coincidecomdentrode = 1) OR (coincidecomdentrode = 2) OR (coincidecomdentrode = 9) OR (coincidecomdentrode = 10) OR (coincidecomdentrode = 11) OR (coincidecomdentrode = 12) OR (coincidecomdentrode = 13) OR (coincidecomdentrode = 14) OR (coincidecomdentrode = 15) OR (coincidecomdentrode = 16) OR (coincidecomdentrode = 19) OR (coincidecomdentrode = 97)),	 CONSTRAINT hid_trecho_drenagem_l_compartilhado_check CHECK ((compartilhado = 1) OR (compartilhado = 2)),	 CONSTRAINT hid_trecho_drenagem_l_dentrodepoligono_check CHECK ((dentrodepoligono = 1) OR (dentrodepoligono = 2)),	 CONSTRAINT hid_trecho_drenagem_l_eixoprincipal_check CHECK ((eixoprincipal = 1) OR (eixoprincipal = 2)),	 CONSTRAINT hid_trecho_drenagem_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_trecho_drenagem_l_navegabilidade_check CHECK ((navegabilidade = 0) OR (navegabilidade = 1) OR (navegabilidade = 2)),	 CONSTRAINT hid_trecho_drenagem_l_regime_check CHECK ((regime = 0) OR (regime = 1) OR (regime = 2) OR (regime = 3) OR (regime = 4) OR (regime = 5) OR (regime = 6)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_trecho_drenagem_l', 'features','cb_hid_trecho_drenagem_l', 'Camada hid_trecho_drenagem_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_trecho_drenagem_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_trecho_drenagem_l" AFTER INSERT ON "cb_hid_trecho_drenagem_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_trecho_drenagem_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_trecho_drenagem_l" AFTER DELETE ON "cb_hid_trecho_drenagem_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_trecho_drenagem_l'); END ;CREATE TABLE cb_hid_trecho_massa_dagua_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 regime smallint NOT NULL,	 salinidade smallint NOT NULL,	 tipotrechomassa smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT hid_trecho_massa_dagua_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT hid_trecho_massa_dagua_a_regime_check CHECK ((regime = 0) OR (regime = 1) OR (regime = 2) OR (regime = 3) OR (regime = 4) OR (regime = 5) OR (regime = 6)),	 CONSTRAINT hid_trecho_massa_dagua_a_salinidade_check CHECK ((salinidade = 0) OR (salinidade = 1) OR (salinidade = 2)),	 CONSTRAINT hid_trecho_massa_dagua_a_tipotrechomassa_check CHECK ((tipotrechomassa = 1) OR (tipotrechomassa = 2) OR (tipotrechomassa = 9) OR (tipotrechomassa = 10) OR (tipotrechomassa = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_hid_trecho_massa_dagua_a', 'features','cb_hid_trecho_massa_dagua_a', 'Camada hid_trecho_massa_dagua_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_hid_trecho_massa_dagua_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_hid_trecho_massa_dagua_a" AFTER INSERT ON "cb_hid_trecho_massa_dagua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_hid_trecho_massa_dagua_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_hid_trecho_massa_dagua_a" AFTER DELETE ON "cb_hid_trecho_massa_dagua_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_hid_trecho_massa_dagua_a'); END ;CREATE TABLE cb_lim_area_de_litigio_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 descricao varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_area_de_litigio_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_area_de_litigio_a', 'features','cb_lim_area_de_litigio_a', 'Camada lim_area_de_litigio_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_area_de_litigio_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_area_de_litigio_a" AFTER INSERT ON "cb_lim_area_de_litigio_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_area_de_litigio_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_area_de_litigio_a" AFTER DELETE ON "cb_lim_area_de_litigio_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_area_de_litigio_a'); END ;CREATE TABLE cb_lim_area_desenv_controle_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 classificacao varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_area_desenv_controle_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_area_desenv_controle_a', 'features','cb_lim_area_desenv_controle_a', 'Camada lim_area_desenv_controle_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_area_desenv_controle_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_area_desenv_controle_a" AFTER INSERT ON "cb_lim_area_desenv_controle_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_area_desenv_controle_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_area_desenv_controle_a" AFTER DELETE ON "cb_lim_area_desenv_controle_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_area_desenv_controle_a'); END ;CREATE TABLE cb_lim_area_desenv_controle_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 classificacao varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT lim_area_desenv_controle_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_area_desenv_controle_p', 'features','cb_lim_area_desenv_controle_p', 'Camada lim_area_desenv_controle_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_area_desenv_controle_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_area_desenv_controle_p" AFTER INSERT ON "cb_lim_area_desenv_controle_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_area_desenv_controle_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_area_desenv_controle_p" AFTER DELETE ON "cb_lim_area_desenv_controle_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_area_desenv_controle_p'); END ;CREATE TABLE cb_lim_area_de_propriedade_particular_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_area_de_propriedade_particular_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_area_de_propriedade_particular_a', 'features','cb_lim_area_de_propriedade_particular_a', 'Camada lim_area_de_propriedade_particular_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_area_de_propriedade_particular_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_area_de_propriedade_particular_a" AFTER INSERT ON "cb_lim_area_de_propriedade_particular_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_area_de_propriedade_particular_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_area_de_propriedade_particular_a" AFTER DELETE ON "cb_lim_area_de_propriedade_particular_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_area_de_propriedade_particular_a'); END ;CREATE TABLE cb_lim_area_uso_comunitario_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoareausocomun smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT lim_area_uso_comunitario_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_area_uso_comunitario_a_tipoareausocomun_check CHECK ((tipoareausocomun = 1) OR (tipoareausocomun = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_area_uso_comunitario_a', 'features','cb_lim_area_uso_comunitario_a', 'Camada lim_area_uso_comunitario_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_area_uso_comunitario_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_area_uso_comunitario_a" AFTER INSERT ON "cb_lim_area_uso_comunitario_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_area_uso_comunitario_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_area_uso_comunitario_a" AFTER DELETE ON "cb_lim_area_uso_comunitario_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_area_uso_comunitario_a'); END ;CREATE TABLE cb_lim_area_uso_comunitario_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoareausocomun smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT lim_area_uso_comunitario_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_area_uso_comunitario_p_tipoareausocomun_check CHECK ((tipoareausocomun = 1) OR (tipoareausocomun = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_area_uso_comunitario_p', 'features','cb_lim_area_uso_comunitario_p', 'Camada lim_area_uso_comunitario_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_area_uso_comunitario_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_area_uso_comunitario_p" AFTER INSERT ON "cb_lim_area_uso_comunitario_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_area_uso_comunitario_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_area_uso_comunitario_p" AFTER DELETE ON "cb_lim_area_uso_comunitario_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_area_uso_comunitario_p'); END ;CREATE TABLE cb_lim_bairro_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 anodereferencia integer,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_bairro_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_bairro_a', 'features','cb_lim_bairro_a', 'Camada lim_bairro_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_bairro_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_bairro_a" AFTER INSERT ON "cb_lim_bairro_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_bairro_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_bairro_a" AFTER DELETE ON "cb_lim_bairro_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_bairro_a'); END ;CREATE TABLE cb_lim_delimitacao_fisica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 eletrificada smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipodelimfis smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT lim_delimitacao_fisica_l_eletrificada_check CHECK ((eletrificada = 0) OR (eletrificada = 1) OR (eletrificada = 2)),	 CONSTRAINT lim_delimitacao_fisica_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_delimitacao_fisica_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT lim_delimitacao_fisica_l_tipodelimfis_check CHECK ((tipodelimfis = 0) OR (tipodelimfis = 1) OR (tipodelimfis = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_delimitacao_fisica_l', 'features','cb_lim_delimitacao_fisica_l', 'Camada lim_delimitacao_fisica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_delimitacao_fisica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_delimitacao_fisica_l" AFTER INSERT ON "cb_lim_delimitacao_fisica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_delimitacao_fisica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_delimitacao_fisica_l" AFTER DELETE ON "cb_lim_delimitacao_fisica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_delimitacao_fisica_l'); END ;CREATE TABLE cb_lim_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT lim_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_descontinuidade_geometrica_a', 'features','cb_lim_descontinuidade_geometrica_a', 'Camada lim_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_descontinuidade_geometrica_a" AFTER INSERT ON "cb_lim_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_descontinuidade_geometrica_a" AFTER DELETE ON "cb_lim_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_lim_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT lim_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_descontinuidade_geometrica_l', 'features','cb_lim_descontinuidade_geometrica_l', 'Camada lim_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_descontinuidade_geometrica_l" AFTER INSERT ON "cb_lim_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_descontinuidade_geometrica_l" AFTER DELETE ON "cb_lim_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_lim_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT lim_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_descontinuidade_geometrica_p', 'features','cb_lim_descontinuidade_geometrica_p', 'Camada lim_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_descontinuidade_geometrica_p" AFTER INSERT ON "cb_lim_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_descontinuidade_geometrica_p" AFTER DELETE ON "cb_lim_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_lim_distrito_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 anodereferencia varchar(255),	 geocodigo varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_distrito_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_distrito_a', 'features','cb_lim_distrito_a', 'Camada lim_distrito_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_distrito_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_distrito_a" AFTER INSERT ON "cb_lim_distrito_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_distrito_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_distrito_a" AFTER DELETE ON "cb_lim_distrito_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_distrito_a'); END ;CREATE TABLE cb_lim_limite_area_especial_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 coincidecomdentrode smallint NOT NULL,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 obssituacao varchar(255),	 tipolimareaesp smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT lim_limite_area_especial_l_coincidecomdentrode_check CHECK ((coincidecomdentrode = 2) OR (coincidecomdentrode = 3) OR (coincidecomdentrode = 4) OR (coincidecomdentrode = 5) OR (coincidecomdentrode = 6) OR (coincidecomdentrode = 7) OR (coincidecomdentrode = 8) OR (coincidecomdentrode = 9) OR (coincidecomdentrode = 96)),	 CONSTRAINT lim_limite_area_especial_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_limite_area_especial_l_tipolimareaesp_check CHECK ((tipolimareaesp = 1) OR (tipolimareaesp = 2) OR (tipolimareaesp = 3) OR (tipolimareaesp = 4) OR (tipolimareaesp = 5) OR (tipolimareaesp = 6) OR (tipolimareaesp = 7) OR (tipolimareaesp = 8) OR (tipolimareaesp = 9) OR (tipolimareaesp = 10) OR (tipolimareaesp = 11) OR (tipolimareaesp = 12) OR (tipolimareaesp = 13) OR (tipolimareaesp = 14) OR (tipolimareaesp = 15) OR (tipolimareaesp = 16) OR (tipolimareaesp = 17) OR (tipolimareaesp = 18) OR (tipolimareaesp = 19) OR (tipolimareaesp = 20) OR (tipolimareaesp = 21) OR (tipolimareaesp = 22) OR (tipolimareaesp = 23) OR (tipolimareaesp = 24) OR (tipolimareaesp = 25) OR (tipolimareaesp = 26) OR (tipolimareaesp = 27) OR (tipolimareaesp = 28) OR (tipolimareaesp = 29) OR (tipolimareaesp = 30) OR (tipolimareaesp = 31) OR (tipolimareaesp = 32) OR (tipolimareaesp = 33) OR (tipolimareaesp = 34) OR (tipolimareaesp = 35) OR (tipolimareaesp = 36) OR (tipolimareaesp = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_limite_area_especial_l', 'features','cb_lim_limite_area_especial_l', 'Camada lim_limite_area_especial_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_limite_area_especial_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_limite_area_especial_l" AFTER INSERT ON "cb_lim_limite_area_especial_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_limite_area_especial_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_limite_area_especial_l" AFTER DELETE ON "cb_lim_limite_area_especial_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_limite_area_especial_l'); END ;CREATE TABLE cb_lim_limite_intra_munic_adm_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 coincidecomdentrode smallint NOT NULL,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 obssituacao varchar(255),	 tipolimintramun smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT lim_limite_intra_munic_adm_l_coincidecomdentrode_check CHECK ((coincidecomdentrode = 2) OR (coincidecomdentrode = 3) OR (coincidecomdentrode = 4) OR (coincidecomdentrode = 5) OR (coincidecomdentrode = 6) OR (coincidecomdentrode = 7) OR (coincidecomdentrode = 8) OR (coincidecomdentrode = 9) OR (coincidecomdentrode = 96)),	 CONSTRAINT lim_limite_intra_munic_adm_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_limite_intra_munic_adm_l_tipolimintramun_check CHECK ((tipolimintramun = 1) OR (tipolimintramun = 2) OR (tipolimintramun = 3) OR (tipolimintramun = 4) OR (tipolimintramun = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_limite_intra_munic_adm_l', 'features','cb_lim_limite_intra_munic_adm_l', 'Camada lim_limite_intra_munic_adm_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_limite_intra_munic_adm_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_limite_intra_munic_adm_l" AFTER INSERT ON "cb_lim_limite_intra_munic_adm_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_limite_intra_munic_adm_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_limite_intra_munic_adm_l" AFTER DELETE ON "cb_lim_limite_intra_munic_adm_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_limite_intra_munic_adm_l'); END ;CREATE TABLE cb_lim_limite_operacional_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 coincidecomdentrode smallint NOT NULL,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 obssituacao varchar(255),	 tipolimoper smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT lim_limite_operacional_l_coincidecomdentrode_check CHECK ((coincidecomdentrode = 2) OR (coincidecomdentrode = 3) OR (coincidecomdentrode = 4) OR (coincidecomdentrode = 5) OR (coincidecomdentrode = 6) OR (coincidecomdentrode = 7) OR (coincidecomdentrode = 8) OR (coincidecomdentrode = 9) OR (coincidecomdentrode = 96)),	 CONSTRAINT lim_limite_operacional_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_limite_operacional_l_tipolimoper_check CHECK ((tipolimoper = 0) OR (tipolimoper = 1) OR (tipolimoper = 2) OR (tipolimoper = 3) OR (tipolimoper = 4) OR (tipolimoper = 5) OR (tipolimoper = 6)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_limite_operacional_l', 'features','cb_lim_limite_operacional_l', 'Camada lim_limite_operacional_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_limite_operacional_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_limite_operacional_l" AFTER INSERT ON "cb_lim_limite_operacional_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_limite_operacional_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_limite_operacional_l" AFTER DELETE ON "cb_lim_limite_operacional_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_limite_operacional_l'); END ;CREATE TABLE cb_lim_limite_particular_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 coincidecomdentrode smallint NOT NULL,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 obssituacao varchar(255),	 geom MultiLinestring,	 CONSTRAINT lim_limite_particular_l_coincidecomdentrode_check CHECK ((coincidecomdentrode = 2) OR (coincidecomdentrode = 3) OR (coincidecomdentrode = 4) OR (coincidecomdentrode = 5) OR (coincidecomdentrode = 6) OR (coincidecomdentrode = 7) OR (coincidecomdentrode = 8) OR (coincidecomdentrode = 9) OR (coincidecomdentrode = 96)),	 CONSTRAINT lim_limite_particular_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_limite_particular_l', 'features','cb_lim_limite_particular_l', 'Camada lim_limite_particular_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_limite_particular_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_limite_particular_l" AFTER INSERT ON "cb_lim_limite_particular_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_limite_particular_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_limite_particular_l" AFTER DELETE ON "cb_lim_limite_particular_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_limite_particular_l'); END ;CREATE TABLE cb_lim_limite_politico_adm_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 coincidecomdentrode smallint NOT NULL,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 obssituacao varchar(255),	 tipolimpol smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT lim_limite_politico_adm_l_coincidecomdentrode_check CHECK ((coincidecomdentrode = 2) OR (coincidecomdentrode = 3) OR (coincidecomdentrode = 4) OR (coincidecomdentrode = 5) OR (coincidecomdentrode = 6) OR (coincidecomdentrode = 7) OR (coincidecomdentrode = 8) OR (coincidecomdentrode = 9) OR (coincidecomdentrode = 96)),	 CONSTRAINT lim_limite_politico_adm_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_limite_politico_adm_l_tipolimpol_check CHECK ((tipolimpol = 1) OR (tipolimpol = 2) OR (tipolimpol = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_limite_politico_adm_l', 'features','cb_lim_limite_politico_adm_l', 'Camada lim_limite_politico_adm_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_limite_politico_adm_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_limite_politico_adm_l" AFTER INSERT ON "cb_lim_limite_politico_adm_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_limite_politico_adm_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_limite_politico_adm_l" AFTER DELETE ON "cb_lim_limite_politico_adm_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_limite_politico_adm_l'); END ;CREATE TABLE cb_lim_linha_de_limite_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 coincidecomdentrode smallint NOT NULL,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiLinestring,	 CONSTRAINT lim_linha_de_limite_l_coincidecomdentrode_check CHECK ((coincidecomdentrode = 2) OR (coincidecomdentrode = 3) OR (coincidecomdentrode = 4) OR (coincidecomdentrode = 5) OR (coincidecomdentrode = 6) OR (coincidecomdentrode = 7) OR (coincidecomdentrode = 8) OR (coincidecomdentrode = 9) OR (coincidecomdentrode = 96)),	 CONSTRAINT lim_linha_de_limite_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_linha_de_limite_l', 'features','cb_lim_linha_de_limite_l', 'Camada lim_linha_de_limite_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_linha_de_limite_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_linha_de_limite_l" AFTER INSERT ON "cb_lim_linha_de_limite_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_linha_de_limite_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_linha_de_limite_l" AFTER DELETE ON "cb_lim_linha_de_limite_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_linha_de_limite_l'); END ;CREATE TABLE cb_lim_marco_de_limite_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 altitudeortometrica real,	 geometriaaproximada smallint NOT NULL,	 latitude varchar(255),	 longitude varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 orgresp varchar(255),	 outrarefalt varchar(255),	 outrarefplan varchar(255),	 referencialaltim smallint NOT NULL,	 sistemageodesico smallint NOT NULL,	 tipomarcolim smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT lim_marco_de_limite_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_marco_de_limite_p_referencialaltim_check CHECK ((referencialaltim = 1) OR (referencialaltim = 2) OR (referencialaltim = 3) OR (referencialaltim = 4) OR (referencialaltim = 5)),	 CONSTRAINT lim_marco_de_limite_p_sistemageodesico_check CHECK ((sistemageodesico = 1) OR (sistemageodesico = 2) OR (sistemageodesico = 3) OR (sistemageodesico = 4) OR (sistemageodesico = 5) OR (sistemageodesico = 6)),	 CONSTRAINT lim_marco_de_limite_p_tipomarcolim_check CHECK ((tipomarcolim = 1) OR (tipomarcolim = 2) OR (tipomarcolim = 3) OR (tipomarcolim = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_marco_de_limite_p', 'features','cb_lim_marco_de_limite_p', 'Camada lim_marco_de_limite_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_marco_de_limite_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_marco_de_limite_p" AFTER INSERT ON "cb_lim_marco_de_limite_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_marco_de_limite_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_marco_de_limite_p" AFTER DELETE ON "cb_lim_marco_de_limite_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_marco_de_limite_p'); END ;CREATE TABLE cb_lim_municipio_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 anodereferencia integer,	 geocodigo varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_municipio_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_municipio_a', 'features','cb_lim_municipio_a', 'Camada lim_municipio_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_municipio_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_municipio_a" AFTER INSERT ON "cb_lim_municipio_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_municipio_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_municipio_a" AFTER DELETE ON "cb_lim_municipio_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_municipio_a'); END ;CREATE TABLE cb_lim_outras_unid_protegidas_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 anocriacao varchar(255),	 areaoficial varchar(255),	 geometriaaproximada smallint NOT NULL,	 historicomodificacao varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 tipooutunidprot smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT lim_outras_unid_protegidas_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT lim_outras_unid_protegidas_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_outras_unid_protegidas_a_tipooutunidprot_check CHECK ((tipooutunidprot = 1) OR (tipooutunidprot = 2) OR (tipooutunidprot = 3) OR (tipooutunidprot = 4) OR (tipooutunidprot = 5) OR (tipooutunidprot = 6) OR (tipooutunidprot = 7) OR (tipooutunidprot = 8) OR (tipooutunidprot = 9)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_outras_unid_protegidas_a', 'features','cb_lim_outras_unid_protegidas_a', 'Camada lim_outras_unid_protegidas_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_outras_unid_protegidas_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_outras_unid_protegidas_a" AFTER INSERT ON "cb_lim_outras_unid_protegidas_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_outras_unid_protegidas_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_outras_unid_protegidas_a" AFTER DELETE ON "cb_lim_outras_unid_protegidas_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_outras_unid_protegidas_a'); END ;CREATE TABLE cb_lim_outras_unid_protegidas_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 anocriacao varchar(255),	 areaoficial varchar(255),	 geometriaaproximada smallint NOT NULL,	 historicomodificacao varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 tipooutunidprot smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT lim_outras_unid_protegidas_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT lim_outras_unid_protegidas_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_outras_unid_protegidas_p_tipooutunidprot_check CHECK ((tipooutunidprot = 1) OR (tipooutunidprot = 2) OR (tipooutunidprot = 3) OR (tipooutunidprot = 4) OR (tipooutunidprot = 5) OR (tipooutunidprot = 6) OR (tipooutunidprot = 7) OR (tipooutunidprot = 8) OR (tipooutunidprot = 9)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_outras_unid_protegidas_p', 'features','cb_lim_outras_unid_protegidas_p', 'Camada lim_outras_unid_protegidas_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_outras_unid_protegidas_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_outras_unid_protegidas_p" AFTER INSERT ON "cb_lim_outras_unid_protegidas_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_outras_unid_protegidas_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_outras_unid_protegidas_p" AFTER DELETE ON "cb_lim_outras_unid_protegidas_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_outras_unid_protegidas_p'); END ;CREATE TABLE cb_lim_outros_limites_oficiais_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 coincidecomdentrode smallint NOT NULL,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 obssituacao varchar(255),	 tipooutlimofic smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT lim_outros_limites_oficiais_l_coincidecomdentrode_check CHECK ((coincidecomdentrode = 2) OR (coincidecomdentrode = 3) OR (coincidecomdentrode = 4) OR (coincidecomdentrode = 5) OR (coincidecomdentrode = 6) OR (coincidecomdentrode = 7) OR (coincidecomdentrode = 8) OR (coincidecomdentrode = 9) OR (coincidecomdentrode = 96)),	 CONSTRAINT lim_outros_limites_oficiais_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_outros_limites_oficiais_l_tipooutlimofic_check CHECK ((tipooutlimofic = 0) OR (tipooutlimofic = 1) OR (tipooutlimofic = 2) OR (tipooutlimofic = 3) OR (tipooutlimofic = 4) OR (tipooutlimofic = 5) OR (tipooutlimofic = 6) OR (tipooutlimofic = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_outros_limites_oficiais_l', 'features','cb_lim_outros_limites_oficiais_l', 'Camada lim_outros_limites_oficiais_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_outros_limites_oficiais_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_outros_limites_oficiais_l" AFTER INSERT ON "cb_lim_outros_limites_oficiais_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_outros_limites_oficiais_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_outros_limites_oficiais_l" AFTER DELETE ON "cb_lim_outros_limites_oficiais_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_outros_limites_oficiais_l'); END ;CREATE TABLE cb_lim_pais_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codiso3166 varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_pais_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_pais_a', 'features','cb_lim_pais_a', 'Camada lim_pais_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_pais_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_pais_a" AFTER INSERT ON "cb_lim_pais_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_pais_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_pais_a" AFTER DELETE ON "cb_lim_pais_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_pais_a'); END ;CREATE TABLE cb_lim_regiao_administrativa_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 anodereferencia integer,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_regiao_administrativa_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_regiao_administrativa_a', 'features','cb_lim_regiao_administrativa_a', 'Camada lim_regiao_administrativa_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_regiao_administrativa_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_regiao_administrativa_a" AFTER INSERT ON "cb_lim_regiao_administrativa_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_regiao_administrativa_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_regiao_administrativa_a" AFTER DELETE ON "cb_lim_regiao_administrativa_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_regiao_administrativa_a'); END ;CREATE TABLE cb_lim_sub_distrito_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 anodereferencia varchar(255),	 geocodigo varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_sub_distrito_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_sub_distrito_a', 'features','cb_lim_sub_distrito_a', 'Camada lim_sub_distrito_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_sub_distrito_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_sub_distrito_a" AFTER INSERT ON "cb_lim_sub_distrito_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_sub_distrito_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_sub_distrito_a" AFTER DELETE ON "cb_lim_sub_distrito_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_sub_distrito_a'); END ;CREATE TABLE cb_lim_terra_indigena_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 areaoficialha real,	 datasituacaojuridica date,	 geometriaaproximada smallint NOT NULL,	 grupoetnico varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 nometi varchar(255),	 perimetrooficial real,	 situacaojuridica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT lim_terra_indigena_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_terra_indigena_a_situacaojuridica_check CHECK ((situacaojuridica = 0) OR (situacaojuridica = 1) OR (situacaojuridica = 2) OR (situacaojuridica = 3) OR (situacaojuridica = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_terra_indigena_a', 'features','cb_lim_terra_indigena_a', 'Camada lim_terra_indigena_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_terra_indigena_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_terra_indigena_a" AFTER INSERT ON "cb_lim_terra_indigena_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_terra_indigena_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_terra_indigena_a" AFTER DELETE ON "cb_lim_terra_indigena_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_terra_indigena_a'); END ;CREATE TABLE cb_lim_terra_indigena_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 areaoficialha real,	 datasituacaojuridica date,	 geometriaaproximada smallint NOT NULL,	 grupoetnico varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 nometi varchar(255),	 perimetrooficial real,	 situacaojuridica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT lim_terra_indigena_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_terra_indigena_p_situacaojuridica_check CHECK ((situacaojuridica = 0) OR (situacaojuridica = 1) OR (situacaojuridica = 2) OR (situacaojuridica = 3) OR (situacaojuridica = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_terra_indigena_p', 'features','cb_lim_terra_indigena_p', 'Camada lim_terra_indigena_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_terra_indigena_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_terra_indigena_p" AFTER INSERT ON "cb_lim_terra_indigena_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_terra_indigena_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_terra_indigena_p" AFTER DELETE ON "cb_lim_terra_indigena_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_terra_indigena_p'); END ;CREATE TABLE cb_lim_terra_publica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 classificacao varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_terra_publica_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_terra_publica_a', 'features','cb_lim_terra_publica_a', 'Camada lim_terra_publica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_terra_publica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_terra_publica_a" AFTER INSERT ON "cb_lim_terra_publica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_terra_publica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_terra_publica_a" AFTER DELETE ON "cb_lim_terra_publica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_terra_publica_a'); END ;CREATE TABLE cb_lim_terra_publica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 classificacao varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT lim_terra_publica_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_terra_publica_p', 'features','cb_lim_terra_publica_p', 'Camada lim_terra_publica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_terra_publica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_terra_publica_p" AFTER INSERT ON "cb_lim_terra_publica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_terra_publica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_terra_publica_p" AFTER DELETE ON "cb_lim_terra_publica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_terra_publica_p'); END ;CREATE TABLE cb_lim_unidade_conserv_nao_snuc_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 anocriacao varchar(255),	 areaoficial varchar(255),	 atolegal varchar(255),	 classificacao varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_unidade_conserv_nao_snuc_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT lim_unidade_conserv_nao_snuc_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_unidade_conserv_nao_snuc_a', 'features','cb_lim_unidade_conserv_nao_snuc_a', 'Camada lim_unidade_conserv_nao_snuc_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_unidade_conserv_nao_snuc_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_unidade_conserv_nao_snuc_a" AFTER INSERT ON "cb_lim_unidade_conserv_nao_snuc_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_unidade_conserv_nao_snuc_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_unidade_conserv_nao_snuc_a" AFTER DELETE ON "cb_lim_unidade_conserv_nao_snuc_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_unidade_conserv_nao_snuc_a'); END ;CREATE TABLE cb_lim_unidade_conserv_nao_snuc_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 anocriacao varchar(255),	 areaoficial varchar(255),	 atolegal varchar(255),	 classificacao varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 geom MultiPoint,	 CONSTRAINT lim_unidade_conserv_nao_snuc_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT lim_unidade_conserv_nao_snuc_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_unidade_conserv_nao_snuc_p', 'features','cb_lim_unidade_conserv_nao_snuc_p', 'Camada lim_unidade_conserv_nao_snuc_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_unidade_conserv_nao_snuc_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_unidade_conserv_nao_snuc_p" AFTER INSERT ON "cb_lim_unidade_conserv_nao_snuc_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_unidade_conserv_nao_snuc_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_unidade_conserv_nao_snuc_p" AFTER DELETE ON "cb_lim_unidade_conserv_nao_snuc_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_unidade_conserv_nao_snuc_p'); END ;CREATE TABLE cb_lim_unidade_federacao_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geocodigo varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 geom MultiPolygon,	 CONSTRAINT lim_unidade_federacao_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_unidade_federacao_a', 'features','cb_lim_unidade_federacao_a', 'Camada lim_unidade_federacao_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_unidade_federacao_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_unidade_federacao_a" AFTER INSERT ON "cb_lim_unidade_federacao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_unidade_federacao_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_unidade_federacao_a" AFTER DELETE ON "cb_lim_unidade_federacao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_unidade_federacao_a'); END ;CREATE TABLE cb_lim_unidade_protecao_integral_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 anocriacao integer,	 areaoficial varchar(255),	 atolegal varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 tipounidprotinteg smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT lim_unidade_protecao_integral_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT lim_unidade_protecao_integral_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_unidade_protecao_integral_a_tipounidprotinteg_check CHECK ((tipounidprotinteg = 1) OR (tipounidprotinteg = 2) OR (tipounidprotinteg = 3) OR (tipounidprotinteg = 4) OR (tipounidprotinteg = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_unidade_protecao_integral_a', 'features','cb_lim_unidade_protecao_integral_a', 'Camada lim_unidade_protecao_integral_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_unidade_protecao_integral_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_unidade_protecao_integral_a" AFTER INSERT ON "cb_lim_unidade_protecao_integral_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_unidade_protecao_integral_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_unidade_protecao_integral_a" AFTER DELETE ON "cb_lim_unidade_protecao_integral_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_unidade_protecao_integral_a'); END ;CREATE TABLE cb_lim_unidade_protecao_integral_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 anocriacao integer,	 areaoficial varchar(255),	 atolegal varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 tipounidprotinteg smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT lim_unidade_protecao_integral_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT lim_unidade_protecao_integral_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_unidade_protecao_integral_p_tipounidprotinteg_check CHECK ((tipounidprotinteg = 1) OR (tipounidprotinteg = 2) OR (tipounidprotinteg = 3) OR (tipounidprotinteg = 4) OR (tipounidprotinteg = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_unidade_protecao_integral_p', 'features','cb_lim_unidade_protecao_integral_p', 'Camada lim_unidade_protecao_integral_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_unidade_protecao_integral_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_unidade_protecao_integral_p" AFTER INSERT ON "cb_lim_unidade_protecao_integral_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_unidade_protecao_integral_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_unidade_protecao_integral_p" AFTER DELETE ON "cb_lim_unidade_protecao_integral_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_unidade_protecao_integral_p'); END ;CREATE TABLE cb_lim_unidade_uso_sustentavel_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 anocriacao integer,	 areaoficial varchar(255),	 atolegal varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 tipounidusosust smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT lim_unidade_uso_sustentavel_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT lim_unidade_uso_sustentavel_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_unidade_uso_sustentavel_a_tipounidusosust_check CHECK ((tipounidusosust = 1) OR (tipounidusosust = 2) OR (tipounidusosust = 3) OR (tipounidusosust = 4) OR (tipounidusosust = 5) OR (tipounidusosust = 6) OR (tipounidusosust = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_unidade_uso_sustentavel_a', 'features','cb_lim_unidade_uso_sustentavel_a', 'Camada lim_unidade_uso_sustentavel_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_unidade_uso_sustentavel_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_unidade_uso_sustentavel_a" AFTER INSERT ON "cb_lim_unidade_uso_sustentavel_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_unidade_uso_sustentavel_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_unidade_uso_sustentavel_a" AFTER DELETE ON "cb_lim_unidade_uso_sustentavel_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_unidade_uso_sustentavel_a'); END ;CREATE TABLE cb_lim_unidade_uso_sustentavel_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 anocriacao integer,	 areaoficial varchar(255),	 atolegal varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 tipounidusosust smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT lim_unidade_uso_sustentavel_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT lim_unidade_uso_sustentavel_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT lim_unidade_uso_sustentavel_p_tipounidusosust_check CHECK ((tipounidusosust = 1) OR (tipounidusosust = 2) OR (tipounidusosust = 3) OR (tipounidusosust = 4) OR (tipounidusosust = 5) OR (tipounidusosust = 6) OR (tipounidusosust = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_lim_unidade_uso_sustentavel_p', 'features','cb_lim_unidade_uso_sustentavel_p', 'Camada lim_unidade_uso_sustentavel_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_lim_unidade_uso_sustentavel_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_lim_unidade_uso_sustentavel_p" AFTER INSERT ON "cb_lim_unidade_uso_sustentavel_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_lim_unidade_uso_sustentavel_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_lim_unidade_uso_sustentavel_p" AFTER DELETE ON "cb_lim_unidade_uso_sustentavel_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_lim_unidade_uso_sustentavel_p'); END ;CREATE TABLE cb_loc_aglom_rural_de_ext_urbana_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 identificador varchar(255),	 latitude varchar(255),	 longitude varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT loc_aglom_rural_de_ext_urbana_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_aglom_rural_de_ext_urbana_p', 'features','cb_loc_aglom_rural_de_ext_urbana_p', 'Camada loc_aglom_rural_de_ext_urbana_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_aglom_rural_de_ext_urbana_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_aglom_rural_de_ext_urbana_p" AFTER INSERT ON "cb_loc_aglom_rural_de_ext_urbana_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_aglom_rural_de_ext_urbana_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_aglom_rural_de_ext_urbana_p" AFTER DELETE ON "cb_loc_aglom_rural_de_ext_urbana_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_aglom_rural_de_ext_urbana_p'); END ;CREATE TABLE cb_loc_aglomerado_rural_isolado_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 identificador varchar(255),	 latitude varchar(255),	 longitude varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 tipoaglomrurisol smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT loc_aglomerado_rural_isolado_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT loc_aglomerado_rural_isolado_p_tipoaglomrurisol_check CHECK ((tipoaglomrurisol = 5) OR (tipoaglomrurisol = 6) OR (tipoaglomrurisol = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_aglomerado_rural_isolado_p', 'features','cb_loc_aglomerado_rural_isolado_p', 'Camada loc_aglomerado_rural_isolado_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_aglomerado_rural_isolado_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_aglomerado_rural_isolado_p" AFTER INSERT ON "cb_loc_aglomerado_rural_isolado_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_aglomerado_rural_isolado_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_aglomerado_rural_isolado_p" AFTER DELETE ON "cb_loc_aglomerado_rural_isolado_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_aglomerado_rural_isolado_p'); END ;CREATE TABLE cb_loc_area_edificada_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT loc_area_edificada_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_area_edificada_a', 'features','cb_loc_area_edificada_a', 'Camada loc_area_edificada_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_area_edificada_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_area_edificada_a" AFTER INSERT ON "cb_loc_area_edificada_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_area_edificada_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_area_edificada_a" AFTER DELETE ON "cb_loc_area_edificada_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_area_edificada_a'); END ;CREATE TABLE cb_loc_area_habitacional_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT loc_area_habitacional_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_area_habitacional_a', 'features','cb_loc_area_habitacional_a', 'Camada loc_area_habitacional_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_area_habitacional_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_area_habitacional_a" AFTER INSERT ON "cb_loc_area_habitacional_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_area_habitacional_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_area_habitacional_a" AFTER DELETE ON "cb_loc_area_habitacional_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_area_habitacional_a'); END ;CREATE TABLE cb_loc_area_urbana_isolada_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoassociado smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT loc_area_urbana_isolada_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT loc_area_urbana_isolada_a_tipoassociado_check CHECK ((tipoassociado = 1) OR (tipoassociado = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_area_urbana_isolada_a', 'features','cb_loc_area_urbana_isolada_a', 'Camada loc_area_urbana_isolada_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_area_urbana_isolada_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_area_urbana_isolada_a" AFTER INSERT ON "cb_loc_area_urbana_isolada_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_area_urbana_isolada_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_area_urbana_isolada_a" AFTER DELETE ON "cb_loc_area_urbana_isolada_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_area_urbana_isolada_a'); END ;CREATE TABLE cb_loc_capital_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 identificador varchar(255),	 latitude varchar(255),	 longitude varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 tipocapital smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT loc_capital_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT loc_capital_p_tipocapital_check CHECK ((tipocapital = 2) OR (tipocapital = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_capital_p', 'features','cb_loc_capital_p', 'Camada loc_capital_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_capital_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_capital_p" AFTER INSERT ON "cb_loc_capital_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_capital_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_capital_p" AFTER DELETE ON "cb_loc_capital_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_capital_p'); END ;CREATE TABLE cb_loc_cidade_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 identificador varchar(255),	 latitude varchar(255),	 longitude varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT loc_cidade_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_cidade_p', 'features','cb_loc_cidade_p', 'Camada loc_cidade_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_cidade_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_cidade_p" AFTER INSERT ON "cb_loc_cidade_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_cidade_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_cidade_p" AFTER DELETE ON "cb_loc_cidade_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_cidade_p'); END ;CREATE TABLE cb_loc_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT loc_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_descontinuidade_geometrica_a', 'features','cb_loc_descontinuidade_geometrica_a', 'Camada loc_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_descontinuidade_geometrica_a" AFTER INSERT ON "cb_loc_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_descontinuidade_geometrica_a" AFTER DELETE ON "cb_loc_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_loc_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT loc_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_descontinuidade_geometrica_l', 'features','cb_loc_descontinuidade_geometrica_l', 'Camada loc_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_descontinuidade_geometrica_l" AFTER INSERT ON "cb_loc_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_descontinuidade_geometrica_l" AFTER DELETE ON "cb_loc_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_loc_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT loc_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_descontinuidade_geometrica_p', 'features','cb_loc_descontinuidade_geometrica_p', 'Camada loc_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_descontinuidade_geometrica_p" AFTER INSERT ON "cb_loc_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_descontinuidade_geometrica_p" AFTER DELETE ON "cb_loc_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_loc_edif_habitacional_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT loc_edif_habitacional_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT loc_edif_habitacional_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT loc_edif_habitacional_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT loc_edif_habitacional_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_edif_habitacional_a', 'features','cb_loc_edif_habitacional_a', 'Camada loc_edif_habitacional_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_edif_habitacional_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_edif_habitacional_a" AFTER INSERT ON "cb_loc_edif_habitacional_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_edif_habitacional_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_edif_habitacional_a" AFTER DELETE ON "cb_loc_edif_habitacional_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_edif_habitacional_a'); END ;CREATE TABLE cb_loc_edif_habitacional_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT loc_edif_habitacional_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT loc_edif_habitacional_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT loc_edif_habitacional_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT loc_edif_habitacional_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_edif_habitacional_p', 'features','cb_loc_edif_habitacional_p', 'Camada loc_edif_habitacional_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_edif_habitacional_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_edif_habitacional_p" AFTER INSERT ON "cb_loc_edif_habitacional_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_edif_habitacional_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_edif_habitacional_p" AFTER DELETE ON "cb_loc_edif_habitacional_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_edif_habitacional_p'); END ;CREATE TABLE cb_loc_edificacao_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT loc_edificacao_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT loc_edificacao_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT loc_edificacao_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT loc_edificacao_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_edificacao_a', 'features','cb_loc_edificacao_a', 'Camada loc_edificacao_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_edificacao_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_edificacao_a" AFTER INSERT ON "cb_loc_edificacao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_edificacao_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_edificacao_a" AFTER DELETE ON "cb_loc_edificacao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_edificacao_a'); END ;CREATE TABLE cb_loc_edificacao_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT loc_edificacao_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT loc_edificacao_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT loc_edificacao_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT loc_edificacao_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_edificacao_p', 'features','cb_loc_edificacao_p', 'Camada loc_edificacao_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_edificacao_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_edificacao_p" AFTER INSERT ON "cb_loc_edificacao_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_edificacao_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_edificacao_p" AFTER DELETE ON "cb_loc_edificacao_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_edificacao_p'); END ;CREATE TABLE cb_loc_hab_indigena_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 coletiva smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 isolada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT loc_hab_indigena_a_coletiva_check CHECK ((coletiva = 0) OR (coletiva = 1) OR (coletiva = 2)),	 CONSTRAINT loc_hab_indigena_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT loc_hab_indigena_a_isolada_check CHECK ((isolada = 0) OR (isolada = 1) OR (isolada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_hab_indigena_a', 'features','cb_loc_hab_indigena_a', 'Camada loc_hab_indigena_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_hab_indigena_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_hab_indigena_a" AFTER INSERT ON "cb_loc_hab_indigena_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_hab_indigena_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_hab_indigena_a" AFTER DELETE ON "cb_loc_hab_indigena_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_hab_indigena_a'); END ;CREATE TABLE cb_loc_hab_indigena_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 coletiva smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 isolada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT loc_hab_indigena_p_coletiva_check CHECK ((coletiva = 0) OR (coletiva = 1) OR (coletiva = 2)),	 CONSTRAINT loc_hab_indigena_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT loc_hab_indigena_p_isolada_check CHECK ((isolada = 0) OR (isolada = 1) OR (isolada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_hab_indigena_p', 'features','cb_loc_hab_indigena_p', 'Camada loc_hab_indigena_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_hab_indigena_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_hab_indigena_p" AFTER INSERT ON "cb_loc_hab_indigena_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_hab_indigena_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_hab_indigena_p" AFTER DELETE ON "cb_loc_hab_indigena_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_hab_indigena_p'); END ;CREATE TABLE cb_loc_nome_local_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT loc_nome_local_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_nome_local_p', 'features','cb_loc_nome_local_p', 'Camada loc_nome_local_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_nome_local_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_nome_local_p" AFTER INSERT ON "cb_loc_nome_local_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_nome_local_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_nome_local_p" AFTER DELETE ON "cb_loc_nome_local_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_nome_local_p'); END ;CREATE TABLE cb_loc_vila_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 identificador varchar(255),	 latitude varchar(255),	 longitude varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT loc_vila_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_loc_vila_p', 'features','cb_loc_vila_p', 'Camada loc_vila_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_loc_vila_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_loc_vila_p" AFTER INSERT ON "cb_loc_vila_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_loc_vila_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_loc_vila_p" AFTER DELETE ON "cb_loc_vila_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_loc_vila_p'); END ;CREATE TABLE cb_pto_area_est_med_fenom_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT pto_area_est_med_fenom_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_pto_area_est_med_fenom_a', 'features','cb_pto_area_est_med_fenom_a', 'Camada pto_area_est_med_fenom_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_pto_area_est_med_fenom_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_pto_area_est_med_fenom_a" AFTER INSERT ON "cb_pto_area_est_med_fenom_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_pto_area_est_med_fenom_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_pto_area_est_med_fenom_a" AFTER DELETE ON "cb_pto_area_est_med_fenom_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_pto_area_est_med_fenom_a'); END ;CREATE TABLE cb_pto_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT pto_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_pto_descontinuidade_geometrica_a', 'features','cb_pto_descontinuidade_geometrica_a', 'Camada pto_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_pto_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_pto_descontinuidade_geometrica_a" AFTER INSERT ON "cb_pto_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_pto_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_pto_descontinuidade_geometrica_a" AFTER DELETE ON "cb_pto_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_pto_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_pto_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT pto_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_pto_descontinuidade_geometrica_l', 'features','cb_pto_descontinuidade_geometrica_l', 'Camada pto_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_pto_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_pto_descontinuidade_geometrica_l" AFTER INSERT ON "cb_pto_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_pto_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_pto_descontinuidade_geometrica_l" AFTER DELETE ON "cb_pto_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_pto_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_pto_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT pto_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_pto_descontinuidade_geometrica_p', 'features','cb_pto_descontinuidade_geometrica_p', 'Camada pto_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_pto_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_pto_descontinuidade_geometrica_p" AFTER INSERT ON "cb_pto_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_pto_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_pto_descontinuidade_geometrica_p" AFTER DELETE ON "cb_pto_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_pto_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_pto_edif_constr_est_med_fen_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT pto_edif_constr_est_med_fen_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT pto_edif_constr_est_med_fen_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT pto_edif_constr_est_med_fen_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT pto_edif_constr_est_med_fen_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_pto_edif_constr_est_med_fen_a', 'features','cb_pto_edif_constr_est_med_fen_a', 'Camada pto_edif_constr_est_med_fen_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_pto_edif_constr_est_med_fen_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_pto_edif_constr_est_med_fen_a" AFTER INSERT ON "cb_pto_edif_constr_est_med_fen_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_pto_edif_constr_est_med_fen_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_pto_edif_constr_est_med_fen_a" AFTER DELETE ON "cb_pto_edif_constr_est_med_fen_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_pto_edif_constr_est_med_fen_a'); END ;CREATE TABLE cb_pto_edif_constr_est_med_fen_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT pto_edif_constr_est_med_fen_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT pto_edif_constr_est_med_fen_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT pto_edif_constr_est_med_fen_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT pto_edif_constr_est_med_fen_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_pto_edif_constr_est_med_fen_p', 'features','cb_pto_edif_constr_est_med_fen_p', 'Camada pto_edif_constr_est_med_fen_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_pto_edif_constr_est_med_fen_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_pto_edif_constr_est_med_fen_p" AFTER INSERT ON "cb_pto_edif_constr_est_med_fen_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_pto_edif_constr_est_med_fen_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_pto_edif_constr_est_med_fen_p" AFTER DELETE ON "cb_pto_edif_constr_est_med_fen_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_pto_edif_constr_est_med_fen_p'); END ;CREATE TABLE cb_pto_pto_controle_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 altitudeortometrica real,	 codponto varchar(255),	 codprojeto varchar(255),	 geometriaaproximada smallint NOT NULL,	 latitude varchar(255),	 longitude varchar(255),	 materializado smallint NOT NULL,	 nomeabrev varchar(255),	 obs varchar(255),	 orgaoenteresp varchar(255),	 outrarefalt varchar(255),	 outrarefplan varchar(255),	 referencialaltim smallint NOT NULL,	 sistemageodesico smallint NOT NULL,	 tipoptocontrole smallint NOT NULL,	 tiporef smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT pto_pto_controle_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT pto_pto_controle_p_materializado_check CHECK ((materializado = 0) OR (materializado = 1) OR (materializado = 2)),	 CONSTRAINT pto_pto_controle_p_referencialaltim_check CHECK ((referencialaltim = 1) OR (referencialaltim = 2) OR (referencialaltim = 3) OR (referencialaltim = 4) OR (referencialaltim = 5)),	 CONSTRAINT pto_pto_controle_p_sistemageodesico_check CHECK ((sistemageodesico = 1) OR (sistemageodesico = 2) OR (sistemageodesico = 3) OR (sistemageodesico = 4) OR (sistemageodesico = 5) OR (sistemageodesico = 6)),	 CONSTRAINT pto_pto_controle_p_tipoptocontrole_check CHECK ((tipoptocontrole = 9) OR (tipoptocontrole = 12) OR (tipoptocontrole = 13) OR (tipoptocontrole = 99)),	 CONSTRAINT pto_pto_controle_p_tiporef_check CHECK ((tiporef = 1) OR (tiporef = 2) OR (tiporef = 3) OR (tiporef = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_pto_pto_controle_p', 'features','cb_pto_pto_controle_p', 'Camada pto_pto_controle_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_pto_pto_controle_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_pto_pto_controle_p" AFTER INSERT ON "cb_pto_pto_controle_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_pto_pto_controle_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_pto_pto_controle_p" AFTER DELETE ON "cb_pto_pto_controle_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_pto_pto_controle_p'); END ;CREATE TABLE cb_pto_pto_est_med_fenomenos_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 codestacao varchar(255),	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 orgaoenteresp varchar(255),	 tipoptoestmed smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT pto_pto_est_med_fenomenos_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT pto_pto_est_med_fenomenos_p_tipoptoestmed_check CHECK ((tipoptoestmed = 0) OR (tipoptoestmed = 1) OR (tipoptoestmed = 2) OR (tipoptoestmed = 3) OR (tipoptoestmed = 4) OR (tipoptoestmed = 5) OR (tipoptoestmed = 6) OR (tipoptoestmed = 7) OR (tipoptoestmed = 8) OR (tipoptoestmed = 9) OR (tipoptoestmed = 10) OR (tipoptoestmed = 11) OR (tipoptoestmed = 12)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_pto_pto_est_med_fenomenos_p', 'features','cb_pto_pto_est_med_fenomenos_p', 'Camada pto_pto_est_med_fenomenos_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_pto_pto_est_med_fenomenos_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_pto_pto_est_med_fenomenos_p" AFTER INSERT ON "cb_pto_pto_est_med_fenomenos_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_pto_pto_est_med_fenomenos_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_pto_pto_est_med_fenomenos_p" AFTER DELETE ON "cb_pto_pto_est_med_fenomenos_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_pto_pto_est_med_fenomenos_p'); END ;CREATE TABLE cb_pto_pto_ref_geod_topo_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 altitudeortometrica real,	 codponto varchar(255),	 datavisita varchar(255),	 geometriaaproximada smallint NOT NULL,	 latitude varchar(255),	 longitude varchar(255),	 nome varchar(255),	 nomeabrev varchar(255),	 obs varchar(255),	 orgaoenteresp varchar(255),	 outrarefalt varchar(255),	 outrarefplan varchar(255),	 proximidade smallint NOT NULL,	 rede smallint NOT NULL,	 referencialaltim smallint NOT NULL,	 referencialgrav smallint NOT NULL,	 sistemageodesico smallint NOT NULL,	 situacaomarco smallint NOT NULL,	 tipoptorefgeodtopo smallint NOT NULL,	 tiporef smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT pto_pto_ref_geod_topo_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT pto_pto_ref_geod_topo_p_proximidade_check CHECK ((proximidade = 0) OR (proximidade = 14) OR (proximidade = 15) OR (proximidade = 16)),	 CONSTRAINT pto_pto_ref_geod_topo_p_rede_check CHECK ((rede = 0) OR (rede = 2) OR (rede = 3) OR (rede = 14) OR (rede = 15)),	 CONSTRAINT pto_pto_ref_geod_topo_p_referencialaltim_check CHECK ((referencialaltim = 1) OR (referencialaltim = 2) OR (referencialaltim = 3) OR (referencialaltim = 4) OR (referencialaltim = 5)),	 CONSTRAINT pto_pto_ref_geod_topo_p_referencialgrav_check CHECK ((referencialgrav = 0) OR (referencialgrav = 1) OR (referencialgrav = 2) OR (referencialgrav = 3) OR (referencialgrav = 4) OR (referencialgrav = 97)),	 CONSTRAINT pto_pto_ref_geod_topo_p_sistemageodesico_check CHECK ((sistemageodesico = 1) OR (sistemageodesico = 2) OR (sistemageodesico = 3) OR (sistemageodesico = 4) OR (sistemageodesico = 5) OR (sistemageodesico = 6)),	 CONSTRAINT pto_pto_ref_geod_topo_p_situacaomarco_check CHECK ((situacaomarco = 0) OR (situacaomarco = 1) OR (situacaomarco = 2) OR (situacaomarco = 3) OR (situacaomarco = 4) OR (situacaomarco = 5) OR (situacaomarco = 6) OR (situacaomarco = 7)),	 CONSTRAINT pto_pto_ref_geod_topo_p_tipoptorefgeodtopo_check CHECK ((tipoptorefgeodtopo = 0) OR (tipoptorefgeodtopo = 1) OR (tipoptorefgeodtopo = 2) OR (tipoptorefgeodtopo = 3) OR (tipoptorefgeodtopo = 4) OR (tipoptorefgeodtopo = 5) OR (tipoptorefgeodtopo = 6) OR (tipoptorefgeodtopo = 7) OR (tipoptorefgeodtopo = 8) OR (tipoptorefgeodtopo = 99)),	 CONSTRAINT pto_pto_ref_geod_topo_p_tiporef_check CHECK ((tiporef = 1) OR (tiporef = 2) OR (tiporef = 3) OR (tiporef = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_pto_pto_ref_geod_topo_p', 'features','cb_pto_pto_ref_geod_topo_p', 'Camada pto_pto_ref_geod_topo_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_pto_pto_ref_geod_topo_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_pto_pto_ref_geod_topo_p" AFTER INSERT ON "cb_pto_pto_ref_geod_topo_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_pto_pto_ref_geod_topo_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_pto_pto_ref_geod_topo_p" AFTER DELETE ON "cb_pto_pto_ref_geod_topo_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_pto_pto_ref_geod_topo_p'); END ;CREATE TABLE cb_rel_alter_fisiog_antropica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoalterantrop smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT rel_alter_fisiog_antropica_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT rel_alter_fisiog_antropica_a_tipoalterantrop_check CHECK ((tipoalterantrop = 0) OR (tipoalterantrop = 24) OR (tipoalterantrop = 25) OR (tipoalterantrop = 26) OR (tipoalterantrop = 27) OR (tipoalterantrop = 28) OR (tipoalterantrop = 29)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_alter_fisiog_antropica_a', 'features','cb_rel_alter_fisiog_antropica_a', 'Camada rel_alter_fisiog_antropica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_alter_fisiog_antropica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_alter_fisiog_antropica_a" AFTER INSERT ON "cb_rel_alter_fisiog_antropica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_alter_fisiog_antropica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_alter_fisiog_antropica_a" AFTER DELETE ON "cb_rel_alter_fisiog_antropica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_alter_fisiog_antropica_a'); END ;CREATE TABLE cb_rel_alter_fisiog_antropica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoalterantrop smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT rel_alter_fisiog_antropica_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT rel_alter_fisiog_antropica_l_tipoalterantrop_check CHECK ((tipoalterantrop = 0) OR (tipoalterantrop = 24) OR (tipoalterantrop = 25) OR (tipoalterantrop = 26) OR (tipoalterantrop = 27) OR (tipoalterantrop = 28) OR (tipoalterantrop = 29)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_alter_fisiog_antropica_l', 'features','cb_rel_alter_fisiog_antropica_l', 'Camada rel_alter_fisiog_antropica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_alter_fisiog_antropica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_alter_fisiog_antropica_l" AFTER INSERT ON "cb_rel_alter_fisiog_antropica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_alter_fisiog_antropica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_alter_fisiog_antropica_l" AFTER DELETE ON "cb_rel_alter_fisiog_antropica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_alter_fisiog_antropica_l'); END ;CREATE TABLE cb_rel_curva_batimetrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 profundidade integer,	 geom MultiLinestring);INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_curva_batimetrica_l', 'features','cb_rel_curva_batimetrica_l', 'Camada rel_curva_batimetrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_curva_batimetrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_curva_batimetrica_l" AFTER INSERT ON "cb_rel_curva_batimetrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_curva_batimetrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_curva_batimetrica_l" AFTER DELETE ON "cb_rel_curva_batimetrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_curva_batimetrica_l'); END ;CREATE TABLE cb_rel_curva_nivel_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 cota integer,	 depressao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 indice smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT rel_curva_nivel_l_depressao_check CHECK ((depressao = 1) OR (depressao = 2)),	 CONSTRAINT rel_curva_nivel_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT rel_curva_nivel_l_indice_check CHECK ((indice = 1) OR (indice = 2) OR (indice = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_curva_nivel_l', 'features','cb_rel_curva_nivel_l', 'Camada rel_curva_nivel_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_curva_nivel_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_curva_nivel_l" AFTER INSERT ON "cb_rel_curva_nivel_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_curva_nivel_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_curva_nivel_l" AFTER DELETE ON "cb_rel_curva_nivel_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_curva_nivel_l'); END ;CREATE TABLE cb_rel_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT rel_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_descontinuidade_geometrica_a', 'features','cb_rel_descontinuidade_geometrica_a', 'Camada rel_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_descontinuidade_geometrica_a" AFTER INSERT ON "cb_rel_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_descontinuidade_geometrica_a" AFTER DELETE ON "cb_rel_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_rel_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT rel_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_descontinuidade_geometrica_l', 'features','cb_rel_descontinuidade_geometrica_l', 'Camada rel_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_descontinuidade_geometrica_l" AFTER INSERT ON "cb_rel_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_descontinuidade_geometrica_l" AFTER DELETE ON "cb_rel_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_rel_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT rel_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_descontinuidade_geometrica_p', 'features','cb_rel_descontinuidade_geometrica_p', 'Camada rel_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_descontinuidade_geometrica_p" AFTER INSERT ON "cb_rel_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_descontinuidade_geometrica_p" AFTER DELETE ON "cb_rel_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_rel_dolina_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT rel_dolina_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_dolina_a', 'features','cb_rel_dolina_a', 'Camada rel_dolina_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_dolina_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_dolina_a" AFTER INSERT ON "cb_rel_dolina_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_dolina_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_dolina_a" AFTER DELETE ON "cb_rel_dolina_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_dolina_a'); END ;CREATE TABLE cb_rel_dolina_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT rel_dolina_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_dolina_p', 'features','cb_rel_dolina_p', 'Camada rel_dolina_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_dolina_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_dolina_p" AFTER INSERT ON "cb_rel_dolina_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_dolina_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_dolina_p" AFTER DELETE ON "cb_rel_dolina_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_dolina_p'); END ;CREATE TABLE cb_rel_duna_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 fixa smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT rel_duna_a_fixa_check CHECK ((fixa = 1) OR (fixa = 2)),	 CONSTRAINT rel_duna_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_duna_a', 'features','cb_rel_duna_a', 'Camada rel_duna_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_duna_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_duna_a" AFTER INSERT ON "cb_rel_duna_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_duna_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_duna_a" AFTER DELETE ON "cb_rel_duna_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_duna_a'); END ;CREATE TABLE cb_rel_duna_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 fixa smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT rel_duna_p_fixa_check CHECK ((fixa = 1) OR (fixa = 2)),	 CONSTRAINT rel_duna_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_duna_p', 'features','cb_rel_duna_p', 'Camada rel_duna_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_duna_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_duna_p" AFTER INSERT ON "cb_rel_duna_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_duna_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_duna_p" AFTER DELETE ON "cb_rel_duna_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_duna_p'); END ;CREATE TABLE cb_rel_elemento_fisiog_natural_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoelemnat smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT rel_elemento_fisiog_natural_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT rel_elemento_fisiog_natural_a_tipoelemnat_check CHECK ((tipoelemnat = 0) OR (tipoelemnat = 1) OR (tipoelemnat = 2) OR (tipoelemnat = 3) OR (tipoelemnat = 4) OR (tipoelemnat = 5) OR (tipoelemnat = 6) OR (tipoelemnat = 7) OR (tipoelemnat = 8) OR (tipoelemnat = 9) OR (tipoelemnat = 10) OR (tipoelemnat = 11) OR (tipoelemnat = 12) OR (tipoelemnat = 13) OR (tipoelemnat = 14) OR (tipoelemnat = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_elemento_fisiog_natural_a', 'features','cb_rel_elemento_fisiog_natural_a', 'Camada rel_elemento_fisiog_natural_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_elemento_fisiog_natural_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_elemento_fisiog_natural_a" AFTER INSERT ON "cb_rel_elemento_fisiog_natural_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_elemento_fisiog_natural_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_elemento_fisiog_natural_a" AFTER DELETE ON "cb_rel_elemento_fisiog_natural_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_elemento_fisiog_natural_a'); END ;CREATE TABLE cb_rel_elemento_fisiog_natural_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoelemnat smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT rel_elemento_fisiog_natural_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT rel_elemento_fisiog_natural_l_tipoelemnat_check CHECK ((tipoelemnat = 0) OR (tipoelemnat = 1) OR (tipoelemnat = 2) OR (tipoelemnat = 3) OR (tipoelemnat = 4) OR (tipoelemnat = 5) OR (tipoelemnat = 6) OR (tipoelemnat = 7) OR (tipoelemnat = 8) OR (tipoelemnat = 9) OR (tipoelemnat = 10) OR (tipoelemnat = 11) OR (tipoelemnat = 12) OR (tipoelemnat = 13) OR (tipoelemnat = 14) OR (tipoelemnat = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_elemento_fisiog_natural_l', 'features','cb_rel_elemento_fisiog_natural_l', 'Camada rel_elemento_fisiog_natural_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_elemento_fisiog_natural_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_elemento_fisiog_natural_l" AFTER INSERT ON "cb_rel_elemento_fisiog_natural_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_elemento_fisiog_natural_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_elemento_fisiog_natural_l" AFTER DELETE ON "cb_rel_elemento_fisiog_natural_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_elemento_fisiog_natural_l'); END ;CREATE TABLE cb_rel_elemento_fisiog_natural_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoelemnat smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT rel_elemento_fisiog_natural_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT rel_elemento_fisiog_natural_p_tipoelemnat_check CHECK ((tipoelemnat = 0) OR (tipoelemnat = 1) OR (tipoelemnat = 2) OR (tipoelemnat = 3) OR (tipoelemnat = 4) OR (tipoelemnat = 5) OR (tipoelemnat = 6) OR (tipoelemnat = 7) OR (tipoelemnat = 8) OR (tipoelemnat = 9) OR (tipoelemnat = 10) OR (tipoelemnat = 11) OR (tipoelemnat = 12) OR (tipoelemnat = 13) OR (tipoelemnat = 14) OR (tipoelemnat = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_elemento_fisiog_natural_p', 'features','cb_rel_elemento_fisiog_natural_p', 'Camada rel_elemento_fisiog_natural_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_elemento_fisiog_natural_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_elemento_fisiog_natural_p" AFTER INSERT ON "cb_rel_elemento_fisiog_natural_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_elemento_fisiog_natural_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_elemento_fisiog_natural_p" AFTER DELETE ON "cb_rel_elemento_fisiog_natural_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_elemento_fisiog_natural_p'); END ;CREATE TABLE cb_rel_gruta_caverna_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipogrutacaverna smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT rel_gruta_caverna_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT rel_gruta_caverna_p_tipogrutacaverna_check CHECK ((tipogrutacaverna = 19) OR (tipogrutacaverna = 20)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_gruta_caverna_p', 'features','cb_rel_gruta_caverna_p', 'Camada rel_gruta_caverna_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_gruta_caverna_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_gruta_caverna_p" AFTER INSERT ON "cb_rel_gruta_caverna_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_gruta_caverna_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_gruta_caverna_p" AFTER DELETE ON "cb_rel_gruta_caverna_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_gruta_caverna_p'); END ;CREATE TABLE cb_rel_pico_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT rel_pico_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_pico_p', 'features','cb_rel_pico_p', 'Camada rel_pico_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_pico_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_pico_p" AFTER INSERT ON "cb_rel_pico_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_pico_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_pico_p" AFTER DELETE ON "cb_rel_pico_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_pico_p'); END ;CREATE TABLE cb_rel_ponto_cotado_altimetrico_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 cota real,	 cotacomprovada smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT rel_ponto_cotado_altimetrico_p_cotacomprovada_check CHECK ((cotacomprovada = 1) OR (cotacomprovada = 2)),	 CONSTRAINT rel_ponto_cotado_altimetrico_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_ponto_cotado_altimetrico_p', 'features','cb_rel_ponto_cotado_altimetrico_p', 'Camada rel_ponto_cotado_altimetrico_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_ponto_cotado_altimetrico_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_ponto_cotado_altimetrico_p" AFTER INSERT ON "cb_rel_ponto_cotado_altimetrico_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_ponto_cotado_altimetrico_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_ponto_cotado_altimetrico_p" AFTER DELETE ON "cb_rel_ponto_cotado_altimetrico_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_ponto_cotado_altimetrico_p'); END ;CREATE TABLE cb_rel_ponto_cotado_batimetrico_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 profundidade real,	 geom MultiPoint);INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_ponto_cotado_batimetrico_p', 'features','cb_rel_ponto_cotado_batimetrico_p', 'Camada rel_ponto_cotado_batimetrico_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_ponto_cotado_batimetrico_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_ponto_cotado_batimetrico_p" AFTER INSERT ON "cb_rel_ponto_cotado_batimetrico_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_ponto_cotado_batimetrico_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_ponto_cotado_batimetrico_p" AFTER DELETE ON "cb_rel_ponto_cotado_batimetrico_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_ponto_cotado_batimetrico_p'); END ;CREATE TABLE cb_rel_rocha_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tiporocha smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT rel_rocha_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT rel_rocha_a_tiporocha_check CHECK ((tiporocha = 21) OR (tiporocha = 22) OR (tiporocha = 23)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_rocha_a', 'features','cb_rel_rocha_a', 'Camada rel_rocha_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_rocha_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_rocha_a" AFTER INSERT ON "cb_rel_rocha_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_rocha_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_rocha_a" AFTER DELETE ON "cb_rel_rocha_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_rocha_a'); END ;CREATE TABLE cb_rel_rocha_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tiporocha smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT rel_rocha_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT rel_rocha_p_tiporocha_check CHECK ((tiporocha = 21) OR (tiporocha = 22) OR (tiporocha = 23)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_rocha_p', 'features','cb_rel_rocha_p', 'Camada rel_rocha_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_rocha_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_rocha_p" AFTER INSERT ON "cb_rel_rocha_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_rocha_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_rocha_p" AFTER DELETE ON "cb_rel_rocha_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_rocha_p'); END ;CREATE TABLE cb_rel_terreno_exposto_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 causaexposicao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 tipoterrexp smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT rel_terreno_exposto_a_causaexposicao_check CHECK ((causaexposicao = 0) OR (causaexposicao = 4) OR (causaexposicao = 5)),	 CONSTRAINT rel_terreno_exposto_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT rel_terreno_exposto_a_tipoterrexp_check CHECK ((tipoterrexp = 0) OR (tipoterrexp = 4) OR (tipoterrexp = 12) OR (tipoterrexp = 18) OR (tipoterrexp = 23) OR (tipoterrexp = 24)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_rel_terreno_exposto_a', 'features','cb_rel_terreno_exposto_a', 'Camada rel_terreno_exposto_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_rel_terreno_exposto_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_rel_terreno_exposto_a" AFTER INSERT ON "cb_rel_terreno_exposto_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_rel_terreno_exposto_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_rel_terreno_exposto_a" AFTER DELETE ON "cb_rel_terreno_exposto_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_rel_terreno_exposto_a'); END ;CREATE TABLE cb_sau_area_saude_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT sau_area_saude_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_sau_area_saude_a', 'features','cb_sau_area_saude_a', 'Camada sau_area_saude_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_sau_area_saude_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_sau_area_saude_a" AFTER INSERT ON "cb_sau_area_saude_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_sau_area_saude_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_sau_area_saude_a" AFTER DELETE ON "cb_sau_area_saude_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_sau_area_saude_a'); END ;CREATE TABLE cb_sau_area_servico_social_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT sau_area_servico_social_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_sau_area_servico_social_a', 'features','cb_sau_area_servico_social_a', 'Camada sau_area_servico_social_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_sau_area_servico_social_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_sau_area_servico_social_a" AFTER INSERT ON "cb_sau_area_servico_social_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_sau_area_servico_social_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_sau_area_servico_social_a" AFTER DELETE ON "cb_sau_area_servico_social_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_sau_area_servico_social_a'); END ;CREATE TABLE cb_sau_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT sau_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_sau_descontinuidade_geometrica_a', 'features','cb_sau_descontinuidade_geometrica_a', 'Camada sau_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_sau_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_sau_descontinuidade_geometrica_a" AFTER INSERT ON "cb_sau_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_sau_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_sau_descontinuidade_geometrica_a" AFTER DELETE ON "cb_sau_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_sau_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_sau_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT sau_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_sau_descontinuidade_geometrica_l', 'features','cb_sau_descontinuidade_geometrica_l', 'Camada sau_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_sau_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_sau_descontinuidade_geometrica_l" AFTER INSERT ON "cb_sau_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_sau_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_sau_descontinuidade_geometrica_l" AFTER DELETE ON "cb_sau_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_sau_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_sau_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT sau_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_sau_descontinuidade_geometrica_p', 'features','cb_sau_descontinuidade_geometrica_p', 'Camada sau_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_sau_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_sau_descontinuidade_geometrica_p" AFTER INSERT ON "cb_sau_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_sau_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_sau_descontinuidade_geometrica_p" AFTER DELETE ON "cb_sau_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_sau_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_sau_edif_saude_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nivelatencao smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoclassecnae smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT sau_edif_saude_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT sau_edif_saude_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT sau_edif_saude_a_nivelatencao_check CHECK ((nivelatencao = 0) OR (nivelatencao = 5) OR (nivelatencao = 6) OR (nivelatencao = 7)),	 CONSTRAINT sau_edif_saude_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT sau_edif_saude_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT sau_edif_saude_a_tipoclassecnae_check CHECK ((tipoclassecnae = 0) OR (tipoclassecnae = 1) OR (tipoclassecnae = 2) OR (tipoclassecnae = 3) OR (tipoclassecnae = 4) OR (tipoclassecnae = 5) OR (tipoclassecnae = 6) OR (tipoclassecnae = 7) OR (tipoclassecnae = 8) OR (tipoclassecnae = 9) OR (tipoclassecnae = 10) OR (tipoclassecnae = 11) OR (tipoclassecnae = 12) OR (tipoclassecnae = 13) OR (tipoclassecnae = 14) OR (tipoclassecnae = 15) OR (tipoclassecnae = 16) OR (tipoclassecnae = 17) OR (tipoclassecnae = 18) OR (tipoclassecnae = 19) OR (tipoclassecnae = 20) OR (tipoclassecnae = 21) OR (tipoclassecnae = 22) OR (tipoclassecnae = 23) OR (tipoclassecnae = 24) OR (tipoclassecnae = 25) OR (tipoclassecnae = 26) OR (tipoclassecnae = 27) OR (tipoclassecnae = 28) OR (tipoclassecnae = 29) OR (tipoclassecnae = 30) OR (tipoclassecnae = 31) OR (tipoclassecnae = 32) OR (tipoclassecnae = 33) OR (tipoclassecnae = 34) OR (tipoclassecnae = 35) OR (tipoclassecnae = 97) OR (tipoclassecnae = 98) OR (tipoclassecnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_sau_edif_saude_a', 'features','cb_sau_edif_saude_a', 'Camada sau_edif_saude_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_sau_edif_saude_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_sau_edif_saude_a" AFTER INSERT ON "cb_sau_edif_saude_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_sau_edif_saude_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_sau_edif_saude_a" AFTER DELETE ON "cb_sau_edif_saude_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_sau_edif_saude_a'); END ;CREATE TABLE cb_sau_edif_saude_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nivelatencao smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoclassecnae smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT sau_edif_saude_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT sau_edif_saude_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT sau_edif_saude_p_nivelatencao_check CHECK ((nivelatencao = 0) OR (nivelatencao = 5) OR (nivelatencao = 6) OR (nivelatencao = 7)),	 CONSTRAINT sau_edif_saude_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT sau_edif_saude_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT sau_edif_saude_p_tipoclassecnae_check CHECK ((tipoclassecnae = 0) OR (tipoclassecnae = 1) OR (tipoclassecnae = 2) OR (tipoclassecnae = 3) OR (tipoclassecnae = 4) OR (tipoclassecnae = 5) OR (tipoclassecnae = 6) OR (tipoclassecnae = 7) OR (tipoclassecnae = 8) OR (tipoclassecnae = 9) OR (tipoclassecnae = 10) OR (tipoclassecnae = 11) OR (tipoclassecnae = 12) OR (tipoclassecnae = 13) OR (tipoclassecnae = 14) OR (tipoclassecnae = 15) OR (tipoclassecnae = 16) OR (tipoclassecnae = 17) OR (tipoclassecnae = 18) OR (tipoclassecnae = 19) OR (tipoclassecnae = 20) OR (tipoclassecnae = 21) OR (tipoclassecnae = 22) OR (tipoclassecnae = 23) OR (tipoclassecnae = 24) OR (tipoclassecnae = 25) OR (tipoclassecnae = 26) OR (tipoclassecnae = 27) OR (tipoclassecnae = 28) OR (tipoclassecnae = 29) OR (tipoclassecnae = 30) OR (tipoclassecnae = 31) OR (tipoclassecnae = 32) OR (tipoclassecnae = 33) OR (tipoclassecnae = 34) OR (tipoclassecnae = 35) OR (tipoclassecnae = 97) OR (tipoclassecnae = 98) OR (tipoclassecnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_sau_edif_saude_p', 'features','cb_sau_edif_saude_p', 'Camada sau_edif_saude_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_sau_edif_saude_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_sau_edif_saude_p" AFTER INSERT ON "cb_sau_edif_saude_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_sau_edif_saude_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_sau_edif_saude_p" AFTER DELETE ON "cb_sau_edif_saude_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_sau_edif_saude_p'); END ;CREATE TABLE cb_sau_edif_servico_social_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoclassecnae smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT sau_edif_servico_social_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT sau_edif_servico_social_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT sau_edif_servico_social_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT sau_edif_servico_social_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT sau_edif_servico_social_a_tipoclassecnae_check CHECK ((tipoclassecnae = 0) OR (tipoclassecnae = 1) OR (tipoclassecnae = 2) OR (tipoclassecnae = 3) OR (tipoclassecnae = 4) OR (tipoclassecnae = 5) OR (tipoclassecnae = 6) OR (tipoclassecnae = 7) OR (tipoclassecnae = 8) OR (tipoclassecnae = 9) OR (tipoclassecnae = 10) OR (tipoclassecnae = 11) OR (tipoclassecnae = 12) OR (tipoclassecnae = 13) OR (tipoclassecnae = 14) OR (tipoclassecnae = 15) OR (tipoclassecnae = 16) OR (tipoclassecnae = 17) OR (tipoclassecnae = 18) OR (tipoclassecnae = 19) OR (tipoclassecnae = 20) OR (tipoclassecnae = 21) OR (tipoclassecnae = 22) OR (tipoclassecnae = 23) OR (tipoclassecnae = 24) OR (tipoclassecnae = 25) OR (tipoclassecnae = 26) OR (tipoclassecnae = 27) OR (tipoclassecnae = 28) OR (tipoclassecnae = 29) OR (tipoclassecnae = 30) OR (tipoclassecnae = 31) OR (tipoclassecnae = 32) OR (tipoclassecnae = 33) OR (tipoclassecnae = 34) OR (tipoclassecnae = 35) OR (tipoclassecnae = 97) OR (tipoclassecnae = 98) OR (tipoclassecnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_sau_edif_servico_social_a', 'features','cb_sau_edif_servico_social_a', 'Camada sau_edif_servico_social_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_sau_edif_servico_social_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_sau_edif_servico_social_a" AFTER INSERT ON "cb_sau_edif_servico_social_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_sau_edif_servico_social_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_sau_edif_servico_social_a" AFTER DELETE ON "cb_sau_edif_servico_social_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_sau_edif_servico_social_a'); END ;CREATE TABLE cb_sau_edif_servico_social_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoclassecnae smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT sau_edif_servico_social_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT sau_edif_servico_social_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT sau_edif_servico_social_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT sau_edif_servico_social_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT sau_edif_servico_social_p_tipoclassecnae_check CHECK ((tipoclassecnae = 0) OR (tipoclassecnae = 1) OR (tipoclassecnae = 2) OR (tipoclassecnae = 3) OR (tipoclassecnae = 4) OR (tipoclassecnae = 5) OR (tipoclassecnae = 6) OR (tipoclassecnae = 7) OR (tipoclassecnae = 8) OR (tipoclassecnae = 9) OR (tipoclassecnae = 10) OR (tipoclassecnae = 11) OR (tipoclassecnae = 12) OR (tipoclassecnae = 13) OR (tipoclassecnae = 14) OR (tipoclassecnae = 15) OR (tipoclassecnae = 16) OR (tipoclassecnae = 17) OR (tipoclassecnae = 18) OR (tipoclassecnae = 19) OR (tipoclassecnae = 20) OR (tipoclassecnae = 21) OR (tipoclassecnae = 22) OR (tipoclassecnae = 23) OR (tipoclassecnae = 24) OR (tipoclassecnae = 25) OR (tipoclassecnae = 26) OR (tipoclassecnae = 27) OR (tipoclassecnae = 28) OR (tipoclassecnae = 29) OR (tipoclassecnae = 30) OR (tipoclassecnae = 31) OR (tipoclassecnae = 32) OR (tipoclassecnae = 33) OR (tipoclassecnae = 34) OR (tipoclassecnae = 35) OR (tipoclassecnae = 97) OR (tipoclassecnae = 98) OR (tipoclassecnae = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_sau_edif_servico_social_p', 'features','cb_sau_edif_servico_social_p', 'Camada sau_edif_servico_social_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_sau_edif_servico_social_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_sau_edif_servico_social_p" AFTER INSERT ON "cb_sau_edif_servico_social_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_sau_edif_servico_social_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_sau_edif_servico_social_p" AFTER DELETE ON "cb_sau_edif_servico_social_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_sau_edif_servico_social_p'); END ;CREATE TABLE cb_tra_area_duto_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_area_duto_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_area_duto_a', 'features','cb_tra_area_duto_a', 'Camada tra_area_duto_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_area_duto_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_area_duto_a" AFTER INSERT ON "cb_tra_area_duto_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_area_duto_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_area_duto_a" AFTER DELETE ON "cb_tra_area_duto_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_area_duto_a'); END ;CREATE TABLE cb_tra_area_estrut_transporte_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_area_estrut_transporte_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_area_estrut_transporte_a', 'features','cb_tra_area_estrut_transporte_a', 'Camada tra_area_estrut_transporte_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_area_estrut_transporte_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_area_estrut_transporte_a" AFTER INSERT ON "cb_tra_area_estrut_transporte_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_area_estrut_transporte_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_area_estrut_transporte_a" AFTER DELETE ON "cb_tra_area_estrut_transporte_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_area_estrut_transporte_a'); END ;CREATE TABLE cb_tra_arruamento_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 canteirodivisorio smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 nrfaixas integer,	 operacional smallint NOT NULL,	 revestimento smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 trafego smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_arruamento_l_canteirodivisorio_check CHECK ((canteirodivisorio = 1) OR (canteirodivisorio = 2)),	 CONSTRAINT tra_arruamento_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_arruamento_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_arruamento_l_revestimento_check CHECK ((revestimento = 0) OR (revestimento = 1) OR (revestimento = 2) OR (revestimento = 3) OR (revestimento = 4)),	 CONSTRAINT tra_arruamento_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_arruamento_l_trafego_check CHECK ((trafego = 0) OR (trafego = 1) OR (trafego = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_arruamento_l', 'features','cb_tra_arruamento_l', 'Camada tra_arruamento_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_arruamento_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_arruamento_l" AFTER INSERT ON "cb_tra_arruamento_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_arruamento_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_arruamento_l" AFTER DELETE ON "cb_tra_arruamento_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_arruamento_l'); END ;CREATE TABLE cb_tra_atracadouro_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoatracad smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_atracadouro_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_atracadouro_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_atracadouro_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_atracadouro_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_atracadouro_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_atracadouro_a_tipoatracad_check CHECK ((tipoatracad = 0) OR (tipoatracad = 38) OR (tipoatracad = 39) OR (tipoatracad = 40) OR (tipoatracad = 41) OR (tipoatracad = 42) OR (tipoatracad = 43) OR (tipoatracad = 44)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_atracadouro_a', 'features','cb_tra_atracadouro_a', 'Camada tra_atracadouro_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_atracadouro_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_atracadouro_a" AFTER INSERT ON "cb_tra_atracadouro_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_atracadouro_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_atracadouro_a" AFTER DELETE ON "cb_tra_atracadouro_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_atracadouro_a'); END ;CREATE TABLE cb_tra_atracadouro_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoatracad smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_atracadouro_l_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_atracadouro_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_atracadouro_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_atracadouro_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_atracadouro_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_atracadouro_l_tipoatracad_check CHECK ((tipoatracad = 0) OR (tipoatracad = 38) OR (tipoatracad = 39) OR (tipoatracad = 40) OR (tipoatracad = 41) OR (tipoatracad = 42) OR (tipoatracad = 43) OR (tipoatracad = 44)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_atracadouro_l', 'features','cb_tra_atracadouro_l', 'Camada tra_atracadouro_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_atracadouro_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_atracadouro_l" AFTER INSERT ON "cb_tra_atracadouro_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_atracadouro_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_atracadouro_l" AFTER DELETE ON "cb_tra_atracadouro_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_atracadouro_l'); END ;CREATE TABLE cb_tra_atracadouro_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoatracad smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_atracadouro_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_atracadouro_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_atracadouro_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_atracadouro_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_atracadouro_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_atracadouro_p_tipoatracad_check CHECK ((tipoatracad = 0) OR (tipoatracad = 38) OR (tipoatracad = 39) OR (tipoatracad = 40) OR (tipoatracad = 41) OR (tipoatracad = 42) OR (tipoatracad = 43) OR (tipoatracad = 44)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_atracadouro_p', 'features','cb_tra_atracadouro_p', 'Camada tra_atracadouro_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_atracadouro_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_atracadouro_p" AFTER INSERT ON "cb_tra_atracadouro_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_atracadouro_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_atracadouro_p" AFTER DELETE ON "cb_tra_atracadouro_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_atracadouro_p'); END ;CREATE TABLE cb_tra_caminho_aereo_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipocaminhoaereo smallint NOT NULL,	 tipousocaminhoaer smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_caminho_aereo_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_caminho_aereo_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_caminho_aereo_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_caminho_aereo_l_tipocaminhoaereo_check CHECK ((tipocaminhoaereo = 12) OR (tipocaminhoaereo = 99)),	 CONSTRAINT tra_caminho_aereo_l_tipousocaminhoaer_check CHECK ((tipousocaminhoaer = 0) OR (tipousocaminhoaer = 21) OR (tipousocaminhoaer = 22) OR (tipousocaminhoaer = 98)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_caminho_aereo_l', 'features','cb_tra_caminho_aereo_l', 'Camada tra_caminho_aereo_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_caminho_aereo_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_caminho_aereo_l" AFTER INSERT ON "cb_tra_caminho_aereo_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_caminho_aereo_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_caminho_aereo_l" AFTER DELETE ON "cb_tra_caminho_aereo_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_caminho_aereo_l'); END ;CREATE TABLE cb_tra_ciclovia_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 revestimento smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 trafego smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_ciclovia_l_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_ciclovia_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_ciclovia_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_ciclovia_l_revestimento_check CHECK ((revestimento = 0) OR (revestimento = 1) OR (revestimento = 2) OR (revestimento = 3) OR (revestimento = 4)),	 CONSTRAINT tra_ciclovia_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_ciclovia_l_trafego_check CHECK ((trafego = 0) OR (trafego = 1) OR (trafego = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_ciclovia_l', 'features','cb_tra_ciclovia_l', 'Camada tra_ciclovia_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_ciclovia_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_ciclovia_l" AFTER INSERT ON "cb_tra_ciclovia_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_ciclovia_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_ciclovia_l" AFTER DELETE ON "cb_tra_ciclovia_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_ciclovia_l'); END ;CREATE TABLE cb_tra_condutor_hidrico_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 mattransp smallint NOT NULL,	 nrdutos integer,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 posicaorelativa smallint NOT NULL,	 setor smallint NOT NULL,	 situacaoespacial smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipocondutor smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_condutor_hidrico_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_condutor_hidrico_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_condutor_hidrico_l_mattransp_check CHECK ((mattransp = 0) OR (mattransp = 1) OR (mattransp = 2) OR (mattransp = 3) OR (mattransp = 4) OR (mattransp = 5) OR (mattransp = 6) OR (mattransp = 7) OR (mattransp = 8) OR (mattransp = 9) OR (mattransp = 29) OR (mattransp = 30) OR (mattransp = 31) OR (mattransp = 99)),	 CONSTRAINT tra_condutor_hidrico_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_condutor_hidrico_l_posicaorelativa_check CHECK ((posicaorelativa = 0) OR (posicaorelativa = 2) OR (posicaorelativa = 3) OR (posicaorelativa = 4) OR (posicaorelativa = 5) OR (posicaorelativa = 6)),	 CONSTRAINT tra_condutor_hidrico_l_setor_check CHECK ((setor = 0) OR (setor = 1) OR (setor = 2) OR (setor = 3) OR (setor = 4)),	 CONSTRAINT tra_condutor_hidrico_l_situacaoespacial_check CHECK ((situacaoespacial = 0) OR (situacaoespacial = 12) OR (situacaoespacial = 13) OR (situacaoespacial = 99)),	 CONSTRAINT tra_condutor_hidrico_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_condutor_hidrico_l_tipocondutor_check CHECK ((tipocondutor = 0) OR (tipocondutor = 2) OR (tipocondutor = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_condutor_hidrico_l', 'features','cb_tra_condutor_hidrico_l', 'Camada tra_condutor_hidrico_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_condutor_hidrico_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_condutor_hidrico_l" AFTER INSERT ON "cb_tra_condutor_hidrico_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_condutor_hidrico_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_condutor_hidrico_l" AFTER DELETE ON "cb_tra_condutor_hidrico_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_condutor_hidrico_l'); END ;CREATE TABLE cb_tra_cremalheira_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_cremalheira_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_cremalheira_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_cremalheira_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_cremalheira_l', 'features','cb_tra_cremalheira_l', 'Camada tra_cremalheira_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_cremalheira_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_cremalheira_l" AFTER INSERT ON "cb_tra_cremalheira_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_cremalheira_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_cremalheira_l" AFTER DELETE ON "cb_tra_cremalheira_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_cremalheira_l'); END ;CREATE TABLE cb_tra_cremalheira_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_cremalheira_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_cremalheira_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_cremalheira_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_cremalheira_p', 'features','cb_tra_cremalheira_p', 'Camada tra_cremalheira_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_cremalheira_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_cremalheira_p" AFTER INSERT ON "cb_tra_cremalheira_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_cremalheira_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_cremalheira_p" AFTER DELETE ON "cb_tra_cremalheira_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_cremalheira_p'); END ;CREATE TABLE cb_tra_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_descontinuidade_geometrica_a', 'features','cb_tra_descontinuidade_geometrica_a', 'Camada tra_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_descontinuidade_geometrica_a" AFTER INSERT ON "cb_tra_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_descontinuidade_geometrica_a" AFTER DELETE ON "cb_tra_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_tra_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_descontinuidade_geometrica_l', 'features','cb_tra_descontinuidade_geometrica_l', 'Camada tra_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_descontinuidade_geometrica_l" AFTER INSERT ON "cb_tra_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_descontinuidade_geometrica_l" AFTER DELETE ON "cb_tra_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_tra_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_descontinuidade_geometrica_p', 'features','cb_tra_descontinuidade_geometrica_p', 'Camada tra_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_descontinuidade_geometrica_p" AFTER INSERT ON "cb_tra_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_descontinuidade_geometrica_p" AFTER DELETE ON "cb_tra_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_tra_eclusa_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 calado real,	 desnivel real,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 largura real,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_eclusa_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_eclusa_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_eclusa_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_eclusa_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_eclusa_a', 'features','cb_tra_eclusa_a', 'Camada tra_eclusa_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_eclusa_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_eclusa_a" AFTER INSERT ON "cb_tra_eclusa_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_eclusa_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_eclusa_a" AFTER DELETE ON "cb_tra_eclusa_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_eclusa_a'); END ;CREATE TABLE cb_tra_eclusa_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 calado real,	 desnivel real,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 largura real,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_eclusa_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_eclusa_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_eclusa_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_eclusa_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_eclusa_l', 'features','cb_tra_eclusa_l', 'Camada tra_eclusa_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_eclusa_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_eclusa_l" AFTER INSERT ON "cb_tra_eclusa_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_eclusa_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_eclusa_l" AFTER DELETE ON "cb_tra_eclusa_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_eclusa_l'); END ;CREATE TABLE cb_tra_eclusa_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 calado real,	 desnivel real,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 largura real,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_eclusa_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_eclusa_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_eclusa_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_eclusa_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_eclusa_p', 'features','cb_tra_eclusa_p', 'Camada tra_eclusa_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_eclusa_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_eclusa_p" AFTER INSERT ON "cb_tra_eclusa_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_eclusa_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_eclusa_p" AFTER DELETE ON "cb_tra_eclusa_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_eclusa_p'); END ;CREATE TABLE cb_tra_edif_constr_aeroportuaria_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifaero smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_edif_constr_aeroportuaria_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_edif_constr_aeroportuaria_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_edif_constr_aeroportuaria_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_edif_constr_aeroportuaria_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_edif_constr_aeroportuaria_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_edif_constr_aeroportuaria_a_tipoedifaero_check CHECK ((tipoedifaero = 0) OR (tipoedifaero = 15) OR (tipoedifaero = 26) OR (tipoedifaero = 27) OR (tipoedifaero = 28) OR (tipoedifaero = 29) OR (tipoedifaero = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_edif_constr_aeroportuaria_a', 'features','cb_tra_edif_constr_aeroportuaria_a', 'Camada tra_edif_constr_aeroportuaria_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_edif_constr_aeroportuaria_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_edif_constr_aeroportuaria_a" AFTER INSERT ON "cb_tra_edif_constr_aeroportuaria_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_edif_constr_aeroportuaria_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_edif_constr_aeroportuaria_a" AFTER DELETE ON "cb_tra_edif_constr_aeroportuaria_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_edif_constr_aeroportuaria_a'); END ;CREATE TABLE cb_tra_edif_constr_aeroportuaria_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifaero smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_edif_constr_aeroportuaria_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_edif_constr_aeroportuaria_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_edif_constr_aeroportuaria_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_edif_constr_aeroportuaria_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_edif_constr_aeroportuaria_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_edif_constr_aeroportuaria_p_tipoedifaero_check CHECK ((tipoedifaero = 0) OR (tipoedifaero = 15) OR (tipoedifaero = 26) OR (tipoedifaero = 27) OR (tipoedifaero = 28) OR (tipoedifaero = 29) OR (tipoedifaero = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_edif_constr_aeroportuaria_p', 'features','cb_tra_edif_constr_aeroportuaria_p', 'Camada tra_edif_constr_aeroportuaria_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_edif_constr_aeroportuaria_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_edif_constr_aeroportuaria_p" AFTER INSERT ON "cb_tra_edif_constr_aeroportuaria_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_edif_constr_aeroportuaria_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_edif_constr_aeroportuaria_p" AFTER DELETE ON "cb_tra_edif_constr_aeroportuaria_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_edif_constr_aeroportuaria_p'); END ;CREATE TABLE cb_tra_edif_constr_portuaria_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifport smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_edif_constr_portuaria_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_edif_constr_portuaria_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_edif_constr_portuaria_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_edif_constr_portuaria_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_edif_constr_portuaria_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_edif_constr_portuaria_a_tipoedifport_check CHECK ((tipoedifport = 0) OR (tipoedifport = 15) OR (tipoedifport = 26) OR (tipoedifport = 27) OR (tipoedifport = 32) OR (tipoedifport = 33) OR (tipoedifport = 34) OR (tipoedifport = 35) OR (tipoedifport = 36) OR (tipoedifport = 37) OR (tipoedifport = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_edif_constr_portuaria_a', 'features','cb_tra_edif_constr_portuaria_a', 'Camada tra_edif_constr_portuaria_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_edif_constr_portuaria_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_edif_constr_portuaria_a" AFTER INSERT ON "cb_tra_edif_constr_portuaria_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_edif_constr_portuaria_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_edif_constr_portuaria_a" AFTER DELETE ON "cb_tra_edif_constr_portuaria_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_edif_constr_portuaria_a'); END ;CREATE TABLE cb_tra_edif_constr_portuaria_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifport smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_edif_constr_portuaria_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_edif_constr_portuaria_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_edif_constr_portuaria_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_edif_constr_portuaria_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_edif_constr_portuaria_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_edif_constr_portuaria_p_tipoedifport_check CHECK ((tipoedifport = 0) OR (tipoedifport = 15) OR (tipoedifport = 26) OR (tipoedifport = 27) OR (tipoedifport = 32) OR (tipoedifport = 33) OR (tipoedifport = 34) OR (tipoedifport = 35) OR (tipoedifport = 36) OR (tipoedifport = 37) OR (tipoedifport = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_edif_constr_portuaria_p', 'features','cb_tra_edif_constr_portuaria_p', 'Camada tra_edif_constr_portuaria_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_edif_constr_portuaria_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_edif_constr_portuaria_p" AFTER INSERT ON "cb_tra_edif_constr_portuaria_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_edif_constr_portuaria_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_edif_constr_portuaria_p" AFTER DELETE ON "cb_tra_edif_constr_portuaria_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_edif_constr_portuaria_p'); END ;CREATE TABLE cb_tra_edif_metro_ferroviaria_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 funcaoedifmetroferrov smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 multimodal smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_edif_metro_ferroviaria_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_edif_metro_ferroviaria_a_funcaoedifmetroferrov_check CHECK ((funcaoedifmetroferrov = 0) OR (funcaoedifmetroferrov = 15) OR (funcaoedifmetroferrov = 16) OR (funcaoedifmetroferrov = 17) OR (funcaoedifmetroferrov = 18) OR (funcaoedifmetroferrov = 19) OR (funcaoedifmetroferrov = 20) OR (funcaoedifmetroferrov = 99)),	 CONSTRAINT tra_edif_metro_ferroviaria_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_edif_metro_ferroviaria_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_edif_metro_ferroviaria_a_multimodal_check CHECK ((multimodal = 0) OR (multimodal = 1) OR (multimodal = 2)),	 CONSTRAINT tra_edif_metro_ferroviaria_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_edif_metro_ferroviaria_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_edif_metro_ferroviaria_a', 'features','cb_tra_edif_metro_ferroviaria_a', 'Camada tra_edif_metro_ferroviaria_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_edif_metro_ferroviaria_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_edif_metro_ferroviaria_a" AFTER INSERT ON "cb_tra_edif_metro_ferroviaria_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_edif_metro_ferroviaria_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_edif_metro_ferroviaria_a" AFTER DELETE ON "cb_tra_edif_metro_ferroviaria_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_edif_metro_ferroviaria_a'); END ;CREATE TABLE cb_tra_edif_metro_ferroviaria_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 funcaoedifmetroferrov smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 multimodal smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_edif_metro_ferroviaria_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_edif_metro_ferroviaria_p_funcaoedifmetroferrov_check CHECK ((funcaoedifmetroferrov = 0) OR (funcaoedifmetroferrov = 15) OR (funcaoedifmetroferrov = 16) OR (funcaoedifmetroferrov = 17) OR (funcaoedifmetroferrov = 18) OR (funcaoedifmetroferrov = 19) OR (funcaoedifmetroferrov = 20) OR (funcaoedifmetroferrov = 99)),	 CONSTRAINT tra_edif_metro_ferroviaria_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_edif_metro_ferroviaria_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_edif_metro_ferroviaria_p_multimodal_check CHECK ((multimodal = 0) OR (multimodal = 1) OR (multimodal = 2)),	 CONSTRAINT tra_edif_metro_ferroviaria_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_edif_metro_ferroviaria_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_edif_metro_ferroviaria_p', 'features','cb_tra_edif_metro_ferroviaria_p', 'Camada tra_edif_metro_ferroviaria_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_edif_metro_ferroviaria_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_edif_metro_ferroviaria_p" AFTER INSERT ON "cb_tra_edif_metro_ferroviaria_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_edif_metro_ferroviaria_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_edif_metro_ferroviaria_p" AFTER DELETE ON "cb_tra_edif_metro_ferroviaria_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_edif_metro_ferroviaria_p'); END ;CREATE TABLE cb_tra_edif_rodoviaria_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifrod smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_edif_rodoviaria_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_edif_rodoviaria_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_edif_rodoviaria_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_edif_rodoviaria_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_edif_rodoviaria_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_edif_rodoviaria_a_tipoedifrod_check CHECK ((tipoedifrod = 0) OR (tipoedifrod = 8) OR (tipoedifrod = 9) OR (tipoedifrod = 10) OR (tipoedifrod = 12) OR (tipoedifrod = 13) OR (tipoedifrod = 14) OR (tipoedifrod = 15) OR (tipoedifrod = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_edif_rodoviaria_a', 'features','cb_tra_edif_rodoviaria_a', 'Camada tra_edif_rodoviaria_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_edif_rodoviaria_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_edif_rodoviaria_a" AFTER INSERT ON "cb_tra_edif_rodoviaria_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_edif_rodoviaria_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_edif_rodoviaria_a" AFTER DELETE ON "cb_tra_edif_rodoviaria_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_edif_rodoviaria_a'); END ;CREATE TABLE cb_tra_edif_rodoviaria_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoedifrod smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_edif_rodoviaria_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_edif_rodoviaria_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_edif_rodoviaria_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_edif_rodoviaria_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_edif_rodoviaria_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_edif_rodoviaria_p_tipoedifrod_check CHECK ((tipoedifrod = 0) OR (tipoedifrod = 8) OR (tipoedifrod = 9) OR (tipoedifrod = 10) OR (tipoedifrod = 12) OR (tipoedifrod = 13) OR (tipoedifrod = 14) OR (tipoedifrod = 15) OR (tipoedifrod = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_edif_rodoviaria_p', 'features','cb_tra_edif_rodoviaria_p', 'Camada tra_edif_rodoviaria_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_edif_rodoviaria_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_edif_rodoviaria_p" AFTER INSERT ON "cb_tra_edif_rodoviaria_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_edif_rodoviaria_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_edif_rodoviaria_p" AFTER DELETE ON "cb_tra_edif_rodoviaria_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_edif_rodoviaria_p'); END ;CREATE TABLE cb_tra_entroncamento_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipoentroncamento smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_entroncamento_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_entroncamento_p_tipoentroncamento_check CHECK ((tipoentroncamento = 1) OR (tipoentroncamento = 2) OR (tipoentroncamento = 3) OR (tipoentroncamento = 4) OR (tipoentroncamento = 5) OR (tipoentroncamento = 99)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_entroncamento_p', 'features','cb_tra_entroncamento_p', 'Camada tra_entroncamento_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_entroncamento_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_entroncamento_p" AFTER INSERT ON "cb_tra_entroncamento_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_entroncamento_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_entroncamento_p" AFTER DELETE ON "cb_tra_entroncamento_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_entroncamento_p'); END ;CREATE TABLE cb_tra_faixa_seguranca_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 largura real,	 geom MultiPolygon,	 CONSTRAINT tra_faixa_seguranca_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_faixa_seguranca_a', 'features','cb_tra_faixa_seguranca_a', 'Camada tra_faixa_seguranca_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_faixa_seguranca_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_faixa_seguranca_a" AFTER INSERT ON "cb_tra_faixa_seguranca_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_faixa_seguranca_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_faixa_seguranca_a" AFTER DELETE ON "cb_tra_faixa_seguranca_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_faixa_seguranca_a'); END ;CREATE TABLE cb_tra_fundeadouro_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 destinacaofundeadouro smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT tra_fundeadouro_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_fundeadouro_a_destinacaofundeadouro_check CHECK ((destinacaofundeadouro = 0) OR (destinacaofundeadouro = 10) OR (destinacaofundeadouro = 11) OR (destinacaofundeadouro = 12) OR (destinacaofundeadouro = 13) OR (destinacaofundeadouro = 99)),	 CONSTRAINT tra_fundeadouro_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_fundeadouro_a', 'features','cb_tra_fundeadouro_a', 'Camada tra_fundeadouro_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_fundeadouro_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_fundeadouro_a" AFTER INSERT ON "cb_tra_fundeadouro_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_fundeadouro_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_fundeadouro_a" AFTER DELETE ON "cb_tra_fundeadouro_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_fundeadouro_a'); END ;CREATE TABLE cb_tra_fundeadouro_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 destinacaofundeadouro smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiLinestring,	 CONSTRAINT tra_fundeadouro_l_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_fundeadouro_l_destinacaofundeadouro_check CHECK ((destinacaofundeadouro = 0) OR (destinacaofundeadouro = 10) OR (destinacaofundeadouro = 11) OR (destinacaofundeadouro = 12) OR (destinacaofundeadouro = 13) OR (destinacaofundeadouro = 99)),	 CONSTRAINT tra_fundeadouro_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_fundeadouro_l', 'features','cb_tra_fundeadouro_l', 'Camada tra_fundeadouro_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_fundeadouro_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_fundeadouro_l" AFTER INSERT ON "cb_tra_fundeadouro_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_fundeadouro_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_fundeadouro_l" AFTER DELETE ON "cb_tra_fundeadouro_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_fundeadouro_l'); END ;CREATE TABLE cb_tra_fundeadouro_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 destinacaofundeadouro smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT tra_fundeadouro_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_fundeadouro_p_destinacaofundeadouro_check CHECK ((destinacaofundeadouro = 0) OR (destinacaofundeadouro = 10) OR (destinacaofundeadouro = 11) OR (destinacaofundeadouro = 12) OR (destinacaofundeadouro = 13) OR (destinacaofundeadouro = 99)),	 CONSTRAINT tra_fundeadouro_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_fundeadouro_p', 'features','cb_tra_fundeadouro_p', 'Camada tra_fundeadouro_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_fundeadouro_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_fundeadouro_p" AFTER INSERT ON "cb_tra_fundeadouro_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_fundeadouro_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_fundeadouro_p" AFTER DELETE ON "cb_tra_fundeadouro_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_fundeadouro_p'); END ;CREATE TABLE cb_tra_funicular_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_funicular_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_funicular_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_funicular_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_funicular_l', 'features','cb_tra_funicular_l', 'Camada tra_funicular_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_funicular_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_funicular_l" AFTER INSERT ON "cb_tra_funicular_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_funicular_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_funicular_l" AFTER DELETE ON "cb_tra_funicular_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_funicular_l'); END ;CREATE TABLE cb_tra_funicular_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_funicular_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_funicular_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_funicular_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_funicular_p', 'features','cb_tra_funicular_p', 'Camada tra_funicular_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_funicular_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_funicular_p" AFTER INSERT ON "cb_tra_funicular_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_funicular_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_funicular_p" AFTER DELETE ON "cb_tra_funicular_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_funicular_p'); END ;CREATE TABLE cb_tra_galeria_bueiro_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 pesosuportmaximo real,	 situacaofisica smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_galeria_bueiro_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_galeria_bueiro_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_galeria_bueiro_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_galeria_bueiro_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_galeria_bueiro_l', 'features','cb_tra_galeria_bueiro_l', 'Camada tra_galeria_bueiro_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_galeria_bueiro_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_galeria_bueiro_l" AFTER INSERT ON "cb_tra_galeria_bueiro_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_galeria_bueiro_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_galeria_bueiro_l" AFTER DELETE ON "cb_tra_galeria_bueiro_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_galeria_bueiro_l'); END ;CREATE TABLE cb_tra_galeria_bueiro_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 pesosuportmaximo real,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_galeria_bueiro_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_galeria_bueiro_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_galeria_bueiro_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_galeria_bueiro_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_galeria_bueiro_p', 'features','cb_tra_galeria_bueiro_p', 'Camada tra_galeria_bueiro_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_galeria_bueiro_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_galeria_bueiro_p" AFTER INSERT ON "cb_tra_galeria_bueiro_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_galeria_bueiro_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_galeria_bueiro_p" AFTER DELETE ON "cb_tra_galeria_bueiro_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_galeria_bueiro_p'); END ;CREATE TABLE cb_tra_girador_ferroviario_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_girador_ferroviario_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_girador_ferroviario_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_girador_ferroviario_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_girador_ferroviario_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_girador_ferroviario_p', 'features','cb_tra_girador_ferroviario_p', 'Camada tra_girador_ferroviario_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_girador_ferroviario_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_girador_ferroviario_p" AFTER INSERT ON "cb_tra_girador_ferroviario_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_girador_ferroviario_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_girador_ferroviario_p" AFTER DELETE ON "cb_tra_girador_ferroviario_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_girador_ferroviario_p'); END ;CREATE TABLE cb_tra_identific_trecho_rod_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 nome varchar(255),	 nomeabrev varchar(255),	 sigla varchar(255),	 geom MultiPoint);INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_identific_trecho_rod_p', 'features','cb_tra_identific_trecho_rod_p', 'Camada tra_identific_trecho_rod_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_identific_trecho_rod_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_identific_trecho_rod_p" AFTER INSERT ON "cb_tra_identific_trecho_rod_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_identific_trecho_rod_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_identific_trecho_rod_p" AFTER DELETE ON "cb_tra_identific_trecho_rod_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_identific_trecho_rod_p'); END ;CREATE TABLE cb_tra_local_critico_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipolocalcrit smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_local_critico_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_local_critico_a_tipolocalcrit_check CHECK ((tipolocalcrit = 0) OR (tipolocalcrit = 1) OR (tipolocalcrit = 2) OR (tipolocalcrit = 3) OR (tipolocalcrit = 4) OR (tipolocalcrit = 5) OR (tipolocalcrit = 6) OR (tipolocalcrit = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_local_critico_a', 'features','cb_tra_local_critico_a', 'Camada tra_local_critico_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_local_critico_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_local_critico_a" AFTER INSERT ON "cb_tra_local_critico_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_local_critico_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_local_critico_a" AFTER DELETE ON "cb_tra_local_critico_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_local_critico_a'); END ;CREATE TABLE cb_tra_local_critico_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipolocalcrit smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_local_critico_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_local_critico_l_tipolocalcrit_check CHECK ((tipolocalcrit = 0) OR (tipolocalcrit = 1) OR (tipolocalcrit = 2) OR (tipolocalcrit = 3) OR (tipolocalcrit = 4) OR (tipolocalcrit = 5) OR (tipolocalcrit = 6) OR (tipolocalcrit = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_local_critico_l', 'features','cb_tra_local_critico_l', 'Camada tra_local_critico_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_local_critico_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_local_critico_l" AFTER INSERT ON "cb_tra_local_critico_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_local_critico_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_local_critico_l" AFTER DELETE ON "cb_tra_local_critico_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_local_critico_l'); END ;CREATE TABLE cb_tra_local_critico_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipolocalcrit smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_local_critico_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_local_critico_p_tipolocalcrit_check CHECK ((tipolocalcrit = 0) OR (tipolocalcrit = 1) OR (tipolocalcrit = 2) OR (tipolocalcrit = 3) OR (tipolocalcrit = 4) OR (tipolocalcrit = 5) OR (tipolocalcrit = 6) OR (tipolocalcrit = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_local_critico_p', 'features','cb_tra_local_critico_p', 'Camada tra_local_critico_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_local_critico_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_local_critico_p" AFTER INSERT ON "cb_tra_local_critico_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_local_critico_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_local_critico_p" AFTER DELETE ON "cb_tra_local_critico_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_local_critico_p'); END ;CREATE TABLE cb_tra_obstaculo_navegacao_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 situacaoemagua smallint NOT NULL,	 tipoobst smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_obstaculo_navegacao_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_obstaculo_navegacao_a_situacaoemagua_check CHECK ((situacaoemagua = 0) OR (situacaoemagua = 4) OR (situacaoemagua = 5) OR (situacaoemagua = 7)),	 CONSTRAINT tra_obstaculo_navegacao_a_tipoobst_check CHECK ((tipoobst = 4) OR (tipoobst = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_obstaculo_navegacao_a', 'features','cb_tra_obstaculo_navegacao_a', 'Camada tra_obstaculo_navegacao_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_obstaculo_navegacao_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_obstaculo_navegacao_a" AFTER INSERT ON "cb_tra_obstaculo_navegacao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_obstaculo_navegacao_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_obstaculo_navegacao_a" AFTER DELETE ON "cb_tra_obstaculo_navegacao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_obstaculo_navegacao_a'); END ;CREATE TABLE cb_tra_obstaculo_navegacao_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 situacaoemagua smallint NOT NULL,	 tipoobst smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_obstaculo_navegacao_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_obstaculo_navegacao_l_situacaoemagua_check CHECK ((situacaoemagua = 0) OR (situacaoemagua = 4) OR (situacaoemagua = 5) OR (situacaoemagua = 7)),	 CONSTRAINT tra_obstaculo_navegacao_l_tipoobst_check CHECK ((tipoobst = 4) OR (tipoobst = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_obstaculo_navegacao_l', 'features','cb_tra_obstaculo_navegacao_l', 'Camada tra_obstaculo_navegacao_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_obstaculo_navegacao_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_obstaculo_navegacao_l" AFTER INSERT ON "cb_tra_obstaculo_navegacao_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_obstaculo_navegacao_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_obstaculo_navegacao_l" AFTER DELETE ON "cb_tra_obstaculo_navegacao_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_obstaculo_navegacao_l'); END ;CREATE TABLE cb_tra_obstaculo_navegacao_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 situacaoemagua smallint NOT NULL,	 tipoobst smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_obstaculo_navegacao_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_obstaculo_navegacao_p_situacaoemagua_check CHECK ((situacaoemagua = 0) OR (situacaoemagua = 4) OR (situacaoemagua = 5) OR (situacaoemagua = 7)),	 CONSTRAINT tra_obstaculo_navegacao_p_tipoobst_check CHECK ((tipoobst = 4) OR (tipoobst = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_obstaculo_navegacao_p', 'features','cb_tra_obstaculo_navegacao_p', 'Camada tra_obstaculo_navegacao_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_obstaculo_navegacao_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_obstaculo_navegacao_p" AFTER INSERT ON "cb_tra_obstaculo_navegacao_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_obstaculo_navegacao_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_obstaculo_navegacao_p" AFTER DELETE ON "cb_tra_obstaculo_navegacao_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_obstaculo_navegacao_p'); END ;CREATE TABLE cb_tra_passag_elevada_viaduto_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 cargasuportmaxima real,	 extensao real,	 gabhorizsup real,	 gabvertsup real,	 geometriaaproximada smallint NOT NULL,	 largura real,	 matconstr smallint NOT NULL,	 modaluso smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 nrfaixas integer,	 nrpistas integer,	 operacional smallint NOT NULL,	 posicaopista smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipopassagviad smallint NOT NULL,	 vaolivrehoriz real,	 vaovertical real,	 geom MultiLinestring,	 CONSTRAINT tra_passag_elevada_viaduto_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_passag_elevada_viaduto_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_passag_elevada_viaduto_l_modaluso_check CHECK ((modaluso = 4) OR (modaluso = 5) OR (modaluso = 6) OR (modaluso = 7) OR (modaluso = 8) OR (modaluso = 9) OR (modaluso = 14) OR (modaluso = 98)),	 CONSTRAINT tra_passag_elevada_viaduto_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_passag_elevada_viaduto_l_posicaopista_check CHECK ((posicaopista = 0) OR (posicaopista = 12) OR (posicaopista = 13) OR (posicaopista = 97)),	 CONSTRAINT tra_passag_elevada_viaduto_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_passag_elevada_viaduto_l_tipopassagviad_check CHECK ((tipopassagviad = 5) OR (tipopassagviad = 6)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_passag_elevada_viaduto_l', 'features','cb_tra_passag_elevada_viaduto_l', 'Camada tra_passag_elevada_viaduto_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_passag_elevada_viaduto_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_passag_elevada_viaduto_l" AFTER INSERT ON "cb_tra_passag_elevada_viaduto_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_passag_elevada_viaduto_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_passag_elevada_viaduto_l" AFTER DELETE ON "cb_tra_passag_elevada_viaduto_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_passag_elevada_viaduto_l'); END ;CREATE TABLE cb_tra_passag_elevada_viaduto_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 cargasuportmaxima real,	 extensao real,	 gabhorizsup real,	 gabvertsup real,	 geometriaaproximada smallint NOT NULL,	 largura real,	 matconstr smallint NOT NULL,	 modaluso smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 nrfaixas integer,	 nrpistas integer,	 operacional smallint NOT NULL,	 posicaopista smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipopassagviad smallint NOT NULL,	 vaolivrehoriz real,	 vaovertical real,	 geom MultiPoint,	 CONSTRAINT tra_passag_elevada_viaduto_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_passag_elevada_viaduto_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_passag_elevada_viaduto_p_modaluso_check CHECK ((modaluso = 4) OR (modaluso = 5) OR (modaluso = 6) OR (modaluso = 7) OR (modaluso = 8) OR (modaluso = 9) OR (modaluso = 14) OR (modaluso = 98)),	 CONSTRAINT tra_passag_elevada_viaduto_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_passag_elevada_viaduto_p_posicaopista_check CHECK ((posicaopista = 0) OR (posicaopista = 12) OR (posicaopista = 13) OR (posicaopista = 97)),	 CONSTRAINT tra_passag_elevada_viaduto_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_passag_elevada_viaduto_p_tipopassagviad_check CHECK ((tipopassagviad = 5) OR (tipopassagviad = 6)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_passag_elevada_viaduto_p', 'features','cb_tra_passag_elevada_viaduto_p', 'Camada tra_passag_elevada_viaduto_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_passag_elevada_viaduto_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_passag_elevada_viaduto_p" AFTER INSERT ON "cb_tra_passag_elevada_viaduto_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_passag_elevada_viaduto_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_passag_elevada_viaduto_p" AFTER DELETE ON "cb_tra_passag_elevada_viaduto_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_passag_elevada_viaduto_p'); END ;CREATE TABLE cb_tra_passagem_nivel_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPoint,	 CONSTRAINT tra_passagem_nivel_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_passagem_nivel_p', 'features','cb_tra_passagem_nivel_p', 'Camada tra_passagem_nivel_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_passagem_nivel_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_passagem_nivel_p" AFTER INSERT ON "cb_tra_passagem_nivel_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_passagem_nivel_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_passagem_nivel_p" AFTER DELETE ON "cb_tra_passagem_nivel_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_passagem_nivel_p'); END ;CREATE TABLE cb_tra_patio_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 modaluso smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_patio_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_patio_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_patio_a_modaluso_check CHECK ((modaluso = 4) OR (modaluso = 5) OR (modaluso = 6) OR (modaluso = 7) OR (modaluso = 8) OR (modaluso = 9) OR (modaluso = 14) OR (modaluso = 98)),	 CONSTRAINT tra_patio_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_patio_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_patio_a', 'features','cb_tra_patio_a', 'Camada tra_patio_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_patio_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_patio_a" AFTER INSERT ON "cb_tra_patio_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_patio_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_patio_a" AFTER DELETE ON "cb_tra_patio_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_patio_a'); END ;CREATE TABLE cb_tra_patio_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 modaluso smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_patio_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_patio_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_patio_p_modaluso_check CHECK ((modaluso = 4) OR (modaluso = 5) OR (modaluso = 6) OR (modaluso = 7) OR (modaluso = 8) OR (modaluso = 9) OR (modaluso = 14) OR (modaluso = 98)),	 CONSTRAINT tra_patio_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_patio_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_patio_p', 'features','cb_tra_patio_p', 'Camada tra_patio_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_patio_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_patio_p" AFTER INSERT ON "cb_tra_patio_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_patio_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_patio_p" AFTER DELETE ON "cb_tra_patio_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_patio_p'); END ;CREATE TABLE cb_tra_pista_ponto_pouso_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 homologacao smallint NOT NULL,	 largura real,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 revestimento smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipopista smallint NOT NULL,	 usopista smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_pista_ponto_pouso_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_pista_ponto_pouso_a_homologacao_check CHECK ((homologacao = 0) OR (homologacao = 1) OR (homologacao = 2)),	 CONSTRAINT tra_pista_ponto_pouso_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_pista_ponto_pouso_a_revestimento_check CHECK ((revestimento = 0) OR (revestimento = 1) OR (revestimento = 2) OR (revestimento = 3) OR (revestimento = 4)),	 CONSTRAINT tra_pista_ponto_pouso_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_pista_ponto_pouso_a_tipopista_check CHECK ((tipopista = 0) OR (tipopista = 1) OR (tipopista = 2) OR (tipopista = 3) OR (tipopista = 4) OR (tipopista = 5) OR (tipopista = 9) OR (tipopista = 10) OR (tipopista = 11) OR (tipopista = 98) OR (tipopista = 99)),	 CONSTRAINT tra_pista_ponto_pouso_a_usopista_check CHECK ((usopista = 0) OR (usopista = 6) OR (usopista = 11) OR (usopista = 12) OR (usopista = 13)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_pista_ponto_pouso_a', 'features','cb_tra_pista_ponto_pouso_a', 'Camada tra_pista_ponto_pouso_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_pista_ponto_pouso_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_pista_ponto_pouso_a" AFTER INSERT ON "cb_tra_pista_ponto_pouso_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_pista_ponto_pouso_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_pista_ponto_pouso_a" AFTER DELETE ON "cb_tra_pista_ponto_pouso_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_pista_ponto_pouso_a'); END ;CREATE TABLE cb_tra_pista_ponto_pouso_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 homologacao smallint NOT NULL,	 largura real,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 revestimento smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipopista smallint NOT NULL,	 usopista smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_pista_ponto_pouso_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_pista_ponto_pouso_l_homologacao_check CHECK ((homologacao = 0) OR (homologacao = 1) OR (homologacao = 2)),	 CONSTRAINT tra_pista_ponto_pouso_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_pista_ponto_pouso_l_revestimento_check CHECK ((revestimento = 0) OR (revestimento = 1) OR (revestimento = 2) OR (revestimento = 3) OR (revestimento = 4)),	 CONSTRAINT tra_pista_ponto_pouso_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_pista_ponto_pouso_l_tipopista_check CHECK ((tipopista = 0) OR (tipopista = 1) OR (tipopista = 2) OR (tipopista = 3) OR (tipopista = 4) OR (tipopista = 5) OR (tipopista = 9) OR (tipopista = 10) OR (tipopista = 11) OR (tipopista = 98) OR (tipopista = 99)),	 CONSTRAINT tra_pista_ponto_pouso_l_usopista_check CHECK ((usopista = 0) OR (usopista = 6) OR (usopista = 11) OR (usopista = 12) OR (usopista = 13)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_pista_ponto_pouso_l', 'features','cb_tra_pista_ponto_pouso_l', 'Camada tra_pista_ponto_pouso_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_pista_ponto_pouso_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_pista_ponto_pouso_l" AFTER INSERT ON "cb_tra_pista_ponto_pouso_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_pista_ponto_pouso_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_pista_ponto_pouso_l" AFTER DELETE ON "cb_tra_pista_ponto_pouso_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_pista_ponto_pouso_l'); END ;CREATE TABLE cb_tra_pista_ponto_pouso_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 homologacao smallint NOT NULL,	 largura real,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 revestimento smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipopista smallint NOT NULL,	 usopista smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_pista_ponto_pouso_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_pista_ponto_pouso_p_homologacao_check CHECK ((homologacao = 0) OR (homologacao = 1) OR (homologacao = 2)),	 CONSTRAINT tra_pista_ponto_pouso_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_pista_ponto_pouso_p_revestimento_check CHECK ((revestimento = 0) OR (revestimento = 1) OR (revestimento = 2) OR (revestimento = 3) OR (revestimento = 4)),	 CONSTRAINT tra_pista_ponto_pouso_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_pista_ponto_pouso_p_tipopista_check CHECK ((tipopista = 0) OR (tipopista = 1) OR (tipopista = 2) OR (tipopista = 3) OR (tipopista = 4) OR (tipopista = 5) OR (tipopista = 9) OR (tipopista = 10) OR (tipopista = 11) OR (tipopista = 98) OR (tipopista = 99)),	 CONSTRAINT tra_pista_ponto_pouso_p_usopista_check CHECK ((usopista = 0) OR (usopista = 6) OR (usopista = 11) OR (usopista = 12) OR (usopista = 13)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_pista_ponto_pouso_p', 'features','cb_tra_pista_ponto_pouso_p', 'Camada tra_pista_ponto_pouso_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_pista_ponto_pouso_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_pista_ponto_pouso_p" AFTER INSERT ON "cb_tra_pista_ponto_pouso_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_pista_ponto_pouso_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_pista_ponto_pouso_p" AFTER DELETE ON "cb_tra_pista_ponto_pouso_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_pista_ponto_pouso_p'); END ;CREATE TABLE cb_tra_ponte_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 cargasuportmaxima real,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 largura real,	 matconstr smallint NOT NULL,	 modaluso smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 nrfaixas integer,	 nrpistas integer,	 operacional smallint NOT NULL,	 posicaopista smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoponte smallint NOT NULL,	 vaolivrehoriz real,	 vaovertical real,	 geom MultiLinestring,	 CONSTRAINT tra_ponte_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_ponte_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_ponte_l_modaluso_check CHECK ((modaluso = 4) OR (modaluso = 5) OR (modaluso = 6) OR (modaluso = 7) OR (modaluso = 8) OR (modaluso = 9) OR (modaluso = 14) OR (modaluso = 98)),	 CONSTRAINT tra_ponte_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_ponte_l_posicaopista_check CHECK ((posicaopista = 0) OR (posicaopista = 12) OR (posicaopista = 13) OR (posicaopista = 97)),	 CONSTRAINT tra_ponte_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_ponte_l_tipoponte_check CHECK ((tipoponte = 0) OR (tipoponte = 1) OR (tipoponte = 2) OR (tipoponte = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_ponte_l', 'features','cb_tra_ponte_l', 'Camada tra_ponte_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_ponte_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_ponte_l" AFTER INSERT ON "cb_tra_ponte_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_ponte_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_ponte_l" AFTER DELETE ON "cb_tra_ponte_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_ponte_l'); END ;CREATE TABLE cb_tra_ponte_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 cargasuportmaxima real,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 largura real,	 matconstr smallint NOT NULL,	 modaluso smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 nrfaixas integer,	 nrpistas integer,	 operacional smallint NOT NULL,	 posicaopista smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipoponte smallint NOT NULL,	 vaolivrehoriz real,	 vaovertical real,	 geom MultiPoint,	 CONSTRAINT tra_ponte_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_ponte_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_ponte_p_modaluso_check CHECK ((modaluso = 4) OR (modaluso = 5) OR (modaluso = 6) OR (modaluso = 7) OR (modaluso = 8) OR (modaluso = 9) OR (modaluso = 14) OR (modaluso = 98)),	 CONSTRAINT tra_ponte_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_ponte_p_posicaopista_check CHECK ((posicaopista = 0) OR (posicaopista = 12) OR (posicaopista = 13) OR (posicaopista = 97)),	 CONSTRAINT tra_ponte_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_ponte_p_tipoponte_check CHECK ((tipoponte = 0) OR (tipoponte = 1) OR (tipoponte = 2) OR (tipoponte = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_ponte_p', 'features','cb_tra_ponte_p', 'Camada tra_ponte_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_ponte_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_ponte_p" AFTER INSERT ON "cb_tra_ponte_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_ponte_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_ponte_p" AFTER DELETE ON "cb_tra_ponte_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_ponte_p'); END ;CREATE TABLE cb_tra_ponto_duto_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 relacionado smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_ponto_duto_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_ponto_duto_p_relacionado_check CHECK ((relacionado = 1) OR (relacionado = 2) OR (relacionado = 3) OR (relacionado = 4) OR (relacionado = 5) OR (relacionado = 17)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_ponto_duto_p', 'features','cb_tra_ponto_duto_p', 'Camada tra_ponto_duto_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_ponto_duto_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_ponto_duto_p" AFTER INSERT ON "cb_tra_ponto_duto_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_ponto_duto_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_ponto_duto_p" AFTER DELETE ON "cb_tra_ponto_duto_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_ponto_duto_p'); END ;CREATE TABLE cb_tra_ponto_rodoviario_ferrov_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 relacionado smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_ponto_rodoviario_ferrov_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_ponto_rodoviario_ferrov_p_relacionado_check CHECK ((relacionado = 0) OR (relacionado = 1) OR (relacionado = 2) OR (relacionado = 3) OR (relacionado = 4) OR (relacionado = 5) OR (relacionado = 6) OR (relacionado = 7) OR (relacionado = 8) OR (relacionado = 9) OR (relacionado = 10) OR (relacionado = 11) OR (relacionado = 12) OR (relacionado = 13) OR (relacionado = 17) OR (relacionado = 19)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_ponto_rodoviario_ferrov_p', 'features','cb_tra_ponto_rodoviario_ferrov_p', 'Camada tra_ponto_rodoviario_ferrov_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_ponto_rodoviario_ferrov_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_ponto_rodoviario_ferrov_p" AFTER INSERT ON "cb_tra_ponto_rodoviario_ferrov_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_ponto_rodoviario_ferrov_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_ponto_rodoviario_ferrov_p" AFTER DELETE ON "cb_tra_ponto_rodoviario_ferrov_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_ponto_rodoviario_ferrov_p'); END ;CREATE TABLE cb_tra_ponto_hidroviario_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 relacionado smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_ponto_hidroviario_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_ponto_hidroviario_p_relacionado_check CHECK ((relacionado = 12) OR (relacionado = 13) OR (relacionado = 14) OR (relacionado = 16) OR (relacionado = 17) OR (relacionado = 19) OR (relacionado = 21) OR (relacionado = 22) OR (relacionado = 23) OR (relacionado = 24)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_ponto_hidroviario_p', 'features','cb_tra_ponto_hidroviario_p', 'Camada tra_ponto_hidroviario_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_ponto_hidroviario_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_ponto_hidroviario_p" AFTER INSERT ON "cb_tra_ponto_hidroviario_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_ponto_hidroviario_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_ponto_hidroviario_p" AFTER DELETE ON "cb_tra_ponto_hidroviario_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_ponto_hidroviario_p'); END ;CREATE TABLE cb_tra_posto_combustivel_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT tra_posto_combustivel_a_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_posto_combustivel_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_posto_combustivel_a_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_posto_combustivel_a_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_posto_combustivel_a_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_posto_combustivel_a', 'features','cb_tra_posto_combustivel_a', 'Camada tra_posto_combustivel_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_posto_combustivel_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_posto_combustivel_a" AFTER INSERT ON "cb_tra_posto_combustivel_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_posto_combustivel_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_posto_combustivel_a" AFTER DELETE ON "cb_tra_posto_combustivel_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_posto_combustivel_a'); END ;CREATE TABLE cb_tra_posto_combustivel_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_posto_combustivel_p_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_posto_combustivel_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_posto_combustivel_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_posto_combustivel_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_posto_combustivel_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_posto_combustivel_p', 'features','cb_tra_posto_combustivel_p', 'Camada tra_posto_combustivel_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_posto_combustivel_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_posto_combustivel_p" AFTER INSERT ON "cb_tra_posto_combustivel_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_posto_combustivel_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_posto_combustivel_p" AFTER DELETE ON "cb_tra_posto_combustivel_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_posto_combustivel_p'); END ;CREATE TABLE cb_tra_sinalizacao_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tiposinal smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_sinalizacao_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_sinalizacao_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_sinalizacao_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_sinalizacao_p_tiposinal_check CHECK ((tiposinal = 0) OR (tiposinal = 1) OR (tiposinal = 2) OR (tiposinal = 3) OR (tiposinal = 4) OR (tiposinal = 5) OR (tiposinal = 6)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_sinalizacao_p', 'features','cb_tra_sinalizacao_p', 'Camada tra_sinalizacao_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_sinalizacao_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_sinalizacao_p" AFTER INSERT ON "cb_tra_sinalizacao_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_sinalizacao_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_sinalizacao_p" AFTER DELETE ON "cb_tra_sinalizacao_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_sinalizacao_p'); END ;CREATE TABLE cb_tra_travessia_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipotravessia smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_travessia_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_travessia_l_tipotravessia_check CHECK ((tipotravessia = 0) OR (tipotravessia = 1) OR (tipotravessia = 2) OR (tipotravessia = 3) OR (tipotravessia = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_travessia_l', 'features','cb_tra_travessia_l', 'Camada tra_travessia_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_travessia_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_travessia_l" AFTER INSERT ON "cb_tra_travessia_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_travessia_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_travessia_l" AFTER DELETE ON "cb_tra_travessia_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_travessia_l'); END ;CREATE TABLE cb_tra_travessia_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipotravessia smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_travessia_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_travessia_p_tipotravessia_check CHECK ((tipotravessia = 0) OR (tipotravessia = 1) OR (tipotravessia = 2) OR (tipotravessia = 3) OR (tipotravessia = 4)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_travessia_p', 'features','cb_tra_travessia_p', 'Camada tra_travessia_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_travessia_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_travessia_p" AFTER INSERT ON "cb_tra_travessia_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_travessia_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_travessia_p" AFTER DELETE ON "cb_tra_travessia_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_travessia_p'); END ;CREATE TABLE cb_tra_travessia_pedestre_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 largura real,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipotravessiaped smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_travessia_pedestre_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_travessia_pedestre_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_travessia_pedestre_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_travessia_pedestre_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_travessia_pedestre_l_tipotravessiaped_check CHECK ((tipotravessiaped = 0) OR (tipotravessiaped = 7) OR (tipotravessiaped = 8) OR (tipotravessiaped = 9)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_travessia_pedestre_l', 'features','cb_tra_travessia_pedestre_l', 'Camada tra_travessia_pedestre_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_travessia_pedestre_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_travessia_pedestre_l" AFTER INSERT ON "cb_tra_travessia_pedestre_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_travessia_pedestre_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_travessia_pedestre_l" AFTER DELETE ON "cb_tra_travessia_pedestre_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_travessia_pedestre_l'); END ;CREATE TABLE cb_tra_travessia_pedestre_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 extensao real,	 geometriaaproximada smallint NOT NULL,	 largura real,	 matconstr smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipotravessiaped smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_travessia_pedestre_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_travessia_pedestre_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_travessia_pedestre_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_travessia_pedestre_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_travessia_pedestre_p_tipotravessiaped_check CHECK ((tipotravessiaped = 0) OR (tipotravessiaped = 7) OR (tipotravessiaped = 8) OR (tipotravessiaped = 9)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_travessia_pedestre_p', 'features','cb_tra_travessia_pedestre_p', 'Camada tra_travessia_pedestre_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_travessia_pedestre_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_travessia_pedestre_p" AFTER INSERT ON "cb_tra_travessia_pedestre_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_travessia_pedestre_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_travessia_pedestre_p" AFTER DELETE ON "cb_tra_travessia_pedestre_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_travessia_pedestre_p'); END ;CREATE TABLE cb_tra_trecho_duto_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 mattransp smallint NOT NULL,	 nrdutos integer,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 posicaorelativa smallint NOT NULL,	 setor smallint NOT NULL,	 situacaoespacial smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipotrechoduto smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_trecho_duto_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_trecho_duto_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_trecho_duto_l_mattransp_check CHECK ((mattransp = 0) OR (mattransp = 1) OR (mattransp = 2) OR (mattransp = 3) OR (mattransp = 4) OR (mattransp = 5) OR (mattransp = 6) OR (mattransp = 7) OR (mattransp = 8) OR (mattransp = 9) OR (mattransp = 29) OR (mattransp = 30) OR (mattransp = 31) OR (mattransp = 99)),	 CONSTRAINT tra_trecho_duto_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_trecho_duto_l_posicaorelativa_check CHECK ((posicaorelativa = 0) OR (posicaorelativa = 2) OR (posicaorelativa = 3) OR (posicaorelativa = 4) OR (posicaorelativa = 5) OR (posicaorelativa = 6)),	 CONSTRAINT tra_trecho_duto_l_setor_check CHECK ((setor = 0) OR (setor = 1) OR (setor = 2) OR (setor = 3) OR (setor = 4)),	 CONSTRAINT tra_trecho_duto_l_situacaoespacial_check CHECK ((situacaoespacial = 0) OR (situacaoespacial = 12) OR (situacaoespacial = 13) OR (situacaoespacial = 99)),	 CONSTRAINT tra_trecho_duto_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_trecho_duto_l_tipotrechoduto_check CHECK ((tipotrechoduto = 0) OR (tipotrechoduto = 1) OR (tipotrechoduto = 2) OR (tipotrechoduto = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_trecho_duto_l', 'features','cb_tra_trecho_duto_l', 'Camada tra_trecho_duto_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_trecho_duto_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_trecho_duto_l" AFTER INSERT ON "cb_tra_trecho_duto_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_trecho_duto_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_trecho_duto_l" AFTER DELETE ON "cb_tra_trecho_duto_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_trecho_duto_l'); END ;CREATE TABLE cb_tra_trecho_ferroviario_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 bitola smallint NOT NULL,	 cargasuportmaxima real,	 codtrechoferrov varchar(255),	 concessionaria varchar(255),	 eletrificada smallint NOT NULL,	 emarruamento smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 jurisdicao smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 nrlinhas smallint NOT NULL,	 operacional smallint NOT NULL,	 posicaorelativa smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipotrechoferrov smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_trecho_ferroviario_l_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_trecho_ferroviario_l_bitola_check CHECK ((bitola = 0) OR (bitola = 1) OR (bitola = 2) OR (bitola = 3) OR (bitola = 4) OR (bitola = 5) OR (bitola = 6)),	 CONSTRAINT tra_trecho_ferroviario_l_eletrificada_check CHECK ((eletrificada = 0) OR (eletrificada = 1) OR (eletrificada = 2)),	 CONSTRAINT tra_trecho_ferroviario_l_emarruamento_check CHECK ((emarruamento = 0) OR (emarruamento = 1) OR (emarruamento = 2)),	 CONSTRAINT tra_trecho_ferroviario_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_trecho_ferroviario_l_jurisdicao_check CHECK ((jurisdicao = 0) OR (jurisdicao = 1) OR (jurisdicao = 2) OR (jurisdicao = 3) OR (jurisdicao = 6) OR (jurisdicao = 8)),	 CONSTRAINT tra_trecho_ferroviario_l_nrlinhas_check CHECK ((nrlinhas = 0) OR (nrlinhas = 1) OR (nrlinhas = 2) OR (nrlinhas = 3)),	 CONSTRAINT tra_trecho_ferroviario_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_trecho_ferroviario_l_posicaorelativa_check CHECK ((posicaorelativa = 0) OR (posicaorelativa = 2) OR (posicaorelativa = 3) OR (posicaorelativa = 4) OR (posicaorelativa = 5) OR (posicaorelativa = 6)),	 CONSTRAINT tra_trecho_ferroviario_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_trecho_ferroviario_l_tipotrechoferrov_check CHECK ((tipotrechoferrov = 0) OR (tipotrechoferrov = 5) OR (tipotrechoferrov = 6) OR (tipotrechoferrov = 7) OR (tipotrechoferrov = 8)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_trecho_ferroviario_l', 'features','cb_tra_trecho_ferroviario_l', 'Camada tra_trecho_ferroviario_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_trecho_ferroviario_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_trecho_ferroviario_l" AFTER INSERT ON "cb_tra_trecho_ferroviario_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_trecho_ferroviario_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_trecho_ferroviario_l" AFTER DELETE ON "cb_tra_trecho_ferroviario_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_trecho_ferroviario_l'); END ;CREATE TABLE cb_tra_trecho_hidroviario_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 caladomaxseca real,	 extensaotrecho real,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 operacional smallint NOT NULL,	 regime smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_trecho_hidroviario_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_trecho_hidroviario_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_trecho_hidroviario_l_regime_check CHECK ((regime = 0) OR (regime = 1) OR (regime = 2) OR (regime = 3) OR (regime = 4) OR (regime = 5) OR (regime = 6)),	 CONSTRAINT tra_trecho_hidroviario_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_trecho_hidroviario_l', 'features','cb_tra_trecho_hidroviario_l', 'Camada tra_trecho_hidroviario_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_trecho_hidroviario_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_trecho_hidroviario_l" AFTER INSERT ON "cb_tra_trecho_hidroviario_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_trecho_hidroviario_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_trecho_hidroviario_l" AFTER DELETE ON "cb_tra_trecho_hidroviario_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_trecho_hidroviario_l'); END ;CREATE TABLE cb_tra_trecho_rodoviario_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 administracao smallint NOT NULL,	 canteirodivisorio smallint NOT NULL,	 capaccarga real,	 codtrechorodov varchar(255),	 concessionaria varchar(255),	 geometriaaproximada smallint NOT NULL,	 jurisdicao smallint NOT NULL,	 nrfaixas integer,	 nrpistas integer,	 operacional smallint NOT NULL,	 revestimento smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipotrechorod smallint NOT NULL,	 trafego smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_trecho_rodoviario_l_administracao_check CHECK ((administracao = 0) OR (administracao = 1) OR (administracao = 2) OR (administracao = 3) OR (administracao = 4) OR (administracao = 5) OR (administracao = 6) OR (administracao = 7) OR (administracao = 15) OR (administracao = 97) OR (administracao = 98)),	 CONSTRAINT tra_trecho_rodoviario_l_canteirodivisorio_check CHECK ((canteirodivisorio = 1) OR (canteirodivisorio = 2)),	 CONSTRAINT tra_trecho_rodoviario_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_trecho_rodoviario_l_jurisdicao_check CHECK ((jurisdicao = 0) OR (jurisdicao = 1) OR (jurisdicao = 2) OR (jurisdicao = 3) OR (jurisdicao = 6) OR (jurisdicao = 8)),	 CONSTRAINT tra_trecho_rodoviario_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_trecho_rodoviario_l_revestimento_check CHECK ((revestimento = 0) OR (revestimento = 1) OR (revestimento = 2) OR (revestimento = 3) OR (revestimento = 4)),	 CONSTRAINT tra_trecho_rodoviario_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_trecho_rodoviario_l_tipotrechorod_check CHECK ((tipotrechorod = 1) OR (tipotrechorod = 2) OR (tipotrechorod = 3) OR (tipotrechorod = 4)),	 CONSTRAINT tra_trecho_rodoviario_l_trafego_check CHECK ((trafego = 0) OR (trafego = 1) OR (trafego = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_trecho_rodoviario_l', 'features','cb_tra_trecho_rodoviario_l', 'Camada tra_trecho_rodoviario_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_trecho_rodoviario_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_trecho_rodoviario_l" AFTER INSERT ON "cb_tra_trecho_rodoviario_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_trecho_rodoviario_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_trecho_rodoviario_l" AFTER DELETE ON "cb_tra_trecho_rodoviario_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_trecho_rodoviario_l'); END ;CREATE TABLE cb_tra_trilha_picada_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiLinestring,	 CONSTRAINT tra_trilha_picada_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_trilha_picada_l', 'features','cb_tra_trilha_picada_l', 'Camada tra_trilha_picada_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_trilha_picada_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_trilha_picada_l" AFTER INSERT ON "cb_tra_trilha_picada_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_trilha_picada_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_trilha_picada_l" AFTER DELETE ON "cb_tra_trilha_picada_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_trilha_picada_l'); END ;CREATE TABLE cb_tra_tunel_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 altura real,	 extensao real,	 largura real,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 modaluso smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 nrfaixas integer,	 nrpistas integer,	 operacional smallint NOT NULL,	 posicaopista smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipotunel smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT tra_tunel_l_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_tunel_l_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_tunel_l_modaluso_check CHECK ((modaluso = 4) OR (modaluso = 5) OR (modaluso = 6) OR (modaluso = 7) OR (modaluso = 8) OR (modaluso = 9) OR (modaluso = 14) OR (modaluso = 98)),	 CONSTRAINT tra_tunel_l_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_tunel_l_posicaopista_check CHECK ((posicaopista = 0) OR (posicaopista = 12) OR (posicaopista = 13) OR (posicaopista = 97)),	 CONSTRAINT tra_tunel_l_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_tunel_l_tipotunel_check CHECK ((tipotunel = 1) OR (tipotunel = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_tunel_l', 'features','cb_tra_tunel_l', 'Camada tra_tunel_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_tunel_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_tunel_l" AFTER INSERT ON "cb_tra_tunel_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_tunel_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_tunel_l" AFTER DELETE ON "cb_tra_tunel_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_tunel_l'); END ;CREATE TABLE cb_tra_tunel_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 altura real,	 extensao real,	 largura real,	 geometriaaproximada smallint NOT NULL,	 matconstr smallint NOT NULL,	 modaluso smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 nrfaixas integer,	 nrpistas integer,	 operacional smallint NOT NULL,	 posicaopista smallint NOT NULL,	 situacaofisica smallint NOT NULL,	 tipotunel smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT tra_tunel_p_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT tra_tunel_p_matconstr_check CHECK ((matconstr = 0) OR (matconstr = 1) OR (matconstr = 2) OR (matconstr = 3) OR (matconstr = 4) OR (matconstr = 5) OR (matconstr = 6) OR (matconstr = 7) OR (matconstr = 8) OR (matconstr = 23) OR (matconstr = 25) OR (matconstr = 26) OR (matconstr = 97) OR (matconstr = 99)),	 CONSTRAINT tra_tunel_p_modaluso_check CHECK ((modaluso = 4) OR (modaluso = 5) OR (modaluso = 6) OR (modaluso = 7) OR (modaluso = 8) OR (modaluso = 9) OR (modaluso = 14) OR (modaluso = 98)),	 CONSTRAINT tra_tunel_p_operacional_check CHECK ((operacional = 0) OR (operacional = 1) OR (operacional = 2)),	 CONSTRAINT tra_tunel_p_posicaopista_check CHECK ((posicaopista = 0) OR (posicaopista = 12) OR (posicaopista = 13) OR (posicaopista = 97)),	 CONSTRAINT tra_tunel_p_situacaofisica_check CHECK ((situacaofisica = 0) OR (situacaofisica = 1) OR (situacaofisica = 2) OR (situacaofisica = 3) OR (situacaofisica = 4) OR (situacaofisica = 5)),	 CONSTRAINT tra_tunel_p_tipotunel_check CHECK ((tipotunel = 1) OR (tipotunel = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_tra_tunel_p', 'features','cb_tra_tunel_p', 'Camada tra_tunel_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_tra_tunel_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_tra_tunel_p" AFTER INSERT ON "cb_tra_tunel_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_tra_tunel_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_tra_tunel_p" AFTER DELETE ON "cb_tra_tunel_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_tra_tunel_p'); END ;CREATE TABLE cb_veg_brejo_pantano_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturamediaindividuos real,	 antropizada smallint NOT NULL,	 classificacaoporte smallint NOT NULL,	 denso smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipobrejopantano smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT veg_brejo_pantano_a_antropizada_check CHECK ((antropizada = 0) OR (antropizada = 1) OR (antropizada = 2)),	 CONSTRAINT veg_brejo_pantano_a_classificacaoporte_check CHECK ((classificacaoporte = 0) OR (classificacaoporte = 1) OR (classificacaoporte = 2) OR (classificacaoporte = 3) OR (classificacaoporte = 4) OR (classificacaoporte = 98)),	 CONSTRAINT veg_brejo_pantano_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_brejo_pantano_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT veg_brejo_pantano_a_tipobrejopantano_check CHECK ((tipobrejopantano = 0) OR (tipobrejopantano = 1) OR (tipobrejopantano = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_brejo_pantano_a', 'features','cb_veg_brejo_pantano_a', 'Camada veg_brejo_pantano_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_brejo_pantano_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_brejo_pantano_a" AFTER INSERT ON "cb_veg_brejo_pantano_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_brejo_pantano_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_brejo_pantano_a" AFTER DELETE ON "cb_veg_brejo_pantano_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_brejo_pantano_a'); END ;CREATE TABLE cb_veg_caatinga_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturamediaindividuos real,	 antropizada smallint NOT NULL,	 classificacaoporte smallint NOT NULL,	 denso smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT veg_caatinga_a_antropizada_check CHECK ((antropizada = 0) OR (antropizada = 1) OR (antropizada = 2)),	 CONSTRAINT veg_caatinga_a_classificacaoporte_check CHECK ((classificacaoporte = 0) OR (classificacaoporte = 1) OR (classificacaoporte = 2) OR (classificacaoporte = 3) OR (classificacaoporte = 4) OR (classificacaoporte = 98)),	 CONSTRAINT veg_caatinga_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_caatinga_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_caatinga_a', 'features','cb_veg_caatinga_a', 'Camada veg_caatinga_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_caatinga_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_caatinga_a" AFTER INSERT ON "cb_veg_caatinga_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_caatinga_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_caatinga_a" AFTER DELETE ON "cb_veg_caatinga_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_caatinga_a'); END ;CREATE TABLE cb_veg_campinarana_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturamediaindividuos real,	 antropizada smallint NOT NULL,	 classificacaoporte smallint NOT NULL,	 denso smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT veg_campinarana_a_antropizada_check CHECK ((antropizada = 0) OR (antropizada = 1) OR (antropizada = 2)),	 CONSTRAINT veg_campinarana_a_classificacaoporte_check CHECK ((classificacaoporte = 0) OR (classificacaoporte = 1) OR (classificacaoporte = 2) OR (classificacaoporte = 3) OR (classificacaoporte = 4) OR (classificacaoporte = 98)),	 CONSTRAINT veg_campinarana_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_campinarana_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_campinarana_a', 'features','cb_veg_campinarana_a', 'Camada veg_campinarana_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_campinarana_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_campinarana_a" AFTER INSERT ON "cb_veg_campinarana_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_campinarana_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_campinarana_a" AFTER DELETE ON "cb_veg_campinarana_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_campinarana_a'); END ;CREATE TABLE cb_veg_campo_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 ocorrenciaem smallint NOT NULL,	 tipocampo smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT veg_campo_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT veg_campo_a_ocorrenciaem_check CHECK ((ocorrenciaem = 5) OR (ocorrenciaem = 6) OR (ocorrenciaem = 7) OR (ocorrenciaem = 8) OR (ocorrenciaem = 13) OR (ocorrenciaem = 14) OR (ocorrenciaem = 15) OR (ocorrenciaem = 19) OR (ocorrenciaem = 96)),	 CONSTRAINT veg_campo_a_tipocampo_check CHECK ((tipocampo = 0) OR (tipocampo = 1) OR (tipocampo = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_campo_a', 'features','cb_veg_campo_a', 'Camada veg_campo_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_campo_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_campo_a" AFTER INSERT ON "cb_veg_campo_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_campo_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_campo_a" AFTER DELETE ON "cb_veg_campo_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_campo_a'); END ;CREATE TABLE cb_veg_cerrado_cerradao_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 antropizada smallint NOT NULL,	 alturamediaindividuos real,	 classificacaoporte smallint NOT NULL,	 denso smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipocerr smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT veg_cerrado_cerradao_a_antropizada_check CHECK ((antropizada = 0) OR (antropizada = 1) OR (antropizada = 2)),	 CONSTRAINT veg_cerrado_cerradao_a_classificacaoporte_check CHECK ((classificacaoporte = 0) OR (classificacaoporte = 1) OR (classificacaoporte = 2) OR (classificacaoporte = 3) OR (classificacaoporte = 4) OR (classificacaoporte = 98)),	 CONSTRAINT veg_cerrado_cerradao_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_cerrado_cerradao_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT veg_cerrado_cerradao_a_tipocerr_check CHECK ((tipocerr = 0) OR (tipocerr = 1) OR (tipocerr = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_cerrado_cerradao_a', 'features','cb_veg_cerrado_cerradao_a', 'Camada veg_cerrado_cerradao_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_cerrado_cerradao_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_cerrado_cerradao_a" AFTER INSERT ON "cb_veg_cerrado_cerradao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_cerrado_cerradao_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_cerrado_cerradao_a" AFTER DELETE ON "cb_veg_cerrado_cerradao_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_cerrado_cerradao_a'); END ;CREATE TABLE cb_veg_descontinuidade_geometrica_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT veg_descontinuidade_geometrica_a_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_descontinuidade_geometrica_a', 'features','cb_veg_descontinuidade_geometrica_a', 'Camada veg_descontinuidade_geometrica_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_descontinuidade_geometrica_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_descontinuidade_geometrica_a" AFTER INSERT ON "cb_veg_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_descontinuidade_geometrica_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_descontinuidade_geometrica_a" AFTER DELETE ON "cb_veg_descontinuidade_geometrica_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_descontinuidade_geometrica_a'); END ;CREATE TABLE cb_veg_descontinuidade_geometrica_l(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiLinestring,	 CONSTRAINT veg_descontinuidade_geometrica_l_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_descontinuidade_geometrica_l', 'features','cb_veg_descontinuidade_geometrica_l', 'Camada veg_descontinuidade_geometrica_l da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_descontinuidade_geometrica_l', 'geom', 'MULTILINESTRING', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_descontinuidade_geometrica_l" AFTER INSERT ON "cb_veg_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_descontinuidade_geometrica_l'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_descontinuidade_geometrica_l" AFTER DELETE ON "cb_veg_descontinuidade_geometrica_l" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_descontinuidade_geometrica_l'); END ;CREATE TABLE cb_veg_descontinuidade_geometrica_p(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 motivodescontinuidade smallint NOT NULL,	 geom MultiPoint,	 CONSTRAINT veg_descontinuidade_geometrica_p_motivodescontinuidade_check CHECK ((motivodescontinuidade = 1) OR (motivodescontinuidade = 2) OR (motivodescontinuidade = 3) OR (motivodescontinuidade = 4) OR (motivodescontinuidade = 5) OR (motivodescontinuidade = 6) OR (motivodescontinuidade = 7)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_descontinuidade_geometrica_p', 'features','cb_veg_descontinuidade_geometrica_p', 'Camada veg_descontinuidade_geometrica_p da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_descontinuidade_geometrica_p', 'geom', 'MULTIPOINT', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_descontinuidade_geometrica_p" AFTER INSERT ON "cb_veg_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_descontinuidade_geometrica_p'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_descontinuidade_geometrica_p" AFTER DELETE ON "cb_veg_descontinuidade_geometrica_p" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_descontinuidade_geometrica_p'); END ;CREATE TABLE cb_veg_estepe_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturamediaindividuos real,	 antropizada smallint NOT NULL,	 denso smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT veg_estepe_a_antropizada_check CHECK ((antropizada = 0) OR (antropizada = 1) OR (antropizada = 2)),	 CONSTRAINT veg_estepe_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_estepe_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_estepe_a', 'features','cb_veg_estepe_a', 'Camada veg_estepe_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_estepe_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_estepe_a" AFTER INSERT ON "cb_veg_estepe_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_estepe_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_estepe_a" AFTER DELETE ON "cb_veg_estepe_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_estepe_a'); END ;CREATE TABLE cb_veg_floresta_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturamediaindividuos real,	 antropizada smallint NOT NULL,	 caracteristicafloresta smallint NOT NULL,	 classificacaoporte smallint NOT NULL,	 denso smallint NOT NULL,	 especiepredominante smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT veg_floresta_a_antropizada_check CHECK ((antropizada = 0) OR (antropizada = 1) OR (antropizada = 2)),	 CONSTRAINT veg_floresta_a_caracteristicafloresta_check CHECK ((caracteristicafloresta = 0) OR (caracteristicafloresta = 1) OR (caracteristicafloresta = 2) OR (caracteristicafloresta = 3)),	 CONSTRAINT veg_floresta_a_classificacaoporte_check CHECK ((classificacaoporte = 0) OR (classificacaoporte = 1) OR (classificacaoporte = 2) OR (classificacaoporte = 3) OR (classificacaoporte = 4) OR (classificacaoporte = 98)),	 CONSTRAINT veg_floresta_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_floresta_a_especiepredominante_check CHECK ((especiepredominante = 10) OR (especiepredominante = 11) OR (especiepredominante = 12) OR (especiepredominante = 17) OR (especiepredominante = 27) OR (especiepredominante = 41) OR (especiepredominante = 96) OR (especiepredominante = 98)),	 CONSTRAINT veg_floresta_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_floresta_a', 'features','cb_veg_floresta_a', 'Camada veg_floresta_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_floresta_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_floresta_a" AFTER INSERT ON "cb_veg_floresta_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_floresta_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_floresta_a" AFTER DELETE ON "cb_veg_floresta_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_floresta_a'); END ;CREATE TABLE cb_veg_macega_chavascal_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturamediaindividuos real,	 antropizada smallint NOT NULL,	 classificacaoporte smallint NOT NULL,	 denso smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 tipomacchav smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT veg_macega_chavascal_a_antropizada_check CHECK ((antropizada = 0) OR (antropizada = 1) OR (antropizada = 2)),	 CONSTRAINT veg_macega_chavascal_a_classificacaoporte_check CHECK ((classificacaoporte = 0) OR (classificacaoporte = 1) OR (classificacaoporte = 2) OR (classificacaoporte = 3) OR (classificacaoporte = 4) OR (classificacaoporte = 98)),	 CONSTRAINT veg_macega_chavascal_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_macega_chavascal_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT veg_macega_chavascal_a_tipomacchav_check CHECK ((tipomacchav = 0) OR (tipomacchav = 1) OR (tipomacchav = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_macega_chavascal_a', 'features','cb_veg_macega_chavascal_a', 'Camada veg_macega_chavascal_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_macega_chavascal_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_macega_chavascal_a" AFTER INSERT ON "cb_veg_macega_chavascal_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_macega_chavascal_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_macega_chavascal_a" AFTER DELETE ON "cb_veg_macega_chavascal_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_macega_chavascal_a'); END ;CREATE TABLE cb_veg_mangue_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 antropizada smallint NOT NULL,	 alturamediaindividuos real,	 classificacaoporte smallint NOT NULL,	 denso smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT veg_mangue_a_antropizada_check CHECK ((antropizada = 0) OR (antropizada = 1) OR (antropizada = 2)),	 CONSTRAINT veg_mangue_a_classificacaoporte_check CHECK ((classificacaoporte = 0) OR (classificacaoporte = 1) OR (classificacaoporte = 2) OR (classificacaoporte = 3) OR (classificacaoporte = 4) OR (classificacaoporte = 98)),	 CONSTRAINT veg_mangue_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_mangue_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_mangue_a', 'features','cb_veg_mangue_a', 'Camada veg_mangue_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_mangue_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_mangue_a" AFTER INSERT ON "cb_veg_mangue_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_mangue_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_mangue_a" AFTER DELETE ON "cb_veg_mangue_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_mangue_a'); END ;CREATE TABLE cb_veg_veg_area_contato_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturamediaindividuos real,	 antropizada smallint NOT NULL,	 classificacaoporte smallint NOT NULL,	 denso smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT veg_veg_area_contato_a_antropizada_check CHECK ((antropizada = 0) OR (antropizada = 1) OR (antropizada = 2)),	 CONSTRAINT veg_veg_area_contato_a_classificacaoporte_check CHECK ((classificacaoporte = 0) OR (classificacaoporte = 1) OR (classificacaoporte = 2) OR (classificacaoporte = 3) OR (classificacaoporte = 4) OR (classificacaoporte = 98)),	 CONSTRAINT veg_veg_area_contato_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_veg_area_contato_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_veg_area_contato_a', 'features','cb_veg_veg_area_contato_a', 'Camada veg_veg_area_contato_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_veg_area_contato_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_veg_area_contato_a" AFTER INSERT ON "cb_veg_veg_area_contato_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_veg_area_contato_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_veg_area_contato_a" AFTER DELETE ON "cb_veg_veg_area_contato_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_veg_area_contato_a'); END ;CREATE TABLE cb_veg_veg_cultivada_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturamediaindividuos real,	 classificacaoporte smallint NOT NULL,	 cultivopredominante smallint NOT NULL,	 denso smallint NOT NULL,	 espacamentoindividuos real,	 espessuradap real,	 finalidade smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 terreno smallint NOT NULL,	 tipolavoura smallint NOT NULL,	 geom MultiPolygon,	 CONSTRAINT veg_veg_cultivada_a_classificacaoporte_check CHECK ((classificacaoporte = 0) OR (classificacaoporte = 1) OR (classificacaoporte = 2) OR (classificacaoporte = 3) OR (classificacaoporte = 4) OR (classificacaoporte = 98)),	 CONSTRAINT veg_veg_cultivada_a_cultivopredominante_check CHECK ((cultivopredominante = 1) OR (cultivopredominante = 2) OR (cultivopredominante = 3) OR (cultivopredominante = 4) OR (cultivopredominante = 6) OR (cultivopredominante = 7) OR (cultivopredominante = 8) OR (cultivopredominante = 9) OR (cultivopredominante = 10) OR (cultivopredominante = 11) OR (cultivopredominante = 12) OR (cultivopredominante = 13) OR (cultivopredominante = 14) OR (cultivopredominante = 15) OR (cultivopredominante = 16) OR (cultivopredominante = 17) OR (cultivopredominante = 18) OR (cultivopredominante = 19) OR (cultivopredominante = 20) OR (cultivopredominante = 21) OR (cultivopredominante = 22) OR (cultivopredominante = 23) OR (cultivopredominante = 24) OR (cultivopredominante = 25) OR (cultivopredominante = 26) OR (cultivopredominante = 27) OR (cultivopredominante = 28) OR (cultivopredominante = 29) OR (cultivopredominante = 30) OR (cultivopredominante = 31) OR (cultivopredominante = 32) OR (cultivopredominante = 33) OR (cultivopredominante = 42) OR (cultivopredominante = 96) OR (cultivopredominante = 98) OR (cultivopredominante = 99)),	 CONSTRAINT veg_veg_cultivada_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_veg_cultivada_a_finalidade_check CHECK ((finalidade = 0) OR (finalidade = 1) OR (finalidade = 2) OR (finalidade = 3) OR (finalidade = 99)),	 CONSTRAINT veg_veg_cultivada_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)),	 CONSTRAINT veg_veg_cultivada_a_terreno_check CHECK ((terreno = 1) OR (terreno = 2) OR (terreno = 3)),	 CONSTRAINT veg_veg_cultivada_a_tipolavoura_check CHECK ((tipolavoura = 0) OR (tipolavoura = 1) OR (tipolavoura = 2) OR (tipolavoura = 3)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_veg_cultivada_a', 'features','cb_veg_veg_cultivada_a', 'Camada veg_veg_cultivada_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_veg_cultivada_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_veg_cultivada_a" AFTER INSERT ON "cb_veg_veg_cultivada_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_veg_cultivada_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_veg_cultivada_a" AFTER DELETE ON "cb_veg_veg_cultivada_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_veg_cultivada_a'); END ;CREATE TABLE cb_veg_veg_restinga_a(	 id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,	 alturamediaindividuos real,	 antropizada smallint NOT NULL,	 classificacaoporte smallint NOT NULL,	 denso smallint NOT NULL,	 geometriaaproximada smallint NOT NULL,	 nome varchar(255),	 nomeabrev varchar(255),	 geom MultiPolygon,	 CONSTRAINT veg_veg_restinga_a_antropizada_check CHECK ((antropizada = 0) OR (antropizada = 1) OR (antropizada = 2)),	 CONSTRAINT veg_veg_restinga_a_classificacaoporte_check CHECK ((classificacaoporte = 0) OR (classificacaoporte = 1) OR (classificacaoporte = 2) OR (classificacaoporte = 3) OR (classificacaoporte = 4) OR (classificacaoporte = 98)),	 CONSTRAINT veg_veg_restinga_a_denso_check CHECK ((denso = 0) OR (denso = 1) OR (denso = 2)),	 CONSTRAINT veg_veg_restinga_a_geometriaaproximada_check CHECK ((geometriaaproximada = 1) OR (geometriaaproximada = 2)));INSERT into gpkg_contents (table_name, data_type, identifier, description, min_x, min_y, max_x, max_y, srs_id) VALUES ('cb_veg_veg_restinga_a', 'features','cb_veg_veg_restinga_a', 'Camada veg_veg_restinga_a da EDGV', NULL, NULL, NULL, NULL, 4326);INSERT into gpkg_geometry_columns VALUES ('cb_veg_veg_restinga_a', 'geom', 'MULTIPOLYGON', 4326, 0, 0 );CREATE TRIGGER "trigger_insert_feature_count_cb_veg_veg_restinga_a" AFTER INSERT ON "cb_veg_veg_restinga_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('cb_veg_veg_restinga_a'); END ;CREATE TRIGGER "trigger_delete_feature_count_cb_veg_veg_restinga_a" AFTER DELETE ON "cb_veg_veg_restinga_a" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('cb_veg_veg_restinga_a'); END ;