#*************************************************************************************#
#*        ESTE ARQUIVO É COMPILADO EM TEMPO DE EXECUÇÃO, QUANDO CLICADO NOS          *#
#*                        TOGLES QUE FAZEM USO DESTAS FUNÇÕES.                       *#
#*-----------------------------------------------------------------------------------*#
#*        A sigla MSTN significa Mapeamento Sistemático do Território Nacional       *#
#*************************************************************************************#

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*  <<<<<<<<<<<<   P R I O R I D A D E S    D A     T O P O L O G I A   >>>>>>>>>>   *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_definir_prioridade_classes(VAC   vac_id)
BEGIN
     integer  st;

     # ****** PRIORIDADE 40 #

     st := goth_printf(frame_stdout, "\nDefinindo Prioridades...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "limitegeografico", 40);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ****** PRIORIDADE 38 #

     st := Definir_prioridade(vac_id, "Pto_Ref_Geod_Topo", 38);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Pto_Controle", 38);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Marco_De_Limite", 38);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ****** PRIORIDADE 36 #

     st := Definir_prioridade(vac_id, "Pais", 36);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ****** PRIORIDADE 34 #

     st := Definir_prioridade(vac_id, "Unidade_Federacao", 34);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ****** PRIORIDADE 32 #

     st := Definir_prioridade(vac_id, "Municipio", 32);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ****** PRIORIDADE 26 #

     st := Definir_prioridade(vac_id, "Entroncamento", 26);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Passagem_Nivel", 26);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Tunel", 26);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Ponte", 26);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Passag_Elevada_Viaduto", 26);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Travessia_Pedestre", 26);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Barragem", 26);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Quebramar_Molhe", 26);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ******* PRIORIDADE 22 #

     st := Definir_prioridade(vac_id, "Limite_Massa_Dagua", 22);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Trecho_Massa_Dagua", 22);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ******* PRIORIDADE 20 #

     st := Definir_prioridade(vac_id, "Massa_Dagua", 20);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Trecho_Drenagem", 20);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ******* PRIORIDADE 18 #

     st := Definir_prioridade(vac_id, "Trecho_Ferroviario", 18);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Trecho_Rodoviario", 18);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ******* PRIORIDADE 16 #

     st := Definir_prioridade(vac_id, "Arruamento", 16);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Subest_Transm_Energ_Eletr", 16);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Est_Gerad_Energia_Eletr", 16);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Hidreletrica", 16);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Termeletrica", 16);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Edif_Abast_Agua", 16);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Edif_Saneamento", 16);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ******* PRIORIDADE 14 #

     st := Definir_prioridade(vac_id, "Torre_Energia", 14);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Torre_Comunic", 14);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Trecho_Energia", 14);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Trecho_Comunic", 14);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Trecho_Duto", 14);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ******* PRIORIDADE 12 #

     st := Definir_prioridade(vac_id, "Alter_Fisiog_Antropica", 12);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Elemento_Fisiog_Natural", 12);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Limite_Area_Especial", 12);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Limite_Politico_Adm", 12);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ******* PRIORIDADE 10 #

     st := Definir_prioridade(vac_id, "Pista_Competicao", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Trilha_Picada", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Travessia", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Galeria_Bueiro", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Patio", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Delimitacao_Fisica", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Dep_Saneamento", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Area_Pub_Militar", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Unidade_Uso_Sustentavel", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Unid_Protecao_Integral", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Outras_Unid_Protegidas", 10);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ******* PRIORIDADE 8 #

     st := Definir_prioridade(vac_id, "Curva_Nivel", 8);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Curva_Forma", 8);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := Definir_prioridade(vac_id, "Curva_Batimetrica", 8);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # ******* PRIORIDADE 4 #

     st := Definir_prioridade(vac_id, "Ext_Mineral", 4);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*        <<<<<<<<<<<<      M E T O D O S       D I S P L A Y      >>>>>>>>>>        *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_criar_e_setar_comportamentos_display(VAC   vac_id)
BEGIN
     integer        st, i, num_classes;
     string         class_name;
     COLLECTION     classes_coln_id;

     st := goth_printf(frame_stdout, "\nDefinindo Metodos e Comportamentos Display...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "EDGV_MODELO");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "EDGV_OUTRAS");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          #st:= goth_printf(frame_stdout, "instal=%s\n", class_name);#

          st := meta_define_value(vac_id,
                                  class_name,
                                  "DSG_EDGV_Representar_Edicao_P1",
                                  "",
                                  META_SCOPE_LOCAL,
                                  DT_BOOLEAN,
                                  DDT_INVALID,
                                  MVT_SINGLE,
                                  MST_METHOD,
                                  4,
                                  "plot_id",DT_DESCRIPTOR,
                                  "overlay_index",DT_INTEGER,
                                  "colour_model",DT_INTEGER,
                                  "draw",DT_BOOLEAN);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "DSG_EDGV_Representar_Edicao_P1",
                                      "DSG_EDGV_Representar_Edicao_P1",
                                      0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_clear_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # seta os comportamentos para cada classe, conforme necessário #
     st := coln_add_element_to_set(classes_coln_id, "AREA_DELIMITADORA");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "EDIFICACAO");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # Limites #
     st := coln_add_element_to_set(classes_coln_id, "Marco_De_Limite");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Delimitacao_Fisica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Linha_De_Limite");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Politico_Adm");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Area_Especial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Especial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # Sist Transp #
     st := coln_add_element_to_set(classes_coln_id, "Ponto_Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Passagem_Nivel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Cremalheira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Girador_Ferroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Metro_Ferroviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Identific_Trecho_Rod");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Obstaculo_Navegacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Sinalizacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Hidroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Hidroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Eclusa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Atracadouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Fundeadouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Constr_Portuaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Const_Aeroportuaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pista_Ponto_Pouso");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Condutor_Hidrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Local_Critico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Ferroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Rodoviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Arruamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ciclovia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponte_Pass_Elevada_Viaduto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trilha_Picada");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Galeria_Bueiro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Rodoviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Posto_Combustivel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Rodoviario_Ferrov");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Patio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Caminho_Aereo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Funicular");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Faixa_Seguranca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Entroncamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Tunel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Travessia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Travessia_Pedestre");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # Localidade #
     st := coln_add_element_to_set(classes_coln_id, "Hab_Indigena");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Habitacional");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edificacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Edificada");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Nome_Local");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Aglomerado_Rural");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Cidade");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Vila");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Urbana_Cidade");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Urbana_Isolada_Vila");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # Pontos ref... #
     st := coln_add_element_to_set(classes_coln_id, "Pto_Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pto_Ref_Geod_Topo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pto_Controle");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # Saude e Sv... #
     st := coln_add_element_to_set(classes_coln_id, "Edif_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # Ab agua e san bas... #
     st := coln_add_element_to_set(classes_coln_id, "Dep_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Dep_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Cemiterio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # Educ e cult... #
     st := coln_add_element_to_set(classes_coln_id, "Edif_Const_Turistica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Const_Lazer");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ruina");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Piscina");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Campo_Quadra");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Arquibancada");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Coreto_Tribuna");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pista_Competicao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Turistico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # vegetacao #
     st := coln_add_element_to_set(classes_coln_id, "Campo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Veg_Cultivada");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Mangue");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Floresta");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Veg_Desconhecida");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Brejo_Pantano");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Cerrado_Cerradao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Macega_Chavascal");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Caatinga");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Veg_Restinga");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estepe");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Campinarana");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Veg_Area_Contato");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # Estrutura Econômina #
     st := coln_add_element_to_set(classes_coln_id, "Edif_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Deposito_Geral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Equip_Agropec");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Plataforma");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # Hidrografia #
     st := coln_add_element_to_set(classes_coln_id, "Area_Umida");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Banco_Areia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Barragem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Recife");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Quebramar_Molhe");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Rocha_Em_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ilha");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Natureza_Fundo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Reservatorio_Hidrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Terreno_Suj_Inundacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Massa_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Fonte_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Drenagem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Inicio_Drenagem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Confluencia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Massa_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Drenagem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Bacia_Hidrografica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Comporta");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Foz_Maritima");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Sumidouro_Vertedouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Queda_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Corredeira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # Relevo #
     st := coln_add_element_to_set(classes_coln_id, "Gruta_Caverna");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Cotado_Altimetrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Cotado_Batimetrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Terreno_Exposto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curva_Nivel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curva_Forma");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curva_Batimetrica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Dolina");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Duna");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Rocha");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Elemento_Fisiog_Natural");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Alter_Fisiog_Antropica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # ENERGIA_E_COMUNICACOES #
     st := coln_add_element_to_set(classes_coln_id, "Edif_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Gerad_Energia_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Grupo_Transform_Energ");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Torre_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Zona_Linhas_Energia_Com");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Antena_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Torre_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Trecho_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # ADMINISTRACAO_PUBLICA #
     st := coln_add_element_to_set(classes_coln_id, "Edif_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # TOPONIMIA #
     st := coln_add_element_to_set(classes_coln_id, "Simb_Curva_Mestra");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Hidrografia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Corred_Queda_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Ferroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Hidroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Rodoviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Limite_Politico_Adm");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Limite_Area_Especial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Bandeira_Edif");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Vegetacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Texto_Generico_Edicao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Texto_Generico_Edicao_Mini");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Area_Ag_Extr_V_Pesc");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Elemento_Fisiog_Nat");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Ilha");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Area_Uso_Comunit_TI");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Terra_Publica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Unidades_Protegidas");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Area_Particular");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Sentido_Corrente");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Linha_Generica_Edicao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Generica_Edicao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     #DESCONTINUIDADE_GEOMETRIA#
     st := coln_add_element_to_set(classes_coln_id, "DESCONTINUIDADE_GEOMETRIA");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st:= goth_printf(frame_stdout, "instal=%s\n", class_name);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "DSG_EDGV_Representar_Edicao_P1",
                                      "DSG_EDGV_Rep_Edi_P1_" + class_name,
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     # agora, inserir as classes que tdas possuem um mesmo comportamento #
     st := coln_clear_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Instituicao_Publica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Lazer");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Comunicacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Gerad_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Subest_Transm_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Comerc_Serv");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Habitacional");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estrut_Transporte");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     #st := coln_add_element_to_set(classes_coln_id, "Trecho_Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);#

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          #st:= goth_printf(frame_stdout, "instal=%s\n", class_name);#

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "DSG_EDGV_Representar_Edicao_P1",
                                      "DSG_EDGV_Rep_Edi_P1_Complexo",
                                      0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     # agora, inserir as classes que possuem a parte 2 #
     st := coln_clear_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pista_Competicao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Massa_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Arruamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Rodoviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          #st:= goth_printf(frame_stdout, "instal=%s\n", class_name);#

          st := meta_define_value(vac_id,
                                  class_name,
                                  "DSG_EDGV_Representar_Edicao_P2",
                                  "",
                                  META_SCOPE_LOCAL,
                                  DT_BOOLEAN,
                                  DDT_INVALID,
                                  MVT_SINGLE,
                                  MST_METHOD,
                                  4,
                                  "plot_id",DT_DESCRIPTOR,
                                  "overlay_index",DT_INTEGER,
                                  "colour_model",DT_INTEGER,
                                  "draw",DT_BOOLEAN);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "DSG_EDGV_Representar_Edicao_P2",
                                      "DSG_EDGV_Rep_Edi_P2_" + class_name,
                                      0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # agora as classes com situacoes particulares #

     st := meta_define_value(vac_id,
                             "Curva_Nivel",
                             "DSG_EDGV_Representar_Edicao_P1_Eqd",
                             "",
                             META_SCOPE_LOCAL,
                             DT_BOOLEAN,
                             DDT_INVALID,
                             MVT_SINGLE,
                             MST_METHOD,
                             4,
                             "plot_id",DT_DESCRIPTOR,
                             "overlay_index",DT_INTEGER,
                             "colour_model",DT_INTEGER,
                             "draw",DT_BOOLEAN);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_behaviour(vac_id,
                                 "Curva_Nivel",
                                 "DSG_EDGV_Representar_Edicao_P1_Eqd",
                                 "DSG_EDGV_Rep_Edi_P1_Curva_Nivel_Eqd",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_value(vac_id,
                             "Trecho_Rodoviario",
                             "DSG_EDGV_Representar_Validacao_Cores_P1",
                             "",
                             META_SCOPE_LOCAL,
                             DT_BOOLEAN,
                             DDT_INVALID,
                             MVT_SINGLE,
                             MST_METHOD,
                             4,
                             "plot_id",DT_DESCRIPTOR,
                             "overlay_index",DT_INTEGER,
                             "colour_model",DT_INTEGER,
                             "draw",DT_BOOLEAN);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_behaviour(vac_id,
                                 "Trecho_Rodoviario",
                                 "DSG_EDGV_Representar_Validacao_Cores_P1",
                                 "DSG_EDGV_Rep_Val_P1_Trecho_Rodoviario",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_value(vac_id,
                             "Trecho_Rodoviario",
                             "DSG_EDGV_Representar_Edicao_P3",
                             "",
                             META_SCOPE_LOCAL,
                             DT_BOOLEAN,
                             DDT_INVALID,
                             MVT_SINGLE,
                             MST_METHOD,
                             4,
                             "plot_id",DT_DESCRIPTOR,
                             "overlay_index",DT_INTEGER,
                             "colour_model",DT_INTEGER,
                             "draw",DT_BOOLEAN);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_behaviour(vac_id,
                                 "Trecho_Rodoviario",
                                 "DSG_EDGV_Representar_Edicao_P3",
                                 "DSG_EDGV_Rep_Edi_P3_Trecho_Rodoviario",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_value(vac_id,
                             "Trecho_Rodoviario",
                             "DSG_EDGV_Representar_Edicao_P4",
                             "",
                             META_SCOPE_LOCAL,
                             DT_BOOLEAN,
                             DDT_INVALID,
                             MVT_SINGLE,
                             MST_METHOD,
                             4,
                             "plot_id",DT_DESCRIPTOR,
                             "overlay_index",DT_INTEGER,
                             "colour_model",DT_INTEGER,
                             "draw",DT_BOOLEAN);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_behaviour(vac_id,
                                 "Trecho_Rodoviario",
                                 "DSG_EDGV_Representar_Edicao_P4",
                                 "DSG_EDGV_Rep_Edi_P4_Trecho_Rodoviario",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_value(vac_id,
                             "Trecho_Rodoviario",
                             "DSG_EDGV_Representar_Edicao_P5",
                             "",
                             META_SCOPE_LOCAL,
                             DT_BOOLEAN,
                             DDT_INVALID,
                             MVT_SINGLE,
                             MST_METHOD,
                             4,
                             "plot_id",DT_DESCRIPTOR,
                             "overlay_index",DT_INTEGER,
                             "colour_model",DT_INTEGER,
                             "draw",DT_BOOLEAN);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_behaviour(vac_id,
                                 "Trecho_Rodoviario",
                                 "DSG_EDGV_Representar_Edicao_P5",
                                 "DSG_EDGV_Rep_Edi_P5_Trecho_Rodoviario",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_value(vac_id,
                             "Trecho_Rodoviario",
                             "DSG_EDGV_Representar_Edicao_P6",
                             "",
                             META_SCOPE_LOCAL,
                             DT_BOOLEAN,
                             DDT_INVALID,
                             MVT_SINGLE,
                             MST_METHOD,
                             4,
                             "plot_id",DT_DESCRIPTOR,
                             "overlay_index",DT_INTEGER,
                             "colour_model",DT_INTEGER,
                             "draw",DT_BOOLEAN);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_behaviour(vac_id,
                                 "Trecho_Rodoviario",
                                 "DSG_EDGV_Representar_Edicao_P6",
                                 "DSG_EDGV_Rep_Edi_P6_Trecho_Rodoviario",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_value(vac_id,
                             "Trecho_Rodoviario",
                             "DSG_EDGV_Representar_Edicao_P7",
                             "",
                             META_SCOPE_LOCAL,
                             DT_BOOLEAN,
                             DDT_INVALID,
                             MVT_SINGLE,
                             MST_METHOD,
                             4,
                             "plot_id",DT_DESCRIPTOR,
                             "overlay_index",DT_INTEGER,
                             "colour_model",DT_INTEGER,
                             "draw",DT_BOOLEAN);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_behaviour(vac_id,
                                 "Trecho_Rodoviario",
                                 "DSG_EDGV_Representar_Edicao_P7",
                                 "DSG_EDGV_Rep_Edi_P7_Trecho_Rodoviario",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_value(vac_id,
                             "Isolinha_Hipsografica",
                             "DSG_EDGV_Representar_Validacao_Cores_P1",
                             "",
                             META_SCOPE_LOCAL,
                             DT_BOOLEAN,
                             DDT_INVALID,
                             MVT_SINGLE,
                             MST_METHOD,
                             4,
                             "plot_id",DT_DESCRIPTOR,
                             "overlay_index",DT_INTEGER,
                             "colour_model",DT_INTEGER,
                             "draw",DT_BOOLEAN);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_behaviour(vac_id,
                                 "Isolinha_Hipsografica",
                                 "DSG_EDGV_Representar_Validacao_Cores_P1",
                                 "DSG_EDGV_Rep_Val_P1_Isolinha_Hipsografica",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*       <<<<<<<<<<<<   M E T O D O S     C O N S T R U C T O R   >>>>>>>>>>         *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_alterar_comportamentos_constructor(VAC   vac_id)
BEGIN
     integer     st, i, num_classes, class_ids[0];
     string      class_name;
     COLLECTION  classes_coln_id;
     boolean     existe;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos Constructor...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_get_classes_with_value(vac_id, "fkClassificador", num_classes, class_ids);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := meta_get_class_name_from_id(vac_id, class_ids[i], class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_check_class_has_method(vac_id,
                                            class_name,
                                            "constructor",
                                            existe);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          if existe then
          begin
               st := meta_define_behaviour(vac_id,
                                           class_name,
                                           "constructor",
                                           "DSG_EDGV_Default_constructor",
                                            0,0,0);
               if (st != GOTH__NORMAL) then return error_report_status(st);
          end;

          i := i + 1;
     end;

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Classificador_Orig_Prec_Acur");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pto_Geod_Topo_Controle");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Cotado_Altimetrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Cotado_Batimetrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Rodoviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Ferrea");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Habitacional");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Aldeia_Indigena");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Aeroportuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Portuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Comunicacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Lazer");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Gerad_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estrut_Apoio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Frigorifico_Matadouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Hidrovia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Madeireira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Comerc_Serv");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Subest_Transm_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Texto_Generico_Edicao_Mini");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "constructor",
                                      "DSG_EDGV_" + class_name + "_constructor",
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*       <<<<<<<<<<<<   M E T O D O S     C O N S T R U C T O R   >>>>>>>>>>         *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_alterar_comportamentos_pre_pos_modify(VAC   vac_id)
BEGIN
     integer  st, i, num_classes, class_ids[0];
     string   class_name;
     COLLECTION  classes_coln_id;
     boolean  existe;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos Pre_Modify e Post_Modify...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_get_classes_with_value(vac_id, "fkClassificador", num_classes, class_ids);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := meta_get_class_name_from_id(vac_id, class_ids[i], class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_check_class_has_method(vac_id,
                                            class_name,
                                            "pre_modify",
                                            existe);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          if existe then
          begin
               st := meta_define_behaviour(vac_id,
                                           class_name,
                                           "pre_modify",
                                           "DSG_EDGV_Default_pre_modify",
                                            0,0,0);
               if (st != GOTH__NORMAL) then return error_report_status(st);

               st := meta_define_behaviour(vac_id,
                                           class_name,
                                           "post_modify",
                                           "DSG_EDGV_Default_post_modify",
                                            0,0,0);
               if (st != GOTH__NORMAL) then return error_report_status(st);
          end;

          i := i + 1;
     end;

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Rodoviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Ferrea");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Habitacional");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Aldeia_Indigena");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Aeroportuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Portuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Comunicacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Lazer");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Gerad_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estrut_Apoio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Frigorifico_Matadouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Hidrovia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Madeireira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Comerc_Serv");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Subest_Transm_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "pre_modify",
                                      "DSG_EDGV_Default_pre_modify",  # serve para todas as classes da EDGV #
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "post_modify",
                                      "DSG_EDGV_" + class_name + "_post_modify",
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_clear_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Classificador_Orig_Prec_Acur");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "pre_modify",
                                      "DSG_EDGV_" + class_name + "_pre_modify",
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "post_modify",
                                      "DSG_EDGV_" + class_name + "_post_modify",
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*        <<<<<<<<<<<<   M E T O D O S       P R E _ C O M M I T   >>>>>>>>>>        *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_alterar_comportamentos_pre_commit(VAC   vac_id)
BEGIN
     integer        st, i, num_classes;
     string         class_name;
     COLLECTION     classes_coln_id;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos Pre_Commit...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Bacia_Hidrografica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Massa_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Comporta");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Sumidouro_Vertedouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Queda_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Fonte_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Foz_Maritima");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Natureza_Fundo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Rocha_Em_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Recife");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Banco_Areia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Quebramar_Molhe");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Umida");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Reservatorio_Hidrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Elemento_Fisiografico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Funicular");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Caminho_Aereo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Patio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ciclovia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Arruamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trilha_Picada");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Girador_Ferroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Ferroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Cremalheira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Obstaculo_Navegacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Hidroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Sinalizacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Fundeadouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pista_Ponto_Pouso");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Local_Critico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Grupo_Transform_Energ");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Zona_Linhas_Energia_Com");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Torre");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Comunic_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Gerad_Energia_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Antena_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Cemiterio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Turistico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ruina");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Piscina");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Campo_Quadra");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pista_Competicao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Plataforma");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pto_Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Localidade");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Nome_Local");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Habitacional");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Urbana_Cidade");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Urbana_Isolada_Vila");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Edificada");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Transporte_Complexo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "EDIFICACAO");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Obra_Transporte");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Marco_De_Limite");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Delimitacao_Fisica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Particular");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Linha_De_Limite");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_De_Litigio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Politico_Adm");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Especial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Campo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Vegetacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "pre_commit",
                                      "DSG_EDGV_Generico_pre_commit", # serve para normalizar nome e nomeAbrev #
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     # limpa a colecao #
     st := coln_clear_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Classificador_Orig_Prec_Acur");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Barragem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Subest_Transm_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Gerad_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Hidreletrica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Termeletrica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Comunicacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Lazer");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Instituicao_Publica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Madeireira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Frigorifico_Matadouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Comerc_Serv");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estrut_Transporte");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Rodoviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estrut_Apoio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Ferrea");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Portuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Hidrovia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Aeroportuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Identific_Trecho_Rod");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Rodoviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Habitacional");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Aldeia_Indigena");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Entroncamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Passagem_Nivel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Galeria_Bueiro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Condutor_Hidrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Drenagem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Drenagem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Inicio_Drenagem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Confluencia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Massa_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Massa_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ilha");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Comunicacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Terreno_Suj_Inundacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Politico_Adm");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Terra_Indigena");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Corredeira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponte_Pass_Elevada_Viaduto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Tunel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Travessia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Veg_Cultivada");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Floresta");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estepe");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Veg_Desconhecida");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Curva_Mestra");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Hidrografia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Corred_Queda_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Ferroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Hidroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Rodoviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Limite_Politico_Adm");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Limite_Area_Especial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Bandeira_Edif");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Vegetacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Area_Ag_Extr_V_Pesc");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Elemento_Fisiog_Nat");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Ilha");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Area_Uso_Comunit_TI");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Terra_Publica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Unidades_Protegidas");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Area_Particular");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     #st := coln_add_element_to_set(classes_coln_id, "Sentido_Corrente");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);#

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "pre_commit",
                                      "DSG_EDGV_" + class_name + "_pre_commit",
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := meta_define_behaviour(vac_id,
                                 "_cotador_curva_nivel",
                                 "pre_commit",
                                 "MSTN_cotador_curva_nivel_pre_commit",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*        <<<<<<<<<<<<   M E T O D O S       G E O M E T R Y   >>>>>>>>>>            *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_alterar_comportamentos_geometry(VAC         vac_id,
                                                          boolean     definir) # se false irá remover #
BEGIN
     integer        st, i, num_classes, num_behaviours;
     string         class_name, fn_names[0];
     COLLECTION     classes_coln_id;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos Geometry...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Rodoviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Ferrea");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Hidrovia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estrut_Transporte");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Lazer");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Comerc_Serv");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Comunicacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Habitacional");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Subest_Transm_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Gerad_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          if (definir) then
          begin
               st := meta_define_behaviour(vac_id,
                                           class_name,
                                           "display_geometry",
                                           "DSG_EDGV_" + class_name + "_geometry",
                                           0,0,0);
               if (st != GOTH__NORMAL) then return error_report_status(st);

               # ao usar, prejudicou as funções de mover/rotacionar o bundle #
               st := meta_define_behaviour(vac_id,
                                           class_name,
                                           "get_geometry",
                                           "DSG_EDGV_" + class_name + "_geometry",
                                           0,0,0);
               if (st != GOTH__NORMAL) then return error_report_status(st);
          end;
          else # remover #
          begin
               # remove comportamento #
               st := meta_remove_behaviour(vac_id, class_name, "display_geometry", "DSG_EDGV_" + class_name + "_geometry");
               if (st != GOTH__NORMAL) then st := sch_clear_message_stack();

               st := meta_remove_behaviour(vac_id, class_name, "get_geometry", "DSG_EDGV_" + class_name + "_geometry");
               if (st != GOTH__NORMAL) then st := sch_clear_message_stack();

               #st := meta_get_behaviours(vac_id,
                                         class_name,
                                         "get_geometry",
                                         num_behaviours,
                                         fn_names);
               if (st != GOTH__NORMAL) then return error_report_status(st);

               while(num_behaviours > 0) do
               begin
                    if (fn_names[num_behaviours] == "DSG_EDGV_" + class_name + "_geometry") then
                    begin
                         st := meta_remove_behaviour(vac_id, class_name, "display_geometry", fn_names[num_behaviours]);
                         if (st != GOTH__NORMAL) then return error_report_status(st);

                         st := meta_remove_behaviour(vac_id, class_name, "get_geometry", fn_names[num_behaviours]);
                         if (st != GOTH__NORMAL) then st := sch_clear_message_stack();
                    end;

                    num_behaviours := num_behaviours - 1;
               end;#
          end;

          i := i + 1;
     end;

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*        <<<<<<<<<<<<   M E T O D O S       D E S T R U C T O R   >>>>>>>>>>        *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_alterar_comportamentos_destructor(VAC   vac_id)
BEGIN
     integer        st, i, num_classes;
     string         class_name;
     COLLECTION     classes_coln_id;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos Destructor...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Classificador_Orig_Prec_Acur");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     # o destructor de complexos está retornando erro. estudar o porque para habilitar #

     #st := coln_add_element_to_set(classes_coln_id, "Via_Rodoviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Ferrea");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Habitacional");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Aldeia_Indigena");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Aeroportuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Portuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Comunicacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Lazer");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Gerad_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estrut_Apoio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Frigorifico_Matadouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Hidrovia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Madeireira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Comerc_Serv");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Subest_Transm_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);#

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "destructor",
                                      "DSG_EDGV_" + class_name + "_destructor",
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_cria_metodo_retornar_atrib_fk_complexo(VAC   vac_id)
BEGIN
     integer        st, i, num_classes;
     string         class_name;
     COLLECTION     classes_coln_id;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos Destructor...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Rodoviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Ferrea");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Habitacional");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Aldeia_Indigena");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Aeroportuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Portuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Comunicacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Lazer");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Gerad_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estrut_Apoio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Frigorifico_Matadouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Hidrovia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Madeireira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Comerc_Serv");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Subest_Transm_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := definir_atributo_derivado(vac_id,
                                          class_name,
                                          "atribChaveFK",
                                          "string",
                                          "get_value",
                                          "atribChaveFK",
                                          "DSG_EDGV_atribChaveFK",
                                          false);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*        <<<<<<<<<<<<   M E T O D O S       M E R G E   >>>>>>>>>>                  *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_alterar_comportamentos_merge(VAC   vac_id)
BEGIN
     integer        st, i, num_classes;
     string         class_name;
     COLLECTION     classes_coln_id;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos Merge...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     #st := coln_add_element_to_set(classes_coln_id, "Pto_Geod_Topo_Controle");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);#

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "mrg_create_depend",
                                      "DSG_EDGV_" + class_name + "_mrg_create_depend",
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*    <<<<<<<<<<  M E T O D O S   R E S T R I C A O   E S P A C I A L  >>>>>>>>>>    *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_alterar_comportamentos_restrEsp(VAC vac_id)
BEGIN
     integer        st, i, num_classes;
     string         class_name;
     COLLECTION     classes_coln_id;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos restricaoEspacial...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_ab_agua_san_basico(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_adm_publica(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_educacao_cultura(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_energia_comunic(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_estrutura_econ(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_hidrografia(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_limites(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_localidade(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_pontos_referencia(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_relevo(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_saude_sv_social(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_sist_transp(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := restrEsp_add_classes_vegetacao(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "restricaoEspacial",
                                      "DSG_EDGV_" + class_name + "_restrEsp",
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*        <<<<<<<<<<<<   V A L O R E S      D E F A U L T >>>>>>>>>>>                *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_seta_valores_default_atributos(VAC   vac_id)
BEGIN
     integer  st;
     boolean  simbolizar;

     simbolizar := __DSG_ESC_REP_CEL >= 10;

     st := goth_printf(frame_stdout, "\nSetando valores default...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Classificador_Orig_Prec_Acur", "pkClassificador", "-0-", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Bacia_Hidrografica", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Drenagem", "dentroDePoligono", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Drenagem", "compartilhado", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Drenagem", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Drenagem", "regime", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Drenagem", "coincideComDentroDe", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Drenagem", "navegabilidade", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Drenagem", "eixoPrincipal", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Massa_Dagua", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Massa_Dagua", "tipoMassaDagua", 7, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Massa_Dagua", "regime", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Massa_Dagua", "salinidade", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Massa_Dagua", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Massa_Dagua", "tipoMassaDagua", 10, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Massa_Dagua", "regime", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Massa_Dagua", "salinidade", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Massa_Dagua", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Massa_Dagua", "tipoLimMassa", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Massa_Dagua", "materialPredominante", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Drenagem", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Drenagem", "relacionado", 13, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Barragem", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Barragem", "matConstr", 23, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Barragem", "usoPrincipal", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Comporta", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Sumidouro_Vertedouro", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Sumidouro_Vertedouro", "tipoSumVert", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Sumidouro_Vertedouro", "causa", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Queda_Dagua", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Queda_Dagua", "tipoQueda", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Fonte_Dagua", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Fonte_Dagua", "regime", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Fonte_Dagua", "tipoFonteDagua", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Fonte_Dagua", "qualidAgua", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Inicio_Drenagem", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Inicio_Drenagem", "nascente", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Foz_Maritima", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Confluencia", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Corredeira", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Natureza_Fundo", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Natureza_Fundo", "materialPredominante", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Rocha_Em_Agua", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Rocha_Em_Agua", "situacaoEmAgua", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Recife", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Recife", "tipoRecife", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Recife", "situaMare", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Recife", "situacaoCosta", 11, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Banco_Areia", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Banco_Areia", "materialPredominante", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Banco_Areia", "situacaoEmAgua", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Banco_Areia", "tipoBanco", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Quebramar_Molhe", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Quebramar_Molhe", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Quebramar_Molhe", "tipoQuebramarMolhe", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Terreno_Suj_Inundacao", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Umida", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Umida", "tipoAreaUmida", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Reservatorio_Hidrico", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Reservatorio_Hidrico", "usoPrincipal", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ilha", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ilha", "tipoElemNat", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "VEGETACAO", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campo", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campo", "tipoCampo", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campo", "ocorrenciaEm", 96, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Vegetacao", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Vegetacao", "denso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Natural", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Natural", "classificacaoPorte", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Natural", "denso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Natural", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Cultivada", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Cultivada", "classificacaoPorte", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Cultivada", "denso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Cultivada", "tipoLavoura", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Cultivada", "finalidade", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     #st := meta_set_value_default(vac_id, "Veg_Cultivada", "terreno", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);#

     st := meta_set_value_default(vac_id, "Veg_Cultivada", "cultivoPredominante", 96, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Desconhecida", "geometriaAproximada", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Mangue", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Mangue", "classificacaoPorte", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Mangue", "denso", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Mangue", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Brejo_Pantano", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Brejo_Pantano", "classificacaoPorte", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Brejo_Pantano", "denso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Brejo_Pantano", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Brejo_Pantano", "tipoBrejoPantano", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Restinga", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Restinga", "classificacaoPorte", 98, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Restinga", "denso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Restinga", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campinarana", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campinarana", "classificacaoPorte", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campinarana", "denso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campinarana", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Floresta", "geometriaAproximada", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Floresta", "classificacaoPorte", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Floresta", "denso", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Floresta", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Floresta", "caracteristicaFloresta", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Floresta", "especiePredominante", 96, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Macega_Chavascal", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Macega_Chavascal", "classificacaoPorte", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Macega_Chavascal", "denso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Macega_Chavascal", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Macega_Chavascal", "tipoMacChav", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cerrado_Cerradao", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cerrado_Cerradao", "classificacaoPorte", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cerrado_Cerradao", "denso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cerrado_Cerradao", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cerrado_Cerradao", "tipoCerr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Caatinga", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Caatinga", "classificacaoPorte", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Caatinga", "denso", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Caatinga", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Estepe", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Estepe", "classificacaoPorte", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Estepe", "denso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Estepe", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Curva_Nivel", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Curva_Nivel", "depressao", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Curva_Nivel", "indice", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Cotado_Altimetrico", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Cotado_Altimetrico", "cotaComprovada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Cotado_Altimetrico", "visivel", TRUE, FALSE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Cotado_Altimetrico", "justTxt", 1, FALSE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Cotado_Batimetrico", "visivel", TRUE, FALSE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Cotado_Batimetrico", "justTxt", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Elemento_Fisiografico", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Elemento_Fisiog_Natural", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Elemento_Fisiog_Natural", "tipoElemNat", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Alter_Fisiog_Antropica", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Alter_Fisiog_Antropica", "tipoAlterAntrop", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Terreno_Exposto", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Terreno_Exposto", "causaExposicao", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Terreno_Exposto", "tipoTerrExp", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dolina", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dolina", "tipoElemNat", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Duna", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Duna", "tipoElemNat", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Duna", "fixa", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Gruta_Caverna", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Gruta_Caverna", "tipoElemNat", 19, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pico", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pico", "tipoElemNat", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Rocha", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Rocha", "tipoElemNat", 21, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Area_Contato", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Area_Contato", "classificacaoPorte", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Area_Contato", "denso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Veg_Area_Contato", "antropizada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Estrut_Apoio", "modalUso", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Estrut_Apoio", "tipoEstrut", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Funicular", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Caminho_Aereo", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Caminho_Aereo", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Caminho_Aereo", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Caminho_Aereo", "tipoCaminhoAereo", 12, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Caminho_Aereo", "tipoUsoCaminhoAer", 21, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Patio", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Patio", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Patio", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Patio", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Patio", "modalUso", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Estrut_Transporte", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Faixa_Seguranca", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Travessia", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Travessia", "tipoTravessia", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Entroncamento", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Entroncamento", "tipoEntroncamento", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Passagem_Nivel", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Galeria_Bueiro", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Galeria_Bueiro", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Galeria_Bueiro", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Galeria_Bueiro", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte_Pass_Elevada_Viaduto", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte_Pass_Elevada_Viaduto", "matConstr", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte_Pass_Elevada_Viaduto", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte_Pass_Elevada_Viaduto", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte_Pass_Elevada_Viaduto", "modalUso", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte_Pass_Elevada_Viaduto", "posicaoPista", 13, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Travessia_Pedestre", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Travessia_Pedestre", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Travessia_Pedestre", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Travessia_Pedestre", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Travessia_Pedestre", "tipoTravessiaPed", 8, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Tunel", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Tunel", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Tunel", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Tunel", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Tunel", "modalUso", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Tunel", "posicaoPista", 13, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Rodoviaria", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Rodoviaria", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Rodoviaria", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Rodoviaria", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Rodoviaria", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Rodoviaria", "tipoEdifRod", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Combustivel", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Combustivel", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Combustivel", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Combustivel", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Combustivel", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Rodoviario", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Rodoviario", "tipoTrechoRod", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Rodoviario", "jurisdicao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Rodoviario", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Rodoviario", "revestimento", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Rodoviario", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Rodoviario", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Rodoviario", "trafego", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Rodoviario", "canteiroDivisorio", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Rodoviario", "nrFaixas", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Identific_Trecho_Rod", "simbolizar", false, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ciclovia", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ciclovia", "administracao", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ciclovia", "revestimento", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ciclovia", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ciclovia", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ciclovia", "trafego", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Arruamento", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Arruamento", "revestimento", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Arruamento", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Arruamento", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Arruamento", "trafego", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trilha_Picada", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Rodoviario_Ferrov", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Rodoviario_Ferrov", "relacionado", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Metro_Ferroviaria", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Metro_Ferroviaria", "matConstr", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Metro_Ferroviaria", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Metro_Ferroviaria", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Metro_Ferroviaria", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Metro_Ferroviaria", "funcaoEdifMetroFerrov", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Metro_Ferroviaria", "multimodal", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Girador_Ferroviario", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Girador_Ferroviario", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Girador_Ferroviario", "operacional", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Girador_Ferroviario", "situacaoFisica", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "jurisdicao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "bitola", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "eletrificada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "nrLinhas", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "emArruamento", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "posicaoRelativa", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Ferroviario", "tipoTrechoFerrov", 7, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cremalheira", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hidrovia", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Obstaculo_Navegacao", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Obstaculo_Navegacao", "situacaoEmAgua", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Obstaculo_Navegacao", "tipoObst", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Hidroviario", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Hidroviario", "regime", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Hidroviario", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Hidroviario", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Portuario", "tipoTransporte", 98, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Portuario", "tipoComplexoPortuario", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Sinalizacao", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Sinalizacao", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Sinalizacao", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Sinalizacao", "tipoSinal", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Eclusa", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Eclusa", "matConstr", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Eclusa", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Eclusa", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Hidroviario", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Hidroviario", "relacionado", 21, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Atracadouro", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Atracadouro", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Atracadouro", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Atracadouro", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Atracadouro", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Atracadouro", "tipoAtracad", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Fundeadouro", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Fundeadouro", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Fundeadouro", "destinacaoFundeadouro", 99, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Aeroportuaria", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Aeroportuaria", "matConstr", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Aeroportuaria", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Aeroportuaria", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Aeroportuaria", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Aeroportuaria", "tipoEdifAero", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Aeroportuario", "tipoComplAero", 23, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Aeroportuario", "classificacao", 10, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Ponto_Pouso", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Ponto_Pouso", "revestimento", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Ponto_Pouso", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Ponto_Pouso", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Ponto_Pouso", "tipoPista", 9, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Ponto_Pouso", "usoPista", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Ponto_Pouso", "homologacao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Duto", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Duto", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Duto", "matConstr", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Duto", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Duto", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Duto", "tipoTrechoDuto", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Duto", "setor", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Duto", "posicaoRelativa", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Duto", "matTransp", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Duto", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Local_Critico", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Local_Critico", "tipoLocalCrit", 7, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Gerad_Energ_Eletr", "tipoClasseCnae", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Energia", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Energia", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Energia", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Energia", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Energia", "tipoEdifEnergia", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Energia_Eletrica", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Zona_Linhas_Energia_Com", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre", "ovgd", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Energia", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Energia", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Energia", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Energia", "ovgd", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Energia", "tipoTorre", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Energia", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Comunic", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Comunic", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Comunic", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Comunic", "ovgd", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Comunic", "posicaoRelEdific", 14, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Torre_Comunic", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic_Energia", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic_Energia", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic_Energia", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic_Energia", "posicaoRelativa", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic_Energia", "emDuto", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Energia", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Energia", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Energia", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Energia", "posicaoRelativa", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Energia", "especie", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     #st := meta_set_value_default(vac_id, "Trecho_Energia", "emDuto", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);#

     st := meta_set_value_default(vac_id, "Trecho_Energia", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic", "posicaoRelativa", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic", "emDuto", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic", "tipoTrechoComunic", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Trecho_Comunic", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Trecho_Energia", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     #st := meta_set_value_default(vac_id, "Subest_Transm_Energ_Eletr", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Subest_Transm_Energ_Eletr", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Subest_Transm_Energ_Eletr", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);#

     st := meta_set_value_default(vac_id, "Subest_Transm_Energ_Eletr", "tipoClasseCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Subest_Transm_Energ_Eletr", "tipoOperativo", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Grupo_Transform_Energ", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Grupo_Transform_Energ", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Est_Gerad_Energia_Eletr", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Est_Gerad_Energia_Eletr", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Est_Gerad_Energia_Eletr", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Est_Gerad_Energia_Eletr", "tipoEstGerad", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Est_Gerad_Energia_Eletr", "destEnergElet", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hidreletrica", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hidreletrica", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hidreletrica", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hidreletrica", "tipoEstGerad", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hidreletrica", "destEnergElet", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Termeletrica", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Termeletrica", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Termeletrica", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Termeletrica", "tipoEstGerad", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Termeletrica", "destEnergElet", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Termeletrica", "tipoCombustivel", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Termeletrica", "combRenovavel", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Termeletrica", "tipoMaqTermica", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Termeletrica", "geracao", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Comunicacao", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Comunicacao", "tipoClasseCnae", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comunic", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comunic", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comunic", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comunic", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comunic", "modalidade", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comunic", "tipoEdifComunic", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Antena_Comunic", "posicaoRelEdific", 14, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Antena_Comunic", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Antena_Comunic", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Abast_Agua", "tipoClasseCnae", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Abast_Agua", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Abast_Agua", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Abast_Agua", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Abast_Agua", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Abast_Agua", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Abast_Agua", "tipoEdifAbast", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Abast_Agua", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Abast_Agua", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Abast_Agua", "finalidade", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Abast_Agua", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Abast_Agua", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Abast_Agua", "tipoDepAbast", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Abast_Agua", "situacaoAgua", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Abast_Agua", "construcao", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Saneamento", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Saneamento", "tipoClasseCnae", 34, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Saneamento", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Saneamento", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Saneamento", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Saneamento", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Saneamento", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Saneamento", "tipoEdifSaneam", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Saneamento", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Saneamento", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Saneamento", "finalidade", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Saneamento", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Saneamento", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Saneamento", "construcao", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Saneamento", "tipoDepSaneam", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Saneamento", "residuo", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Dep_Saneamento", "tipoResiduo", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cemiterio", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cemiterio", "tipoCemiterio", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Constr_Portuaria", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Constr_Portuaria", "matConstr", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Constr_Portuaria", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Constr_Portuaria", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Constr_Portuaria", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Constr_Portuaria", "tipoEdifPort", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Ensino", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Ensino", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Ensino", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Ensino", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Ensino", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Ensino", "tipoClasseCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Religiosa", "tipoClasseCnae", 35, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Religiosa", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Religiosa", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Religiosa", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Religiosa", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Religiosa", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Religiosa", "ensino", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Religiosa", "tipoEdifRelig", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Turistica", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Turistica", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Turistica", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Turistica", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Turistica", "ovgd", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Turistica", "tipoEdifTurist", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponto_Turistico", "tipoPontoTuristico", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Ruinas", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ruina", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ruina", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Lazer", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Lazer", "tipoDivisaoCnae", 92, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Complexo_Lazer", "tipoComplexoLazer", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Lazer", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Piscina", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Piscina", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Piscina", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Piscina", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Lazer", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Lazer", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Lazer", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Lazer", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Const_Lazer", "tipoEdifLazer", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campo_Quadra", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campo_Quadra", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campo_Quadra", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campo_Quadra", "tipoCampoQuadra", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Campo_Quadra", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Competicao", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Competicao", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Competicao", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Competicao", "tipoPista", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pista_Competicao", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Arquibancada", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Arquibancada", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Arquibancada", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Arquibancada", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Coreto_Tribuna", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Coreto_Tribuna", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Coreto_Tribuna", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Coreto_Tribuna", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Civil", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Civil", "tipoClasseCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Civil", "poderPublico", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Instituicao_Publica", "tipoGrupoCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Militar", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Militar", "tipoClasseCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Militar", "instituicao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Militar", "classificSigiloso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Pub_Militar", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Pub_Civil", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Civil", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Civil", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Civil", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Civil", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Civil", "tipoEdif", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Civil", "tipoUsoEdif", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Fiscal", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Fiscal", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Fiscal", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Fiscal", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Fiscal", "tipoEdif", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Fiscal", "tipoUsoEdif", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Pol_Rod", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Pol_Rod", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Pol_Rod", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Pol_Rod", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Pol_Rod", "tipoEdif", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Posto_Pol_Rod", "tipoUsoEdif", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Militar", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Militar", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Militar", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Militar", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Militar", "tipoEdif", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Pub_Militar", "tipoUsoEdif", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Comerc_Serv", "finalidade", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Comerc_Serv", "tipoDivisaoCnae", 55, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comerc_Serv", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comerc_Serv", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comerc_Serv", "finalidade", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comerc_Serv", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comerc_Serv", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Comerc_Serv", "tipoEdifComercServ", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Comerc_Serv", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Deposito_Geral", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Deposito_Geral", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Deposito_Geral", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Deposito_Geral", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Deposito_Geral", "tipoDepGeral", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Deposito_Geral", "tipoExposicao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Deposito_Geral", "tipoProdutoResiduo", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Deposito_Geral", "tipoConteudo", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Deposito_Geral", "unidadeVolume", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Deposito_Geral", "tratamento", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Ext_Mineral", "tipoProdutoResiduo", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Ext_Mineral", "tipoSecaoCnae", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Ext_Mineral", "tipoOrgExtMin", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Ext_Mineral", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Ext_Mineral", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Ext_Mineral", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Ext_Mineral", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Ext_Mineral", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Ext_Mineral", "tipoDivisaoCnae", 14, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ext_Mineral", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     
     st := meta_set_value_default(vac_id, "Ext_Mineral", "tipoSecaoCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ext_Mineral", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ext_Mineral", "situacaoFisica", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ext_Mineral", "tipoProdutoResiduo", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ext_Mineral", "tipoExtMin", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ext_Mineral", "tipoPocoMina", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ext_Mineral", "procExtracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ext_Mineral", "formaExtracao", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ext_Mineral", "atividade", 10, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Plataforma", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Plataforma", "tipoPlataforma", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Industrial", "tipoSecaoCnae", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Industrial", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Industrial", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Industrial", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Industrial", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Industrial", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Industrial", "tipoDivisaoCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Agrop_Ext_Veg_Pesca", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Agrop_Ext_Veg_Pesca", "destinadoA", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "tipoEdifAgropec", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Agrop_Ext_Veg_Pesca", "tipoDivisaoCnae", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Equip_Agropec", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Equip_Agropec", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Equip_Agropec", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Equip_Agropec", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Equip_Agropec", "tipoEquipAgropec", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Frigorifico_Matadouro", "tipoSecaoCnae", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Madeireira", "tipoSecaoCnae", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Saude", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Saude", "tipoGrupoCnae", 8, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Saude", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Saude", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Saude", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Saude", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Saude", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Saude", "tipoClasseCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Militar_Saude", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Militar_Saude", "tipoGrupoCnae", 8, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Militar_Saude", "tipoClasseCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Militar_Saude", "instituicao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Militar_Saude", "classificSigiloso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Saude", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Saude", "tipoGrupoCnae", 8, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Saude", "tipoClasseCnae", 7, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Saude", "poderPublico", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Servico_Social", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Servico_Social", "tipoGrupoCnae", 10, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Servico_Social", "poderPublico", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Servico_Social", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Servico_Social", "tipoGrupoCnae", 10, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Servico_Social", "tipoClasseCnae", 7, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Servico_Social", "poderPublico", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Servico_Social", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Servico_Social", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Servico_Social", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Servico_Social", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Servico_Social", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Servico_Social", "tipoClasseCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Geod_Topo_Controle", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Geod_Topo_Controle", "tipoRef", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Geod_Topo_Controle", "sistemaGeodesico", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Geod_Topo_Controle", "referencialAltim", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Ref_Geod_Topo", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Ref_Geod_Topo", "proximidade", 14, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Ref_Geod_Topo", "tipoRef", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Ref_Geod_Topo", "tipoPtoRefGeodTopo", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Ref_Geod_Topo", "rede", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Ref_Geod_Topo", "sistemaGeodesico", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Ref_Geod_Topo", "referencialAltim", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Ref_Geod_Topo", "referencialGrav", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Ref_Geod_Topo", "situacaoMarco", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Ref_Geod_Topo", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Controle", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Controle", "tipoRef", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Controle", "sistemaGeodesico", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Controle", "referencialAltim", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Controle", "tipoPtoControle", 9, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Controle", "materializado", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Controle", "escalaMaxSimbolizar", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Est_Med_Fenomenos", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Constr_Est_Med", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Constr_Est_Med", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Constr_Est_Med", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Constr_Est_Med", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Est_Med_Fenomenos", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pto_Est_Med_Fenomenos", "tipoPtoEstMed", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cidade", "tipoCidade", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cidade", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Cidade", "simbolizar", simbolizar, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Vila", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Vila", "simbolizar", simbolizar, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Aglomerado_Rural", "tipoAglomerado", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Aglomerado_Rural", "simbolizar", simbolizar, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Nome_Local", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Nome_Local", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edificacao", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edificacao", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edificacao", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edificacao", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Habitacional", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Habitacional", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Habitacional", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Edif_Habitacional", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Habitacional", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hab_Indigena", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hab_Indigena", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hab_Indigena", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hab_Indigena", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hab_Indigena", "coletiva", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Hab_Indigena", "isolada", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Urbana_Cidade", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Urbana_Isolada_Vila", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Edificada", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Ensino", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Ensino", "tipoGrupoCnae", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Militar_Ensino", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Militar_Ensino", "tipoGrupoCnae", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Militar_Ensino", "tipoClasseCnae", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Militar_Ensino", "instituicao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Militar_Ensino", "classificSigiloso", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Ensino", "administracao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Ensino", "tipoGrupoCnae", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Ensino", "tipoClasseCnae", 7, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Pub_Ensino", "poderPublico", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Religiosa_Ensino", "administracao", 15, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Religiosa_Ensino", "tipoGrupoCnae", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Org_Religiosa_Ensino", "tipoClasseCnae", 35, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Via_Transporte_Trecho", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Via_Transporte_Trecho", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Via_Transporte_Trecho", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Via_Transporte_Ponto", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "EDIFICACAO", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "EDIFICACAO", "matConstr", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "EDIFICACAO", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "EDIFICACAO", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "AREA_DELIMITADORA", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "AREA_DELIMITADORA", "escalaMaxSimbolizar", -1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Obra_Transporte", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Obra_Transporte", "matConstr", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Obra_Transporte", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Obra_Transporte", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Passag_Elevada_Viaduto", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Passag_Elevada_Viaduto", "matConstr", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Passag_Elevada_Viaduto", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Passag_Elevada_Viaduto", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Passag_Elevada_Viaduto", "modalUso", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Passag_Elevada_Viaduto", "posicaoPista", 13, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Passag_Elevada_Viaduto", "tipoPassagViad", 6, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Passag_Elevada_Viaduto", "necessidadeManutencao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte", "necessidadeManutencao", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte", "matConstr", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte", "modalUso", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte", "posicaoPista", 13, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Ponte", "tipoPonte", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "_Geometria_Aproximada", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Condutor_Hidrico", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Condutor_Hidrico", "matConstr", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Condutor_Hidrico", "operacional", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Condutor_Hidrico", "situacaoFisica", 5, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Condutor_Hidrico", "tipoTrechoDuto", 4, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Condutor_Hidrico", "setor", 1, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Condutor_Hidrico", "posicaoRelativa", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Condutor_Hidrico", "matTransp", 0, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "LIMITES", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Marco_De_Limite", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Delimitacao_Fisica", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Particular", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Linha_De_Limite", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Linha_De_Limite", "tipoRepresentacao", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Politico_Adm", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Politico_Adm", "tipoRepresentacao", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Intra_Munic_Adm", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Intra_Munic_Adm", "tipoRepresentacao", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Operacional", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Operacional", "tipoRepresentacao", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Outros_Limites_Oficiais", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Outros_Limites_Oficiais", "tipoRepresentacao", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Area_Especial", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Area_Especial", "tipoRepresentacao", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Particular", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Limite_Particular", "tipoRepresentacao", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_De_Litigio", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Politico_Adm", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Pais", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Unidade_Federacao", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Municipio", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Distrito", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Sub_Distrito", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Regiao_Administrativa", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Bairro", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Especial", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Terra_Publica", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Uso_Comunitario", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Terra_Indigena", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Area_Desenv_Controle", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Unidades_Protegidas", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Outras_Unid_Protegidas", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Unidade_Conservacao", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Unidade_Conserv_Nao_SNUC", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Unidade_Conservacao_SNUC", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Unidade_Uso_Sustentavel", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Unid_Protecao_Integral", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "limitegeografico", "geometriaAproximada", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Simb_Curva_Mestra", "repTipoTxt", 10, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Simb_Trecho_Ferroviario", "repTipoTxt", 3, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Simb_Trecho_Hidroviario", "repTipoTxt", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Simb_Trecho_Rodoviario", "repTipoTxt", 6, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Simb_Trecho_Duto", "repTipoTxt", 2, false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Simb_Limite_Politico_Adm", "repTipoTxt", 1, false); # Nome #
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Simb_Limite_Area_Especial", "repTipoTxt", 2, false); # Tracado #
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "Simb_Ext_Mineral", "repTipoTxt", 1, false); # Nome #
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_default(vac_id, "centroides", "tamanhoTxt", 50.0 * __DSG_ESC_REP_CEL, false); # Nome #
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#* <<<<<<<<<<<<<   M E T O D O S       V A L I D A T E   >>>>>>>>>>                  *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_alterar_comportamentos_validate(VAC   vac_id)
BEGIN
     integer        st, i, num_classes;
     string         class_name;
     COLLECTION     classes_coln_id;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos Validate...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # cria o método validate. Este método é nativo para as classes bases (simple_line, bundle...), #
     # mas para resolver o problema das classes abstratas que não herdam as classes bases, e #
     # portanto não possuiam este método, então ele foi criado. #

     st := meta_define_value(vac_id,
                             "_Geometria_Aproximada", # classe que contém atributo geometriaAproximada #
                             "validate",
                             "",
                             META_SCOPE_GLOBAL,
                             DT_STRING,
                             DDT_INVALID,
                             MVT_SINGLE,
                             MST_METHOD,
                             0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_set_value_reflex(vac_id,
                                 "_Geometria_Aproximada",
                                 "validate",
                                 "get_value",
                                 "validate",
                                 false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_define_behaviour(vac_id,
                                 "_Geometria_Aproximada",
                                 "validate",
                                 "DSG_EDGV__Geometria_Aproximada_validate",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "DESCONTINUIDADE_GEOMETRIA");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "EDIFICACAO");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "AREA_DELIMITADORA");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Bacia_Hidrografica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Curso_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Massa_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Massa_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Massa_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Drenagem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Drenagem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Barragem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Comporta");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Sumidouro_Vertedouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Queda_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Fonte_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Inicio_Drenagem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Foz_Maritima");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Confluencia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Corredeira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Natureza_Fundo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Rocha_Em_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Recife");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Banco_Areia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Quebramar_Molhe");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Terreno_Suj_Inundacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Umida");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Reservatorio_Hidrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ilha");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Vegetacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Veg_Natural");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Veg_Cultivada");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Floresta");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Veg_Desconhecida");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Macega_Chavascal");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Cerrado_Cerradao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Veg_Area_Contato");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Campo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Brejo_Pantano");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Isolinha_Hipsografica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curva_Nivel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curva_Forma");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curva_Batimetrica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Hipsometrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Cotado_Altimetrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Cotado_Batimetrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Elemento_Fisiografico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Elemento_Fisiog_Natural");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Alter_Fisiog_Antropica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Terreno_Exposto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Dolina");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Duna");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Gruta_Caverna");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Rocha");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Transporte_Complexo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Transporte_Trecho");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Rodoviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Rodoviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Rodoviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Posto_Combustivel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Identific_Trecho_Rod");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Rodoviario_Ferrov");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Travessia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Obra_Transporte");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Tunel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Galeria_Bueiro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponte_Pass_Elevada_Viaduto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Entroncamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Passagem_Nivel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponte");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Passag_Elevada_Viaduto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estrut_Transporte");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Estrut_Apoio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Patio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trilha_Picada");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ciclovia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Arruamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Travessia_Pedestre");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Ferrea");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Hidrovia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Ferroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Girador_Ferroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Metro_Ferroviaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Caminho_Aereo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Funicular");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Cremalheira");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Condutor_Hidrico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Local_Critico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Aeroportuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pista_Ponto_Pouso");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Const_Aeroportuaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Hidroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Hidroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Eclusa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Portuario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Constr_Portuaria");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Atracadouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Fundeadouro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Obstaculo_Navegacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Sinalizacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Faixa_Seguranca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Energia_Eletrica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Gerad_Energia_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Hidreletrica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Subest_Transm_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Grupo_Transform_Energ");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Gerad_Energ_Eletr");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Termeletrica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Trecho_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Comunic_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Zona_Linhas_Energia_Com");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Torre");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Torre_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Torre_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Comunicacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Antena_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Dep_Abast_Agua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Dep_Saneamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Cemiterio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Via_Transporte_Ponto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Religiosa_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Complexo_Lazer");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Const_Lazer");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Campo_Quadra");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Const_Turistica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ponto_Turistico");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ruina");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pista_Competicao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Piscina");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pto_Geod_Topo_Controle");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pto_Ref_Geod_Topo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pto_Controle");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pto_Est_Med_Fenomenos");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Servico_Social");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Instituicao_Publica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Posto_Fiscal");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Militar_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Posto_Pol_Rod");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Comerc_Serv");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Comerc_Serv");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Deposito_Geral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Plataforma");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Org_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Equip_Agropec");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Localidade");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Cidade");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Aglomerado_Rural");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Hab_Indigena");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Nome_Local");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Urbana_Cidade");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Urbana_Isolada_Vila");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Marco_De_Limite");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Linha_De_Limite");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Politico_Adm");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Operacional");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Outros_Limites_Oficiais");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Particular");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Particular");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Area_Especial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Intra_Munic_Adm");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Politico_Adm");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Pais");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Unidade_Federacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Municipio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Distrito");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Sub_Distrito");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Regiao_Administrativa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Bairro");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_De_Litigio");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Delimitacao_Fisica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Especial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Unidades_Protegidas");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Unidade_Conservacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Unidade_Conservacao_SNUC");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Unidade_Uso_Sustentavel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Unid_Protecao_Integral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Unidade_Conserv_Nao_SNUC");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Outras_Unid_Protegidas");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Terra_Publica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Uso_Comunitario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Desenv_Controle");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Terra_Indigena");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Curva_Mestra");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Hidrografia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Corred_Queda_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Ferroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Hidroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Rodoviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Trecho_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Limite_Politico_Adm");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Limite_Area_Especial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Bandeira_Edif");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Vegetacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Texto_Generico_Edicao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Texto_Generico_Edicao_Mini");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Area_Ag_Extr_V_Pesc");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Elemento_Fisiog_Nat");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Ilha");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Area_Uso_Comunit_TI");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Terra_Publica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Unidades_Protegidas");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Simb_Area_Particular");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Sentido_Corrente");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "validate",
                                      "DSG_EDGV_" + class_name + "_validate",
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*  <<<<<<<<<<<<<    O B J E C T       R E F L E X E S      >>>>>>>>>>               *#
#* <<<<<<<<<<<<<   M E T O D O S       D E P E N D E N C Y   >>>>>>>>>>              *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_alterar_comportamentos_dependency(VAC   vac_id)
BEGIN
     integer        st, i, j, class_id, num_classes, sub_class_ids[0];
     string         temas[15], class_name;
     COLLECTION     edgv_class_coln_id, support_class_coln_id, classes_coln_id;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos Dependency...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     temas[01] := "ABAST_AGUA_E_SANEAM_BASICO";
     temas[02] := "ADMINISTRACAO_PUBLICA";
     temas[03] := "AREA_DELIMITADORA";
     temas[04] := "EDIFICACAO";
     temas[05] := "EDUCACAO_E_CULTURA";
     temas[06] := "ENERGIA_E_COMUNICACOES";
     temas[07] := "ESTRUTURA_ECONOMICA";
     temas[08] := "HIDROGRAFIA";
     temas[09] := "LIMITES";
     temas[10] := "LOCALIDADE";
     temas[11] := "PONTOS_DE_REFERENCIA";
     temas[12] := "RELEVO";
     temas[13] := "SAUDE_E_SERVICO_SOCIAL";
     temas[14] := "SISTEMA_DE_TRANSPORTE";
     temas[15] := "VEGETACAO";

     st := coln_build_set(edgv_class_coln_id, DT_INTEGER, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_build_set(support_class_coln_id, DT_INTEGER, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= 15) do
     begin
          st := meta_get_class_id_from_name(vac_id, temas[i], class_id);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := coln_add_element_to_set(edgv_class_coln_id, class_id);
          if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

          # recupera todas as classes filhas e netas #
          num_classes := 0;
          st := meta_r_get_sub_classes_from_id(vac_id, class_id, num_classes, sub_class_ids);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          j := 1;
          while (j <= num_classes) do
          begin
               st := coln_add_element_to_set(edgv_class_coln_id, sub_class_ids[j]);
               if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

               j := j + 1;
          end;

          i := i + 1;
     end;

     # recupera todas as classes filhas de "support" #
     num_classes := 0;
     st := meta_get_sub_classes(vac_id, "support", num_classes, sub_class_ids);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     j := 1;
     while (j <= num_classes) do
     begin
          st := coln_add_element_to_set(support_class_coln_id, sub_class_ids[j]);
          if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

          j := j + 1;
     end;

     st := coln_combine_set(edgv_class_coln_id, support_class_coln_id, _COLN_AND, classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_destroy_collection(edgv_class_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_destroy_collection(support_class_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_id);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_get_class_name_from_id(vac_id, class_id, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "dependency",
                                      "DSG_EDGV_Default_dependency", # adiciona os "support-to-bundles" e "bundle-to-supports" #
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # **************************************************** #
     # criação de dependency para casos particulares #

     st := coln_build_set(classes_coln_id, DT_STRING, DDT_INVALID);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Especial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Rodoviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Arruamento");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trilha_Picada");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Ferroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Hidroviario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Duto");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Massa_Dagua");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Drenagem");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Curva_Nivel");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Trecho_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Limite_Politico_Adm");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Comunic");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Energia");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Ensino");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Industrial");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Pub_Civil");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Pub_Militar");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Religiosa");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Edif_Saude");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Campo");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Vegetacao");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Descontinuidade_Geom_VEG");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Agrop_Ext_Veg_Pesca");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ext_Mineral");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Elemento_Fisiog_Natural");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Ilha");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Uso_Comunitario");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Terra_Publica");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Unidades_Protegidas");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_add_element_to_set(classes_coln_id, "Area_Particular");
     if ((st != GOTH__NORMAL) and (st != GOTH__EXISTS)) then return error_report_status(st);

     st := coln_number_of_elements(classes_coln_id, num_classes);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     i := 1;
     while (i <= num_classes) do
     begin
          st := coln_get_value_of_element(classes_coln_id, CPT_POSITION, i, class_name);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          st := meta_define_behaviour(vac_id,
                                      class_name,
                                      "dependency",
                                      "DSG_EDGV_" + class_name + "_dependency",
                                       0,0,0);
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := coln_destroy_collection(classes_coln_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#* <<<<<<<<<<<<<   M E T O D O S    V I E W    C A T    D I S P L A Y    >>>>>>>>>>  *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_alterar_comportamentos_view_cat(VAC   vac_id)
BEGIN
     integer  st;

     st := goth_printf(frame_stdout, "\nAlterando Comportamentos das Vistas...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     #st := meta_define_behaviour(vac_id,
                                 "Veg_Terreno_Umido",
                                 "_cat_hidrografia",
                                 "MSTN_setar_view_false",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);#

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*  <<<<<<<<<   D E F I N I Ç Ã O      D E      R E F E R Ê N C I A S    >>>>>>>>>>  *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_definir_referencia_aux(VAC     vac_id,
                                                 string  class_name1,
                                                 string  ref_name1,
                                                 integer type_ref1,
                                                 string  class_name2,
                                                 string  ref_name2,
                                                 integer type_ref2)
BEGIN
     integer    st;
     boolean    exists;

     st := meta_check_pairing(vac_id,
                              class_name1, ref_name1,
                              class_name2, ref_name2,
                              exists);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     if (not exists) then
     begin
          st := meta_define_pair(vac_id, false,
                                 class_name1, ref_name1, type_ref1,
                                 class_name2, ref_name2, type_ref2);
          if (st != GOTH__NORMAL) then return error_report_status(st);
     end;

     return GOTH__NORMAL;
END;

function integer DSG_EDGV_definir_referencias_classes(VAC   vac_id)
BEGIN
     integer    st;

     st := goth_printf(frame_stdout, "\nCriando Referências...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);


     # AS REFERENCIAS DE METADADOS SÃO FEITAS NA CRIAÇÃO DAS CLASSES #
     #st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           temas[i], "classificado_por", MVT_SET,
                                           "Classificador_Orig_Prec_Acur", "classifica", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);#

     # auto-relacionamento #
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Pub_Civil", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Civil", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # estes já estão contemplados pelo auto relacionamento
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Pub_Ensino", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Civil", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Pub_Saude", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Civil", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);#

     # auto-relacionamento #
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Pub_Militar", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Militar", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # estes já estão contemplados pelo auto relacionamento
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Militar_Ensino", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Militar", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Militar_Saude", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Militar", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);#

     # auto-relacionamento #
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Religiosa", "adm_por", MVT_SINGLE,
                                           "Org_Religiosa", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # estes já estão contemplados pelo auto relacionamento
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Religiosa_Ensino", "adm_por", MVT_SINGLE,
                                           "Org_Religiosa", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Religiosa_Saude", "adm_por", MVT_SINGLE,
                                           "Org_Religiosa", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);#

     # auto-relacionamento #
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Saude", "adm_por", MVT_SINGLE,
                                           "Org_Saude", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # auto-relacionamento #
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Ensino", "adm_por", MVT_SINGLE,
                                           "Org_Ensino", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # auto-relacionamento #
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Industrial", "adm_por", MVT_SINGLE,
                                           "Org_Industrial", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Industrial", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Civil", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Industrial", "adm_por", MVT_SINGLE, # + Frigorifico_Matadouro + Madeireira #
                                           "Org_Pub_Militar", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Complexo_Gerad_Energ_Eletr", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Civil", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Complexo_Comunicacao", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Civil", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Complexo_Lazer", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Militar", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Complexo_Lazer", "adm_por", MVT_SINGLE,
                                           "Org_Pub_Civil", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Complexo_Lazer", "adm_por", MVT_SINGLE,
                                           "Org_Religiosa", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Org_Servico_Social", "adm_por", MVT_SINGLE,
                                           "Org_Religiosa", "administra", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Complexo_Abast_Agua", "pertence_a", MVT_SINGLE,
                                           "Org_Comerc_Serv", "pertencentes", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Complexo_Saneamento", "pertence_a", MVT_SINGLE,
                                           "Org_Comerc_Serv", "pertencentes", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Frigorifico_Matadouro", "pertence_a", MVT_SINGLE,
                                           "Org_Agrop_Ext_Veg_Pesca", "pertencentes", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Madeireira", "pertence_a", MVT_SINGLE,
                                           "Org_Agrop_Ext_Veg_Pesca", "pertencentes", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Area_Edificada", "pertence_a", MVT_SINGLE,
                                           "Localidade", "pertencentes", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Area_Urbana_Cidade", "pertence_a", MVT_SINGLE,
                                           "Cidade", "pertencentes", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Area_Urbana_Isolada_Vila", "pertence_a", MVT_SINGLE,
                                           "Vila", "pertencentes", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Area_De_Litigio", "reivindicada_por", MVT_SINGLE,
                                           "Area_Politico_Adm", "reivindica", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Edif_Pub_Civil", "sede_de", MVT_SINGLE,
                                           "Area_Especial", "edif_sede", MVT_SINGLE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Barragem", "Barragem_p_Trecho_Via", MVT_SINGLE,
                                           "Trecho_Rodoviario", "Trecho_Via_p_Barragem", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Barragem", "Barragem_p_Trecho_Via", MVT_SINGLE,
                                           "Trecho_Ferroviario", "Trecho_Via_p_Barragem", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Ponte_Pass_Elevada_Viaduto", "Passagem_p_Trecho_Via", MVT_SET,
                                           "Trecho_Rodoviario", "Trecho_Via_p_Passagem", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Ponte_Pass_Elevada_Viaduto", "Passagem_p_Trecho_Via", MVT_SET,
                                           "Trecho_Ferroviario", "Trecho_Via_p_Passagem", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Ponte_Pass_Elevada_Viaduto", "Passagem_p_Trecho_Via", MVT_SET,
                                           "Arruamento", "Trecho_Via_p_Passagem", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Tunel", "Passagem_p_Trecho_Via", MVT_SET,
                                           "Trecho_Rodoviario", "Trecho_Via_p_Passagem", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Tunel", "Passagem_p_Trecho_Via", MVT_SET,
                                           "Trecho_Ferroviario", "Trecho_Via_p_Passagem", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Tunel", "Passagem_p_Trecho_Via", MVT_SET,
                                           "Arruamento", "Trecho_Via_p_Passagem", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Travessia", "Travessia_p_Trecho_Via", MVT_SET,
                                           "Trecho_Rodoviario", "Trecho_Via_p_Travessia", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Travessia", "Travessia_p_Trecho_Via", MVT_SET,
                                           "Trilha_Picada", "Trecho_Via_p_Travessia", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Travessia", "Travessia_p_Trecho_Via", MVT_SET,
                                           "Arruamento", "Trecho_Via_p_Travessia", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     #st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Corredeira", "Corredeira_p_Hidro", MVT_SINGLE,
                                           "Trecho_Massa_Dagua", "Hidro_p_Corredeira_Queda", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);#

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Identific_Trecho_Rod", "IdtTrRod_p_TrRod", MVT_SINGLE,
                                           "Trecho_Rodoviario", "TrRod_p_IdtTrRod", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Curva_Mestra", "Simb_Curva_p_Curva_Nivel", MVT_SINGLE,
                                           "Curva_Nivel", "Curva_Nivel_p_Simb_Curva", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Hidrografia", "Simb_Hidrografia_p_Hidrografia", MVT_SINGLE,
                                           "Trecho_Drenagem", "Hidrografia_p_Simb_Hidrografia", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Hidrografia", "Simb_Hidrografia_p_Hidrografia", MVT_SINGLE,
                                           "Massa_Dagua", "Hidrografia_p_Simb_Hidrografia", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Corred_Queda_Dagua", "Simb_Corred_Queda_p_Corred_Queda", MVT_SINGLE,
                                           "Corredeira", "Corred_Queda_p_Simb_Corred_Queda", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Corred_Queda_Dagua", "Simb_Corred_Queda_p_Corred_Queda", MVT_SINGLE,
                                           "Queda_Dagua", "Corred_Queda_p_Simb_Corred_Queda", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Trecho_Ferroviario", "Simb_TrFerr_p_TrFerr", MVT_SINGLE,
                                           "Trecho_Ferroviario", "TrFerr_p_Simb_TrFerr", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Trecho_Hidroviario", "Simb_TrHid_p_TrHid", MVT_SINGLE,
                                           "Trecho_Hidroviario", "TrHid_p_Simb_TrHid", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Trecho_Rodoviario", "Simb_TrRod_p_TrRod", MVT_SINGLE,
                                           "Trecho_Rodoviario", "TrRod_p_Simb_TrRod", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Trecho_Duto", "Simb_TrDuto_p_TrDuto", MVT_SINGLE,
                                           "Trecho_Duto", "TrDuto_p_Simb_TrDuto", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Trecho_Energia", "Simb_TrEn_p_TrEn", MVT_SINGLE,
                                           "Trecho_Energia", "TrEn_p_Simb_TrEn", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Trecho_Comunic", "Simb_TrCom_p_TrCom", MVT_SINGLE,
                                           "Trecho_Comunic", "TrCom_p_Simb_TrCom", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # necessário para a linha, pois a área pode ter parte da geom aprox e parte precisa #
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Limite_Politico_Adm", "Simb_LimPol_p_LimPol", MVT_SINGLE,
                                           "Limite_Politico_Adm", "LimPol_p_Simb_LimPol", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # necessário para a linha, pois a área pode ter parte da geom aprox e parte precisa #
     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Limite_Area_Especial", "Simb_LimAreaEsp_p_LimAreaEsp", MVT_SINGLE,
                                           "Limite_Area_Especial", "LimAreaEsp_p_Simb_LimAreaEsp", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Bandeira_Edif", "Bandeira_Edif_p_Edif", MVT_SINGLE,
                                           "Edif_Comunic", "Edif_p_Bandeira_Edif", MVT_SINGLE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Bandeira_Edif", "Bandeira_Edif_p_Edif", MVT_SINGLE,
                                           "Edif_Energia", "Edif_p_Bandeira_Edif", MVT_SINGLE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Bandeira_Edif", "Bandeira_Edif_p_Edif", MVT_SINGLE,
                                           "Edif_Ensino", "Edif_p_Bandeira_Edif", MVT_SINGLE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Bandeira_Edif", "Bandeira_Edif_p_Edif", MVT_SINGLE,
                                           "Edif_Industrial", "Edif_p_Bandeira_Edif", MVT_SINGLE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Bandeira_Edif", "Bandeira_Edif_p_Edif", MVT_SINGLE,
                                           "Edif_Pub_Civil", "Edif_p_Bandeira_Edif", MVT_SINGLE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Bandeira_Edif", "Bandeira_Edif_p_Edif", MVT_SINGLE,
                                           "Edif_Pub_Militar", "Edif_p_Bandeira_Edif", MVT_SINGLE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Bandeira_Edif", "Bandeira_Edif_p_Edif", MVT_SINGLE,
                                           "Edif_Religiosa", "Edif_p_Bandeira_Edif", MVT_SINGLE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Bandeira_Edif", "Bandeira_Edif_p_Edif", MVT_SINGLE,
                                           "Edif_Saude", "Edif_p_Bandeira_Edif", MVT_SINGLE);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Vegetacao", "Simb_Veg_p_Vegetacao", MVT_SINGLE,
                                           "VEGETACAO", "Vegetacao_p_Simb_Veg", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Area_Ag_Extr_V_Pesc", "Simb_Area_Ag_Extr_V_Pesc_p_Area", MVT_SINGLE,
                                           "Area_Agrop_Ext_Veg_Pesca", "Area_Ag_Extr_V_Pesc_p_Simb", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Ext_Mineral", "Simb_ExtMin_p_ExtMin", MVT_SINGLE,
                                           "Ext_Mineral", "ExtMin_p_Simb_ExtMin", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Elemento_Fisiog_Nat", "Simb_ElemFisiogNat_p_Elem", MVT_SINGLE,
                                           "Elemento_Fisiog_Natural", "ElementoFisiogNat_p_Simb", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Ilha", "Simb_Ilha_p_Ilha", MVT_SINGLE,
                                           "Ilha", "Ilha_p_Simb_Ilha", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Area_Uso_Comunit_TI", "Simb_AreaUsoComunitTI_p_Area", MVT_SINGLE,
                                           "Area_Uso_Comunitario", "Area_Uso_Comunitario_p_Simb", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Terra_Publica", "Simb_TerraPub_p_TerraPub", MVT_SINGLE,
                                           "Terra_Publica", "Terra_Publica_p_Simb", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Unidades_Protegidas", "Simb_UnidProt_p_UnidProt", MVT_SINGLE,
                                           "Unidades_Protegidas", "Unidades_Protegidas_p_Simb", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := DSG_EDGV_definir_referencia_aux(vac_id,
                                           "Simb_Area_Particular", "Simb_AreaPartic_p_AreaPartic", MVT_SINGLE,
                                           "Area_Particular", "Area_Particular_p_Simb", MVT_SET);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*  <<<<<<<<<<<   C R I A Ç A O     D E     C L A S S E S     D E F   >>>>>>>>>>>    *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer DSG_EDGV_criar_classes(VAC   vac_id)
BEGIN
     integer  st, i;
     boolean  eh_global;
     string   temas[21];

     eh_global := true;

     st := goth_printf(frame_stdout, "\nCriando Classes, Heranças, Atributos...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # Classe de metadados #
     st := criar_classe(vac_id, "Classificador_Orig_Prec_Acur", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "identificadorObjeto", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "tipoInsumo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "nomeInsumo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "escalaInsumo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "dataInsumo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "produtorInsumo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "docFornecInsumo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "respTecnicoAquisicaoGeom", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "dataAquisicGeom", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "metodoAquisicGeom", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "versaoETEDGV", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "versaoETADGV", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "metodologiaAquisicao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "rms", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "papPcd", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "escalaMaxUtilizFeicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "comprovacaoCampo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "dataComprovacaoCampo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "finalidadeGeometria", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "fdatumHoriz", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "fdatumVert", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "geometriaAproximada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "observacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Classificador_Orig_Prec_Acur", "pkClassificador", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Classificador_Orig_Prec_Acur",
                                     "numClassificados",
                                     "integer",
                                     "get_value",
                                     "numClassificados",
                                     "DSG_EDGV_numClassificados",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # classes e atributos #
     st := criar_classe(vac_id, "EDGV_MODELO", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDGV_MODELO", "simbolizarCartaMini", "boolean", eh_global);	 
     if (st != GOTH__NORMAL) then return error_report_status(st);
	 st := definir_atributo_simples(vac_id, "EDGV_MODELO", "controleId", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st); #criando Controle ID para verificação de entrada de feições#
	 st := definir_atributo_simples(vac_id, "EDGV_MODELO", "obsAquisicao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st); #criando Observacaoes de Aquisição para trazer as observações apontadas nas fases pre Gothic no atributo observação#
     st := definir_atributo_derivado(vac_id,
                                     "EDGV_MODELO",
                                     "_display_carta_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_topografica",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := definir_atributo_derivado(vac_id,
                                     "EDGV_MODELO",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_false_mini_p_atrib_simbCartaMini", # setará conforme atributo, porem se nulo, seta para false #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "EDGV_OUTRAS", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "EDGV_OUTRAS",
                                     "_display_carta_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_topografica",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "DESCONTINUIDADE_GEOMETRIA", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "DESCONTINUIDADE_GEOMETRIA", "motivoDescontinuidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "DESCONTINUIDADE_GEOMETRIA",
                                     "_display_carta_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_topografica",
                                     "MSTN_setar_view_false",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_ADM", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_ASB", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_ECO", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_EDU", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_ENC", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_HID", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_LIM", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_LOC", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_PTO", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_REL", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_SAU", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_TRA", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Descontinuidade_Geom_VEG", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Nao_Mapeada", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Nao_Mapeada", "motivo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Area_Nao_Mapeada",
                                     "restricaoEspacial",
                                     "string",
                                     "get_value",
                                     "restricaoEspacial",
                                     "DSG_EDGV_default_restrEsp",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Area_Nao_Mapeada",
                                     "_display_carta_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_topografica",
                                     "MSTN_setar_view_false",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Objeto_Desconhecido", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Objeto_Desconhecido", "descricao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Objeto_Desconhecido",
                                     "_display_carta_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_topografica",
                                     "MSTN_setar_view_false",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # classes e atributos #
     st := criar_classe(vac_id, "HIDROGRAFIA", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Bacia_Hidrografica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Bacia_Hidrografica", "codigoOtto", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Bacia_Hidrografica", "nivelOtto", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Bacia_Hidrografica", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Bacia_Hidrografica", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Bacia_Hidrografica", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Bacia_Hidrografica", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Curso_Dagua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Curso_Dagua", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trecho_Curso_Dagua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Curso_Dagua", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Curso_Dagua", "fkComplCursoDagua", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trecho_Drenagem", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "regime", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "coincideComDentroDe", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "dentroDePoligono", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "compartilhado", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "navegabilidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "caladoMax", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "larguraMedia", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "velocidadeMedCorrente", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "profundidadeMedia", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "eixoPrincipal", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Drenagem", "fkComplTrCurDagua", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Trecho_Drenagem",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true_CI_Trecho_Drenagem",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Trecho_Drenagem",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_Trecho_Drenagem", # setará conforme atributo, porem se nulo, seta para true #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Massa_Dagua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Massa_Dagua", "tipoMassaDagua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Massa_Dagua", "regime", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Massa_Dagua", "salinidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Massa_Dagua",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Massa_Dagua",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_p_atrib_simbCartaMini",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trecho_Massa_Dagua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Massa_Dagua", "fkComplTrCurDagua", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Limite_Massa_Dagua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Massa_Dagua", "tipoLimMassa", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Massa_Dagua", "materialPredominante", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Massa_Dagua", "alturaMediaMargem", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Limite_Massa_Dagua",
                                     "listaClassesConexao",
                                     "COLLECTION",
                                     "get_value",
                                     "listaClassesConexao",
                                     "listaClassesConexao_contorno_de_HID",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponto_Drenagem", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Drenagem", "relacionado", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Barragem", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Barragem", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Barragem", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Barragem", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Barragem", "usoPrincipal", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Barragem", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Barragem", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Barragem", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Barragem", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Barragem", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Barragem", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Comporta", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Comporta", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Comporta", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Comporta", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Comporta", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Comporta", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Comporta", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Sumidouro_Vertedouro", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sumidouro_Vertedouro", "tipoSumVert", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sumidouro_Vertedouro", "causa", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sumidouro_Vertedouro", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sumidouro_Vertedouro", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sumidouro_Vertedouro", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sumidouro_Vertedouro", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Queda_Dagua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Queda_Dagua", "tipoQueda", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Queda_Dagua", "altura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Queda_Dagua", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Queda_Dagua", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Queda_Dagua", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Queda_Dagua", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Queda_Dagua", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Queda_Dagua",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true",  # fazer referencia e trocar aqui #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Fonte_Dagua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fonte_Dagua", "regime", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fonte_Dagua", "tipoFonteDagua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fonte_Dagua", "qualidAgua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fonte_Dagua", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fonte_Dagua", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fonte_Dagua", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fonte_Dagua", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fonte_Dagua", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fonte_Dagua", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fonte_Dagua", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponto_Inicio_Drenagem", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Inicio_Drenagem", "nascente", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Inicio_Drenagem", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Inicio_Drenagem", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Inicio_Drenagem", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Foz_Maritima", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Foz_Maritima", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Foz_Maritima", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Foz_Maritima", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Foz_Maritima", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Confluencia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Confluencia", "relacionado", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Confluencia", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Confluencia", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Confluencia", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Corredeira", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Corredeira", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Corredeira", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Corredeira", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Corredeira", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Corredeira", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Corredeira",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true", # fazer referencia e trocar aqui #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Natureza_Fundo", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Natureza_Fundo", "materialPredominante", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Natureza_Fundo", "espessAlgas", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Natureza_Fundo", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Natureza_Fundo", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Natureza_Fundo", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Natureza_Fundo", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Natureza_Fundo", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Rocha_Em_Agua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Rocha_Em_Agua", "situacaoEmAgua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Rocha_Em_Agua", "alturaLamina", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Rocha_Em_Agua", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Rocha_Em_Agua", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Rocha_Em_Agua", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Rocha_Em_Agua", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Rocha_Em_Agua", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Recife", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Recife", "tipoRecife", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Recife", "situaMare", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Recife", "situacaoCosta", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Recife", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Recife", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Recife", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Banco_Areia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Banco_Areia", "materialPredominante", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Banco_Areia", "situacaoEmAgua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Banco_Areia", "tipoBanco", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Banco_Areia", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Banco_Areia", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Banco_Areia", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Quebramar_Molhe", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Quebramar_Molhe", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Quebramar_Molhe", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Quebramar_Molhe", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Quebramar_Molhe", "situaMare", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Quebramar_Molhe", "tipoQuebramarMolhe", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Quebramar_Molhe", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Quebramar_Molhe", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Quebramar_Molhe", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Terreno_Suj_Inundacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Terreno_Suj_Inundacao", "periodicidadeInunda", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Umida", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Umida", "tipoAreaUmida", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Reservatorio_Hidrico", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Reservatorio_Hidrico", "usoPrincipal", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Reservatorio_Hidrico", "volumeUtil", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Reservatorio_Hidrico", "naMaximoMaximorum", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Reservatorio_Hidrico", "naMaximoOperacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Reservatorio_Hidrico", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Reservatorio_Hidrico", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Reservatorio_Hidrico", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Reservatorio_Hidrico", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ilha", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ilha", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ilha", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ilha", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "VEGETACAO", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "VEGETACAO",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_VEGETACAO",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Campo", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo", "tipoCampo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo", "ocorrenciaEm", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Vegetacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Vegetacao", "classificacaoPorte", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Vegetacao", "denso", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Vegetacao", "alturaMediaIndividuos", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Veg_Desconhecida", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Veg_Desconhecida", "antropizada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Veg_Natural", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Veg_Natural", "antropizada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Veg_Cultivada", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Veg_Cultivada", "tipoLavoura", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Veg_Cultivada", "finalidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Veg_Cultivada", "terreno", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Veg_Cultivada", "espacamentoIndividuos", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Veg_Cultivada", "espessuraDAP", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Veg_Cultivada", "cultivoPredominante", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Mangue", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Brejo_Pantano", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Brejo_Pantano", "tipoBrejoPantano", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Veg_Restinga", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Campinarana", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Floresta", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Floresta", "caracteristicaFloresta", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Floresta", "especiePredominante", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Macega_Chavascal", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Macega_Chavascal", "tipoMacChav", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Cerrado_Cerradao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cerrado_Cerradao", "tipoCerr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Caatinga", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Estepe", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "RELEVO", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Isolinha_Hipsografica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Isolinha_Hipsografica", "cotadaPorProcesso", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Isolinha_Hipsografica", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Isolinha_Hipsografica",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Isolinha_Hipsografica",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_false",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Curva_Nivel", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Curva_Nivel", "cota", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Curva_Nivel", "depressao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Curva_Nivel", "indice", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Curva_Nivel", "emMassaDagua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Curva_Nivel", "ordemTickDepressao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Curva_Forma", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Curva_Forma", "emMassaDagua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Curva_Forma", "cota", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Curva_Batimetrica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Curva_Batimetrica", "profundidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponto_Hipsometrico", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Hipsometrico", "visivel", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Hipsometrico", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Hipsometrico", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Hipsometrico", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponto_Cotado_Altimetrico", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Cotado_Altimetrico", "cota", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Cotado_Altimetrico", "cotaComprovada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Ponto_Cotado_Altimetrico",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponto_Cotado_Batimetrico", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Cotado_Batimetrico", "profundidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Elemento_Fisiografico", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Elemento_Fisiog_Natural", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Elemento_Fisiog_Natural", "tipoElemNat", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Elemento_Fisiog_Natural", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Elemento_Fisiog_Natural", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Elemento_Fisiog_Natural", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Elemento_Fisiog_Natural", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Alter_Fisiog_Antropica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Alter_Fisiog_Antropica", "tipoAlterAntrop", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Alter_Fisiog_Antropica", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Alter_Fisiog_Antropica", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Alter_Fisiog_Antropica", "offSet", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Alter_Fisiog_Antropica", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Terreno_Exposto", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Terreno_Exposto", "causaExposicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Terreno_Exposto", "tipoTerrExp", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Dolina", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Duna", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Duna", "fixa", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Gruta_Caverna", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Gruta_Caverna", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Gruta_Caverna", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Gruta_Caverna", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Gruta_Caverna", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Pico", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pico", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pico", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pico", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pico", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Rocha", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Veg_Area_Contato", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Veg_Area_Contato", "antropizada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "SISTEMA_DE_TRANSPORTE", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Estrut_Transporte", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Estrut_Transporte", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Estrut_Transporte", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Estrut_Transporte", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Estrut_Transporte", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Estrut_Apoio", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Estrut_Apoio", "modalUso", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Estrut_Apoio", "tipoEstrut", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Funicular", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Funicular", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Funicular", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Funicular", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Funicular", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Funicular", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Funicular", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Funicular", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Caminho_Aereo", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Caminho_Aereo", "tipoCaminhoAereo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Caminho_Aereo", "tipoUsoCaminhoAer", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Caminho_Aereo", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Caminho_Aereo", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Caminho_Aereo", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Caminho_Aereo", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Caminho_Aereo", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Caminho_Aereo", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Patio", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "modalUso", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplOrgRel", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplIndustria", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplOrgComSv", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplEstrApoio", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplAeroport", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplPortuario", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplOrgAgrop", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplOrgEnsino", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     #st := definir_atributo_simples(vac_id, "Patio", "fkComplOrgPub", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplMilitar", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "fkComplPubCivil", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);#
     st := definir_atributo_simples(vac_id, "Patio", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Patio", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Estrut_Transporte", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Estrut_Transporte", "fkComplEstrApoio", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Estrut_Transporte", "fkComplAeroport", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Estrut_Transporte", "fkComplPortuario", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Faixa_Seguranca", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Faixa_Seguranca", "largura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Faixa_Seguranca", "extensao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Travessia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Travessia", "tipoTravessia", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Travessia", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Travessia", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Travessia", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Travessia", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Entroncamento", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Entroncamento", "tipoEntroncamento", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Entroncamento", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Entroncamento", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Entroncamento", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Passagem_Nivel", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Passagem_Nivel", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Passagem_Nivel", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Passagem_Nivel", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Galeria_Bueiro", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Galeria_Bueiro", "pesoMaxSuportTon", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponte_Pass_Elevada_Viaduto", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte_Pass_Elevada_Viaduto", "modalUso", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte_Pass_Elevada_Viaduto", "largura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte_Pass_Elevada_Viaduto", "nrPistas", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte_Pass_Elevada_Viaduto", "nrFaixas", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte_Pass_Elevada_Viaduto", "posicaoPista", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte_Pass_Elevada_Viaduto", "extensao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte_Pass_Elevada_Viaduto", "vaoLivreHoriz", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte_Pass_Elevada_Viaduto", "vaoVertical", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte_Pass_Elevada_Viaduto", "pesoMaxSuportTon", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte_Pass_Elevada_Viaduto", "necessidadeManutencao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Ponte_Pass_Elevada_Viaduto",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true_CI_Ponte_Tunel_Viad",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Ponte_Pass_Elevada_Viaduto",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_por_referencia",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Travessia_Pedestre", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Travessia_Pedestre", "largura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Travessia_Pedestre", "extensao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Travessia_Pedestre", "tipoTravessiaPed", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Travessia_Pedestre", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Travessia_Pedestre", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Tunel", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Tunel", "altura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Tunel", "modalUso", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Tunel", "largura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Tunel", "nrPistas", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Tunel", "nrFaixas", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Tunel", "posicaoPista", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Tunel", "extensao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Tunel", "tipoTunel", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Tunel",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true_CI_Ponte_Tunel_Viad",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Tunel",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_por_referencia",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Subsistema_Rodoviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Via_Rodoviaria", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Via_Rodoviaria", "sigla", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Rodoviaria", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Rodoviaria", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Rodoviaria", "tipoEdifRod", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Rodoviaria", "fkComplEstrApoio", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Posto_Combustivel", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Posto_Combustivel", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Posto_Combustivel", "fkComplEstrApoio", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trecho_Rodoviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "codTrechoRodov", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "sigla", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "nome", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "tipoTrechoRod", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "jurisdicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "concessionaria", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "revestimento", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "nrFaixas", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "nrPistas", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "trafego", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "canteiroDivisorio", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "pesoMaxSuportTon", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "velocidadeMedia", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "fkComplRodovia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Rodoviario", "offSet", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Trecho_Rodoviario",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true_CI_Trecho_Rodoviario",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Trecho_Rodoviario",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_Trecho_Rodoviario",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Identific_Trecho_Rod", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Identific_Trecho_Rod", "sigla", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Identific_Trecho_Rod", "codTrechoRodov", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Identific_Trecho_Rod", "fkComplRodovia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Identific_Trecho_Rod", "simbolizar", "boolean", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Identific_Trecho_Rod", "repTipoTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Identific_Trecho_Rod", "offSet", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Identific_Trecho_Rod",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true_CI_por_referencia",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Identific_Trecho_Rod",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_Identific_Trecho_Rod",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ciclovia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ciclovia", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ciclovia", "revestimento", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ciclovia", "trafego", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Arruamento", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Arruamento", "revestimento", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Arruamento", "nrFaixas", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Arruamento", "trafego", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Arruamento", "canteiroDivisorio", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Arruamento", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trilha_Picada", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trilha_Picada", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponto_Rodoviario_Ferrov", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Rodoviario_Ferrov", "relacionado", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Rodoviario_Ferrov", "modalUso", "integer", eh_global);  # para poder diferenciar rodov de ferrov #
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Subsistema_Ferroviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Via_Ferrea", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Metro_Ferroviaria", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Metro_Ferroviaria", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Metro_Ferroviaria", "funcaoEdifMetroFerrov", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Metro_Ferroviaria", "multimodal", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Metro_Ferroviaria", "fkComplEstrApoio", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Girador_Ferroviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Girador_Ferroviario", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Girador_Ferroviario", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Girador_Ferroviario", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Girador_Ferroviario", "fkComplEstrApoio", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Girador_Ferroviario", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Girador_Ferroviario", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Girador_Ferroviario", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Girador_Ferroviario", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Girador_Ferroviario", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Girador_Ferroviario", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trecho_Ferroviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "jurisdicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "concessionaria", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "pesoMaxSuportTon", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "bitola", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "eletrificada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "nrLinhas", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "emArruamento", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "posicaoRelativa", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "codTrechoFerrov", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "tipoTrechoFerrov", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Ferroviario", "fkComplFerrovia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Trecho_Ferroviario",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Trecho_Ferroviario",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_p_atrib_simbCartaMini", # setará conforme atributo, porem se nulo, seta para true #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Cremalheira", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cremalheira", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cremalheira", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cremalheira", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cremalheira", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cremalheira", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cremalheira", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cremalheira", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cremalheira", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Subsistema_Hidroviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Hidrovia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Hidrovia", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Hidrovia", "extensaoTotal", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Obstaculo_Navegacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obstaculo_Navegacao", "situacaoEmAgua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obstaculo_Navegacao", "tipoObst", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obstaculo_Navegacao", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obstaculo_Navegacao", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obstaculo_Navegacao", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obstaculo_Navegacao", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obstaculo_Navegacao", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trecho_Hidroviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Hidroviario", "regime", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Hidroviario", "extensaoTrecho", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Hidroviario", "caladoMaxSeca", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Hidroviario", "fkComplHidrovia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Complexo_Portuario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Portuario", "tipoTransporte", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Portuario", "tipoComplexoPortuario", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Complexo_Portuario",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Sinalizacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sinalizacao", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sinalizacao", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sinalizacao", "tipoSinal", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sinalizacao", "fkComplHidrovia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sinalizacao", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sinalizacao", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sinalizacao", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sinalizacao", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sinalizacao", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Eclusa", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Eclusa", "largura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Eclusa", "extensao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Eclusa", "desnivel", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Eclusa", "calado", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponto_Hidroviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Hidroviario", "relacionado", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Atracadouro", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Atracadouro", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Atracadouro", "tipoAtracad", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Atracadouro", "fkComplPortuario", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Fundeadouro", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fundeadouro", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fundeadouro", "destinacaoFundeadouro", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fundeadouro", "fkComplPortuario", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fundeadouro", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fundeadouro", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fundeadouro", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fundeadouro", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fundeadouro", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Fundeadouro", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Subsistema_Aeroportuario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Subsistema_Aeroportuario",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_p_atrib_simbCartaMini", # setará conforme atributo, porem se nulo, seta para true #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Const_Aeroportuaria", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Const_Aeroportuaria", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Const_Aeroportuaria", "tipoEdifAero", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Const_Aeroportuaria", "fkComplAeroport", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Complexo_Aeroportuario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Aeroportuario", "indicador", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Aeroportuario", "siglaAero", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Aeroportuario", "tipoComplAero", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Aeroportuario", "classificacao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Aeroportuario", "latOficial", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Aeroportuario", "longOficial", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Aeroportuario", "latOficial_txt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Aeroportuario", "longOficial_txt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Aeroportuario", "altitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Complexo_Aeroportuario",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Pista_Ponto_Pouso", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "revestimento", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "largura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "extensao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "tipoPista", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "usoPista", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "homologacao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "fkComplAeroport", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Ponto_Pouso", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Subsistema_De_Dutos", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Duto", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Duto", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trecho_Duto", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Duto", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Duto", "tipoTrechoDuto", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Duto", "setor", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Duto", "posicaoRelativa", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Duto", "nrDutos", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Duto", "situacaoEspacial", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Duto", "matTransp", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Duto", "fkComplDuto", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponto_Duto", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Duto", "relacionado", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Local_Critico", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Local_Critico", "tipoLocalCrit", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Local_Critico", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Local_Critico", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Local_Critico", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Local_Critico", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "ENERGIA_E_COMUNICACOES", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Complexo_Gerad_Energ_Eletr", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Gerad_Energ_Eletr", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Gerad_Energ_Eletr", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Gerad_Energ_Eletr", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Gerad_Energ_Eletr", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Gerad_Energ_Eletr", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Energia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Energia", "tipoEdifEnergia", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Energia", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Energia", "fkComplSubEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Energia_Eletrica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Energia_Eletrica", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Energia_Eletrica", "fkComplSubEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Zona_Linhas_Energia_Com", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Torre", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre", "ovgd", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre", "alturaEstimada", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Torre_Energia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre_Energia", "tipoTorre", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre_Energia", "arranjoFases", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Torre_Comunic", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre_Comunic", "posicaoRelEdific", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Torre_Comunic", "fkComplComunic", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trecho_Comunic_Energia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Comunic_Energia", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Comunic_Energia", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Comunic_Energia", "posicaoRelativa", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Comunic_Energia", "emDuto", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Comunic_Energia", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Trecho_Comunic_Energia",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_false_mini_p_atrib_simbCartaMini", # setará conforme atributo, porem se nulo, seta para true #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trecho_Energia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Energia", "especie", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Energia", "tensaoEletrica", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Energia", "numCircuitos", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Trecho_Comunic", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Comunic", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Comunic", "tipoTrechoComunic", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Trecho_Comunic", "fkComplCom", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponto_Trecho_Energia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Trecho_Energia", "tipoPtoEnergia", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Subest_Transm_Energ_Eletr", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Subest_Transm_Energ_Eletr", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Subest_Transm_Energ_Eletr", "tipoOperativo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Subest_Transm_Energ_Eletr", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Subest_Transm_Energ_Eletr", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Subest_Transm_Energ_Eletr", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Subest_Transm_Energ_Eletr", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Subest_Transm_Energ_Eletr", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Subest_Transm_Energ_Eletr", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Subest_Transm_Energ_Eletr", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Subest_Transm_Energ_Eletr", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Est_Gerad_Energia_Eletr", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "tipoEstGerad", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "destEnergElet", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "codigoEstacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "potenciaOutorgadaKW", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "potenciaFiscalizadaKW", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Gerad_Energia_Eletr", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Hidreletrica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Termeletrica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Termeletrica", "tipoCombustivel", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Termeletrica", "combRenovavel", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Termeletrica", "tipoMaqTermica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Termeletrica", "geracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Grupo_Transform_Energ", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Grupo_Transform_Energ", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Grupo_Transform_Energ", "fkComplSubEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Grupo_Transform_Energ", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Grupo_Transform_Energ", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Grupo_Transform_Energ", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Grupo_Transform_Energ", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Grupo_Transform_Energ", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Comunicacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Comunicacao", "fkComplComunic", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Complexo_Comunicacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Comunicacao", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Comunicacao", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Comunicacao", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Comunicacao", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Comunicacao", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Comunic", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Comunic", "modalidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Comunic", "tipoEdifComunic", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Comunic", "fkComplComunic", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Antena_Comunic", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Antena_Comunic", "posicaoRelEdific", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Antena_Comunic", "fkComplComunic", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Antena_Comunic", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Antena_Comunic", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Antena_Comunic", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Antena_Comunic", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Antena_Comunic", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Antena_Comunic", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "ABAST_AGUA_E_SANEAM_BASICO", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Complexo_Abast_Agua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Abast_Agua", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Abast_Agua", "organizacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Abast_Agua", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Abast_Agua", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Abast_Agua", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Abast_Agua", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Abast_Agua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Abast_Agua", "fkComplAbsAgua", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Abast_Agua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Abast_Agua", "tipoEdifAbast", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Abast_Agua", "fkComplAbsAgua", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Dep_Abast_Agua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Abast_Agua", "finalidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Abast_Agua", "tipoDepAbast", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Abast_Agua", "situacaoAgua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Abast_Agua", "construcao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Abast_Agua", "fkComplIndustria", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Abast_Agua", "fkComplOrgComSv", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Abast_Agua", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Abast_Agua", "fkComplOrgAgrop", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Abast_Agua", "fkComplAbsAgua", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Complexo_Saneamento", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Saneamento", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Saneamento", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Saneamento", "organizacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Saneamento", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Saneamento", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Saneamento", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Saneamento", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Saneamento", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Saneamento", "fkComplSaneam", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Saneamento", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Saneamento", "tipoEdifSaneam", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Saneamento", "fkComplSaneam", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Dep_Saneamento", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Saneamento", "finalidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Saneamento", "construcao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Saneamento", "tipoDepSaneam", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Saneamento", "residuo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Saneamento", "tipoResiduo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Dep_Saneamento", "fkComplSaneam", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Cemiterio", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cemiterio", "tipoCemiterio", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cemiterio", "denominacaoAssociada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cemiterio", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cemiterio", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cemiterio", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cemiterio", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cemiterio", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cemiterio", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cemiterio", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Constr_Portuaria", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Constr_Portuaria", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Constr_Portuaria", "tipoEdifPort", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Constr_Portuaria", "fkComplPortuario", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "EDUCACAO_E_CULTURA", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Ensino", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ensino", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ensino", "tipoGrupoCnae", "integer", eh_global); # era 'tipoClasseCnae' #
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ensino", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ensino", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ensino", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ensino", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Ensino", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Ensino", "fkComplOrgEnsino", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Ensino", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Ensino", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Ensino", "fkComplOrgEnsino", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Religiosa", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Religiosa", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Religiosa", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Religiosa", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Religiosa", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Religiosa", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Religiosa", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Religiosa", "fkComplOrgRel", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Religiosa", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Religiosa", "ensino", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Religiosa", "tipoEdifRelig", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Religiosa", "religiao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Religiosa", "fkComplOrgRel", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Const_Turistica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Const_Turistica", "ovgd", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Const_Turistica", "tipoEdifTurist", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Const_Turistica", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponto_Turistico", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Turistico", "tipoPontoTuristico", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Turistico", "descricao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Turistico", "periodoVisitacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Turistico", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Turistico", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Turistico", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Turistico", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponto_Turistico", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Ruinas", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Ruinas", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ruina", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ruina", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ruina", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ruina", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ruina", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ruina", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ruina", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ruina", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ruina", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Complexo_Lazer", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Lazer", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Lazer", "tipoDivisaoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Lazer", "tipoComplexoLazer", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Lazer", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Lazer", "fkComplOrgEnsino", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Lazer", "fkComplMilitar", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Lazer", "fkComplPubCivil", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Lazer", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Lazer", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Lazer", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Lazer", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Lazer", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Piscina", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Piscina", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Piscina", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Piscina", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Piscina", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Piscina", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Piscina", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Piscina", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Piscina", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Piscina", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Piscina", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Const_Lazer", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Const_Lazer", "tipoEdifLazer", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Const_Lazer", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Campo_Quadra", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "tipoCampoQuadra", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Campo_Quadra", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Pista_Competicao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Competicao", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Competicao", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Competicao", "tipoPista", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Competicao", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Competicao", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Competicao", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Competicao", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Competicao", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pista_Competicao", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Arquibancada", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Arquibancada", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Coreto_Tribuna", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Coreto_Tribuna", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "ADMINISTRACAO_PUBLICA", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Pub_Civil", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Civil", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Civil", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Civil", "poderPublico", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Civil", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Civil", "fkComplInstPub", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Civil", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Civil", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Civil", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Instituicao_Publica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Instituicao_Publica", "tipoGrupoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Instituicao_Publica", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Instituicao_Publica", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Instituicao_Publica", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Instituicao_Publica", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Pub_Militar", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Militar", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Militar", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Militar", "instituicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Militar", "classificSigiloso", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Militar", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Militar", "fkComplInstPub", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Militar", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Militar", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Pub_Militar", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Pub_Militar", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Pub_Militar", "fkComplMilitar", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Pub_Civil", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Pub_Civil", "fkComplPubCivil", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Pub_Civil", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Pub_Civil", "tipoEdif", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Pub_Civil", "tipoUsoEdif", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Pub_Civil", "fkComplPubCivil", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Posto_Fiscal", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Posto_Pol_Rod", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Pub_Militar", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Pub_Militar", "tipoEdif", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Pub_Militar", "tipoUsoEdif", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Pub_Militar", "fkComplMilitar", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "ESTRUTURA_ECONOMICA", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Comerc_Serv", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Comerc_Serv", "finalidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Comerc_Serv", "tipoDivisaoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Comerc_Serv", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Comerc_Serv", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Comerc_Serv", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Comerc_Serv", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Comerc_Serv", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Comerc_Serv", "finalidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Comerc_Serv", "tipoEdifComercServ", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Comerc_Serv", "fkComplOrgComSv", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Comerc_Serv", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Comerc_Serv", "fkComplOrgComSv", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Deposito_Geral", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "tipoDepGeral", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "tipoExposicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "tipoProdutoResiduo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "tipoConteudo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "unidadeVolume", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "valorVolume", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "tratamento", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "fkComplIndustria", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "fkComplOrgComSv", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "fkComplEstrApoio", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "fkComplAeroport", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "fkComplPortuario", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "fkComplOrgAgrop", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Deposito_Geral", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Ext_Mineral", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ext_Mineral", "tipoProdutoResiduo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ext_Mineral", "tipoSecaoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ext_Mineral", "tipoOrgExtMin", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ext_Mineral", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ext_Mineral", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ext_Mineral", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Ext_Mineral", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Ext_Mineral", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Ext_Mineral", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Ext_Mineral", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Ext_Mineral", "tipoDivisaoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Ext_Mineral", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ext_Mineral", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "tipoSecaoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);     
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "tipoProdutoResiduo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "tipoExtMin", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "tipoPocoMina", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "procExtracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "formaExtracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "atividade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ext_Mineral", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Plataforma", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Plataforma", "tipoPlataforma", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Plataforma", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Plataforma", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Plataforma", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Plataforma", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Plataforma", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Plataforma",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_p_atrib_simbCartaMini", # setará conforme atributo, porem se nulo, seta para true #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Industrial", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Industrial", "tipoSecaoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Industrial", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Industrial", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Industrial", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Industrial", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Industrial", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Industrial", "fkComplIndustria", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Industrial", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Industrial", "tipoDivisaoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Industrial", "chamine", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Industrial", "fkComplIndustria", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Agrop_Ext_Veg_Pesca", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Agrop_Ext_Veg_Pesca", "destinadoA", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Agrop_Ext_Veg_Pesca", "fkComplOrgAgrop", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "tipoEdifAgropec", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "fkComplOrgAgrop", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Agrop_Ext_Veg_Pesca", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Agrop_Ext_Veg_Pesca", "tipoDivisaoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Agrop_Ext_Veg_Pesca", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Agrop_Ext_Veg_Pesca", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Agrop_Ext_Veg_Pesca", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Agrop_Ext_Veg_Pesca", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Equip_Agropec", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Equip_Agropec", "tipoEquipAgropec", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Equip_Agropec", "fkComplOrgAgrop", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Frigorifico_Matadouro", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Frigorifico_Matadouro", "frigorifico", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Madeireira", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "SAUDE_E_SERVICO_SOCIAL", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Saude", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Saude", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Saude", "tipoGrupoCnae", "integer", eh_global); # era 'tipoClasseCnae' #
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Saude", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Saude", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Saude", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Saude", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Saude", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Saude", "fkComplSaude", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Saude", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Saude", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Saude", "nivelAtencao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Saude", "fkComplSaude", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Militar_Saude", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Pub_Saude", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Servico_Social", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Servico_Social", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Servico_Social", "tipoGrupoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Servico_Social", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Servico_Social", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Servico_Social", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Org_Servico_Social", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Pub_Servico_Social", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Servico_Social", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Servico_Social", "fkComplSvSoc", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Servico_Social", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Servico_Social", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Servico_Social", "fkComplSvSoc", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "PONTOS_DE_REFERENCIA", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Pto_Geod_Topo_Controle", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "tipoRef", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "latitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "latitude_txt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "longitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "longitude_txt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "altitudeOrtometrica", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "sistemaGeodesico", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "outraRefPlan", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "referencialAltim", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "outraRefAlt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "orgaoEnteResp", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "codPonto", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "obs", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "offSetXTipo", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "offSetYTipo", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "justTxtTipo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "offSetXAltitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "offSetYAltitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "justTxtAltitude", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Geod_Topo_Controle", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Pto_Ref_Geod_Topo", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Ref_Geod_Topo", "proximidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Ref_Geod_Topo", "tipoPtoRefGeodTopo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Ref_Geod_Topo", "rede", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Ref_Geod_Topo", "referencialGrav", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Ref_Geod_Topo", "situacaoMarco", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Ref_Geod_Topo", "dataVisita", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Pto_Controle", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Controle", "tipoPtoControle", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Controle", "materializado", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Controle", "codProjeto", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Est_Med_Fenomenos", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Est_Med_Fenomenos", "fkComplEstMedFen", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Est_Med_Fenomenos", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Med_Fenomenos", "orgaoEnteResp", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Med_Fenomenos", "tipoEstMed", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Med_Fenomenos", "codigoEst", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Med_Fenomenos", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Med_Fenomenos", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Med_Fenomenos", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Est_Med_Fenomenos", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Constr_Est_Med", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Constr_Est_Med", "fkComplEstMedFen", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Pto_Est_Med_Fenomenos", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Est_Med_Fenomenos", "orgaoEnteResp", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Est_Med_Fenomenos", "codEstacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Est_Med_Fenomenos", "tipoPtoEstMed", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Est_Med_Fenomenos", "fkComplEstMedFen", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Est_Med_Fenomenos", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Est_Med_Fenomenos", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Est_Med_Fenomenos", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Est_Med_Fenomenos", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Est_Med_Fenomenos", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pto_Est_Med_Fenomenos", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "LOCALIDADE", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Localidade", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "latitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "latitude_txt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "longitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "longitude_txt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "identificadorPosicGeo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "simbolizar", "boolean", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Localidade", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Localidade",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_p_atrib_simbCartaMini", # setará conforme atributo, porem se nulo, seta para true #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Vila", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Vila",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Cidade", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Cidade", "tipoCidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Cidade",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Aglomerado_Rural", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Aglomerado_Rural", "tipoAglomerado", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Complexo_Habitacional", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Habitacional", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Habitacional", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Habitacional", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Complexo_Habitacional", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Nome_Local", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Nome_Local", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Nome_Local", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Nome_Local", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Nome_Local", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Nome_Local", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Aldeia_Indigena", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Aldeia_Indigena", "codigoFunai", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Aldeia_Indigena", "terraIndigena", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Aldeia_Indigena", "etnia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edificacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Edif_Habitacional", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Edif_Habitacional", "fkComplHabit", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Habitacional", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Habitacional", "fkComplAldeia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Habitacional", "fkComplHabit", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Hab_Indigena", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Hab_Indigena", "isolada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Hab_Indigena", "coletiva", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Hab_Indigena", "fkComplAldeia", "string", eh_global); # tem fkComplHab, porém não serve #
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Urbana_Cidade", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Urbana_Isolada_Vila", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Edificada", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Edificada", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Edificada", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Edificada", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Edificada", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Area_Edificada",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true_CI_Area_Edificada",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := definir_atributo_derivado(vac_id,
                                     "Area_Edificada",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_Area_Edificada", # setará conforme atributo, porem se nulo, seta para true #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Militar_Ensino", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Pub_Ensino", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Org_Religiosa_Ensino", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Via_Transporte", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Via_Transporte_Complexo", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Via_Transporte_Complexo", "pkComplexo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Via_Transporte_Trecho", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Via_Transporte_Trecho", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Via_Transporte_Trecho", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Via_Transporte_Ponto", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "EDIFICACAO", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDIFICACAO", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDIFICACAO", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDIFICACAO", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDIFICACAO", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDIFICACAO", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDIFICACAO", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDIFICACAO", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDIFICACAO", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDIFICACAO", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "EDIFICACAO", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "AREA_DELIMITADORA", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "AREA_DELIMITADORA", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Obra_Transporte", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obra_Transporte", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obra_Transporte", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obra_Transporte", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obra_Transporte", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obra_Transporte", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obra_Transporte", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obra_Transporte", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obra_Transporte", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obra_Transporte", "offSetSimbX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Obra_Transporte", "offSetSimbY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Passag_Elevada_Viaduto", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Passag_Elevada_Viaduto", "tipoPassagViad", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Passag_Elevada_Viaduto", "gabHorizSup", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Passag_Elevada_Viaduto", "gabVertSup", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Ponte", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Ponte", "tipoPonte", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_Geometria_Aproximada", "define_atributo");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Geometria_Aproximada", "geometriaAproximada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_Nome_NomeAbrev", "define_atributo");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Nome_NomeAbrev", "nome", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Nome_NomeAbrev", "nomeAbrev", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_Lista_Classes_Seccionadoras", "define_atributo");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # Exemplo de criação de um metodo que retorna uma coleção   #
     # DT_DESCRIPTOR é o retorno do metodo (na variável result), #
     # NÃO da função. Neste caso o result será uma COLLECTION    #
     st := definir_atributo_derivado(vac_id,
                                     "_Lista_Classes_Seccionadoras",
                                     "listaClassesSeccionadoras",
                                     "COLLECTION",
                                     "get_value",
                                     "listaClassesSeccionadoras",
                                     "listaClassesSeccionadorasDefault",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Condutor_Hidrico", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Condutor_Hidrico", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "LIMITES", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Marco_De_Limite", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "latitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "longitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "latitude_txt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "longitude_txt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "altitudeOrtometrica", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "sistemaGeodesico", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "outraRefPlan", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "referencialAltim", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "outraRefAlt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "tipoMarcoLim", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "orgResp", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "offSetXAltitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "offSetYAltitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "justTxtAltitude", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Marco_De_Limite", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Delimitacao_Fisica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Delimitacao_Fisica", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Delimitacao_Fisica", "eletrificada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Delimitacao_Fisica", "tipoDelimFis", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Delimitacao_Fisica", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Delimitacao_Fisica", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Delimitacao_Fisica", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Delimitacao_Fisica", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Particular", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Linha_De_Limite", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Linha_De_Limite", "extensao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Linha_De_Limite", "coincideComDentroDe", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Linha_De_Limite", "tipoRepresentacao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Linha_De_Limite",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true_mini_Linha_De_Limite",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Limite_Politico_Adm", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Politico_Adm", "tipoLimPol", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Politico_Adm", "obsSituacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Limite_Intra_Munic_Adm", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Intra_Munic_Adm", "obsSituacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Intra_Munic_Adm", "tipoLimIntraMun", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Limite_Operacional", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Operacional", "obsSituacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Operacional", "tipoLimOper", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Outros_Limites_Oficiais", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Outros_Limites_Oficiais", "obsSituacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Outros_Limites_Oficiais", "tipoOutLimOfic", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Limite_Area_Especial", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Area_Especial", "obsSituacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Area_Especial", "tipoLimAreaEsp", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Limite_Particular", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Limite_Particular", "obsSituacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_De_Litigio", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_De_Litigio", "descricao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Politico_Adm", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Pais", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pais", "sigla", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Pais", "codIso3166", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Unidade_Federacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unidade_Federacao", "sigla", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unidade_Federacao", "geocodigo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Municipio", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Municipio", "geocodigo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Municipio", "anoDeReferencia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Distrito", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Distrito", "geocodigo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Distrito", "anoDeReferencia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Sub_Distrito", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sub_Distrito", "geocodigo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sub_Distrito", "anoDeReferencia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Regiao_Administrativa", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Regiao_Administrativa", "anoDeReferencia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Bairro", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Bairro", "anoDeReferencia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Especial", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Especial", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Especial", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Especial", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Especial", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Especial", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Terra_Publica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Terra_Publica", "classificacao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Uso_Comunitario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Uso_Comunitario", "tipoAreaUsoComun", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Terra_Indigena", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Terra_Indigena", "nomeTi", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Terra_Indigena", "situacaoJuridica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Terra_Indigena", "dataSituacaoJuridica", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Terra_Indigena", "grupoEtnico", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Terra_Indigena", "areaOficialHa", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Terra_Indigena", "perimetroOficial", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Desenv_Controle", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Desenv_Controle", "classificacaoTxt", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Unidades_Protegidas", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unidades_Protegidas", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unidades_Protegidas", "sigla", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unidades_Protegidas", "anoCriacao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unidades_Protegidas", "areaOficialHa", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unidades_Protegidas", "areaOficial", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Outras_Unid_Protegidas", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Outras_Unid_Protegidas", "tipoOutUnidProt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Outras_Unid_Protegidas", "historicoModificacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Unidade_Conservacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unidade_Conservacao", "atoLegal", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Unidade_Conserv_Nao_SNUC", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unidade_Conserv_Nao_SNUC", "classificacao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Unidade_Conservacao_SNUC", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Unidade_Uso_Sustentavel", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unidade_Uso_Sustentavel", "tipoUnidUsoSust", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Unid_Protecao_Integral", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Unid_Protecao_Integral", "tipoUnidProtInteg", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "limitegeografico", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "limitegeografico", "escalaDosDadosEDGV", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "TOPONIMIA", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Curva_Mestra", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Curva_Mestra", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Curva_Mestra", "repTipoTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Simb_Curva_Mestra",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Hidrografia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Hidrografia", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Hidrografia", "espacamentoPalavra", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Hidrografia", "espacamentoLetra", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Hidrografia", "offSet", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Hidrografia", "filter", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Hidrografia", "smooth", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Hidrografia", "numPartes", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Hidrografia", "repTipoTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Simb_Hidrografia",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true_CI_por_referencia",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Corred_Queda_Dagua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Simb_Corred_Queda_Dagua",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true_CI_por_referencia",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Trecho_Ferroviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Trecho_Ferroviario", "repTipoTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Trecho_Ferroviario", "offSet", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Trecho_Hidroviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Trecho_Hidroviario", "repTipoTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Trecho_Hidroviario", "offSet", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Trecho_Rodoviario", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Trecho_Rodoviario", "repTipoTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Trecho_Rodoviario", "offSet", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Simb_Trecho_Rodoviario",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true_CI_por_referencia",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Trecho_Duto", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Trecho_Duto", "repTipoTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Trecho_Duto", "offSet", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Trecho_Energia", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Trecho_Energia", "offSet", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Trecho_Comunic", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Trecho_Comunic", "offSet", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Limite_Politico_Adm", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Limite_Politico_Adm", "repTipoTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Limite_Area_Especial", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Limite_Area_Especial", "repTipoTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Sentido_Corrente", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Sentido_Corrente", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Sentido_Corrente",
                                     "_display_carta_imagem",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_imagem",
                                     "MSTN_setar_view_true", # fazer um que faça quatree #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Bandeira_Edif", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Bandeira_Edif", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Vegetacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_Simb_Texto", "define_atributo");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Simb_Texto", "offSetX", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Simb_Texto", "offSetY", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Simb_Texto", "justTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Simb_Texto", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Texto_Generico_Edicao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Texto_Generico_Edicao", "nomeAbrev", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Texto_Generico_Edicao", "fonteTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Texto_Generico_Edicao", "corTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Texto_Generico_Edicao", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Texto_Generico_Edicao", "categoriaEDGV", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Texto_Generico_Edicao_Mini", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Texto_Generico_Edicao_Mini", "nomeAbrev", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Texto_Generico_Edicao_Mini", "fonteTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Texto_Generico_Edicao_Mini", "corTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Texto_Generico_Edicao_Mini", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Texto_Generico_Edicao_Mini", "categoriaEDGV", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Texto_Generico_Edicao_Mini",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_true",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Area_Ag_Extr_V_Pesc", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Ext_Mineral", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Ext_Mineral", "repTipoTxt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Elemento_Fisiog_Nat", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Elemento_Fisiog_Nat", "espacamentoPalavra", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Elemento_Fisiog_Nat", "espacamentoLetra", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Simb_Elemento_Fisiog_Nat", "numPartes", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Ilha", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Area_Uso_Comunit_TI", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Terra_Publica", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Unidades_Protegidas", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Simb_Area_Particular", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Area_Generica_Edicao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Generica_Edicao", "estilo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Generica_Edicao", "cor", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Generica_Edicao", "corContorno", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Generica_Edicao", "largura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Generica_Edicao", "comprimentoTraco", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Generica_Edicao", "comprimentoBranco", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Area_Generica_Edicao", "simbolizarCartaMini", "boolean", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Area_Generica_Edicao",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_false_mini_p_atrib_simbCartaMini", # setará conforme atributo, porem se nulo, seta para true #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "Linha_Generica_Edicao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Linha_Generica_Edicao", "estilo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Linha_Generica_Edicao", "cor", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Linha_Generica_Edicao", "largura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Linha_Generica_Edicao", "comprimentoTraco", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Linha_Generica_Edicao", "comprimentoBranco", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "Linha_Generica_Edicao", "simbolizarCartaMini", "boolean", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "Linha_Generica_Edicao",
                                     "_display_carta_mini_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_mini_topografica",
                                     "MSTN_setar_view_false_mini_p_atrib_simbCartaMini", # setará conforme atributo, porem se nulo, seta para true #
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_CLASSES_TEMPORARIAS", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contornos", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "contornos", "_codigo_aquisicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_derivado(vac_id,
                                     "contornos",
                                     "listaClassesConexao",
                                     "COLLECTION",
                                     "get_value",
                                     "listaClassesConexao",
                                     "listaClassesConexao_Default",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_ASB", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_ADM", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_EDU", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_ENC", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_ECO", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_HID", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_LIM", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_LOC", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_PTO", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_REL", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_SAU", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_TRA", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_VEG", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_REL_Elem_Fis_Nat", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "contorno_de_Espaco_Delimitado", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_criada_inner_ring", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_criada_outer_ring", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroides", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroides", "_codigo_aquisicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroides", "fkClassificador", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroides", "tamanhoTxt", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_ASB", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "construcao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "denominacaoAssociada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "finalidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "fkComplAbsAgua", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "fkComplIndustria", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "fkComplOrgAgrop", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "fkComplOrgComSv", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "fkComplSaneam", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "residuo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "situacaoAgua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "tipoCemiterio", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "tipoDepAbast", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "tipoDepSaneam", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "tipoEdifAbast", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "tipoEdifSaneam", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ASB", "tipoResiduo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_ADM", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ADM", "classificacao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ADM", "fkComplMilitar", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ADM", "fkComplPubCivil", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ADM", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ADM", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ADM", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ADM", "tipoEdif", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ADM", "tipoUsoEdif", "integer", eh_global);

     st := criar_classe(vac_id, "centroide_de_EDU", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "ensino", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "fkComplOrgEnsino", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "fkComplOrgRel", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "ovgd", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "religiao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "tipoCampoQuadra", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "tipoEdifLazer", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "tipoEdifRelig", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_EDU", "tipoEdifTurist", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_ENC", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "codigoEstacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "combRenovavel", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "destEnergElet", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "fkComplComunic", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "fkComplSubEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "geracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "modalidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "potenciaFiscalizadaKW", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "potenciaOutorgadaKW", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "tipoCombustivel", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "tipoEdifComunic", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "tipoEdifEnergia", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "tipoEstGerad", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "tipoMaqTermica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ENC", "tipoOperativo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_ECO", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "atividade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "finalidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "fkComplAeroport", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "fkComplEstrApoio", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "fkComplIndustria", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "fkComplOrgAgrop", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "fkComplOrgComSv", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "fkComplPortuario", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "formaExtracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "procExtracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoConteudo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoDepGeral", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoDivisaoCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoEdifAgropec", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoEdifComercServ", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoEquipAgropec", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoExposicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoExtMin", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoPlataforma", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoPocoMina", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tipoProdutoResiduo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "tratamento", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "unidadeVolume", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_ECO", "valorVolume", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_HID", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "altura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "alturaLamina", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "calado", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "codigoOtto", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "desnivel", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "espessAlgas", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "extensao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "fkComplGerEnEletr", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "fkComplTrCurDagua", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "largura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "materialPredominante", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "naMaximoMaximorum", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "naMaximoOperacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "nivelOtto", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "periodicidadeInunda", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "situaMare", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "situacaoCosta", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "situacaoEmAgua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "tipoAreaUmida", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "tipoBanco", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "tipoElemNat", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "tipoObst", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "tipoQuebramarMolhe", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "tipoQueda", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "tipoRecife", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "usoPrincipal", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID", "volumeUtil", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_HID_Massa_Dagua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID_Massa_Dagua", "regime", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID_Massa_Dagua", "salinidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_HID_Massa_Dagua", "tipoMassaDagua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_LIM", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "anoCriacao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "anoDeReferencia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "areaOficialHa", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "atoLegal", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "classificacao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "codIso3166", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "dataSituacaoJuridica", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "descricao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "escalaDosDadosEDGV", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "fkComplMilitar", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "fkComplPubCivil", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "geocodigo", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "grupoEtnico", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "historicoModificacao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "nomeTi", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "perimetroOficial", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "sigla", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "situacaoJuridica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "tipoAreaUsoComun", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "tipoOutUnidProt", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "tipoUnidProtInteg", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LIM", "tipoUnidUsoSust", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_LOC", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LOC", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LOC", "fkComplAldeia", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LOC", "fkComplHabit", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LOC", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LOC", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LOC", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LOC", "isolada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_LOC", "coletiva", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_PTO", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_PTO", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_PTO", "fkComplEstMedFen", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_PTO", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_PTO", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_PTO", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_REL", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_REL", "causaExposicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_REL", "fixa", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_REL", "tipoAlterAntrop", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_REL", "tipoElemNat", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_REL", "tipoTerrExp", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_SAU", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_SAU", "fkComplSaude", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_SAU", "fkComplSvSoc", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_SAU", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_SAU", "nivelAtencao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_SAU", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_SAU", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_SAU", "tipoClasseCnae", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_TRA", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "administracao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "calado", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "desnivel", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "destinacaoFundeadouro", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "escalaMaxSimbolizar", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "extensao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "fkComplAeroport", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "fkComplEstrApoio", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "fkComplIndustria", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "fkComplLazer", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "fkComplOrgAgrop", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "fkComplOrgComSv", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "fkComplOrgEnsino", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "fkComplOrgExtMin", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "fkComplOrgRel", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "fkComplPortuario", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "funcaoEdifMetroFerrov", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "homologacao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "largura", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "matConstr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "modalUso", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "multimodal", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "operacional", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "revestimento", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "situacaoEmAgua", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "situacaoFisica", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "tipoAtracad", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "tipoEdifAero", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "tipoEdifPort", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "tipoEdifRod", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "tipoObst", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "tipoPista", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_TRA", "usoPista", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_VEG", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "alturaMediaIndividuos", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "antropizada", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "caracteristicaFloresta", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "classificacaoPorte", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "cultivoPredominante", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "denso", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "espacamentoIndividuos", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "especiePredominante", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "espessuraDAP", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "finalidade", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "ocorrenciaEm", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "terreno", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "tipoBrejoPantano", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "tipoCampo", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "tipoCerr", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "tipoLavoura", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_VEG", "tipoMacChav", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_REL_Elem_Fis_Nat", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_REL_Elem_Fis_Nat", "tipoElemNat", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "centroide_de_Espaco_Delimitado", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "centroide_de_Espaco_Delimitado", "destinadoA", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "areas_genericas", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "areas_genericas", "_codigo_aquisicao", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_HID", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_HID_Massa_Dagua", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_VEG", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_ASB", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_ADM", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_EDU", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_ENC", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_ECO", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_LIM", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_LOC", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_PTO", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_REL", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_SAU", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_TRA", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_REL_Elem_Fis_Nat", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_Espaco_Delimitado", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_de_pesquisa", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "area_relatorio_ligacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "area_relatorio_ligacao", "descricao", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     #st := definir_atributo_derivado(vac_id,
                                     "area_relatorio_ligacao",
                                     "_display_carta_topografica",
                                     "boolean",
                                     "get_value",
                                     "_display_carta_topografica",
                                     "MSTN_setar_view_false",
                                     false);
     if (st != GOTH__NORMAL) then return error_report_status(st);#

     st := criar_classe(vac_id, "_Flags", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_marca_ponta_livre", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_flag_ponta_livre", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_flag_peq_seg", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_flag_peq_ang", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_flag_elem_prox", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_flag_int_loop", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_flag_atrib_diferente", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_cotador_curva_nivel", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     #
     st := criar_classe(vac_id, "_Padrao_DGN", "gothic_theme");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "_Classe_de_Destino", "string", not eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "_Nivel", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "_Cor", "integer", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "_Peso", "integer", not eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "_Estilo", "integer", not eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "_Nome_da_Celula", "string", not eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "_Legenda", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "_Tamanho", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "_Fonte", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_Padrao_DGN", "Altitude", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_coringa_TBCD_aquisicao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_coringa_TBCD_validacao", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_txt_cota", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_txt_cota", "_Legenda", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_txt_cota", "_Tamanho", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := criar_classe(vac_id, "_txt_simb_curva", "");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_txt_simb_curva", "_Legenda", "string", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := definir_atributo_simples(vac_id, "_txt_simb_curva", "orientacao", "real", eh_global);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     #


     # heranças #
     temas[01] := "ABAST_AGUA_E_SANEAM_BASICO";
     temas[02] := "ADMINISTRACAO_PUBLICA";
     temas[03] := "EDUCACAO_E_CULTURA";
     temas[04] := "ENERGIA_E_COMUNICACOES";
     temas[05] := "ESTRUTURA_ECONOMICA";
     temas[06] := "HIDROGRAFIA";
     temas[07] := "LIMITES";
     temas[08] := "LOCALIDADE";
     temas[09] := "PONTOS_DE_REFERENCIA";
     temas[10] := "RELEVO";
     temas[11] := "SAUDE_E_SERVICO_SOCIAL";
     temas[12] := "SISTEMA_DE_TRANSPORTE";
     temas[13] := "VEGETACAO";
     temas[14] := "AREA_DELIMITADORA";
     temas[15] := "EDIFICACAO";
     temas[16] := "DESCONTINUIDADE_GEOMETRIA";
     temas[17] := "Area_Nao_Mapeada";              # ATÉ AQUI TEM "numMetadados" e "restricaoEspacial" #
     temas[18] := "TOPONIMIA";
     temas[19] := "Classificador_Orig_Prec_Acur";
     temas[20] := "Objeto_Desconhecido";
     temas[21] := "_CLASSES_TEMPORARIAS";

     i := 1;
     while (i <= 21) do
     begin
          # cria o método para todos os temas, com comportamento default #
          if (i <= 17) then
          begin
               st := definir_atributo_derivado(vac_id,
                                               temas[i],
                                               "restricaoEspacial",
                                               "string",
                                               "get_value",
                                               "restricaoEspacial",
                                               "DSG_EDGV_default_restrEsp",
                                               false);
               if (st != GOTH__NORMAL) then return error_report_status(st);

               st := definir_atributo_simples(vac_id, temas[i], "fkClassificador", "string", eh_global);
               if (st != GOTH__NORMAL) then return error_report_status(st);

               st := definir_atributo_derivado(vac_id,
                                               temas[i],
                                               "numMetadados",
                                               "integer",
                                               "get_value",
                                               "numMetadados",
                                               "DSG_EDGV_numMetadados",
                                               false);
               if (st != GOTH__NORMAL) then return error_report_status(st);

               # metadados #
               st := DSG_EDGV_definir_referencia_aux(vac_id,
                                                     temas[i], "classificado_por", MVT_SET,
                                                     "Classificador_Orig_Prec_Acur", "classifica", MVT_SET);
               if (st != GOTH__NORMAL) then return error_report_status(st);
          end;

          if (i <= 13) then
          begin
               st := meta_inherit(vac_id, temas[i], "EDGV_MODELO");
               if (st != GOTH__NORMAL) then return error_report_status(st);
          end;
          else if (i <= 20) then
          begin
               st := meta_inherit(vac_id, temas[i], "EDGV_OUTRAS");
               if (st != GOTH__NORMAL) then return error_report_status(st);
          end;

          st := meta_inherit(vac_id, temas[i], "topology");
          if (st != GOTH__NORMAL) then return error_report_status(st);
          st := meta_inherit(vac_id, temas[i], "cleaning");
          if (st != GOTH__NORMAL) then return error_report_status(st);
          st := meta_inherit(vac_id, temas[i], "polygon_operations");
          if (st != GOTH__NORMAL) then return error_report_status(st);
          st := meta_inherit(vac_id, temas[i], "__data_consistency");
          if (st != GOTH__NORMAL) then return error_report_status(st);
          st := meta_inherit(vac_id, temas[i], "validating");
          if (st != GOTH__NORMAL) then return error_report_status(st);
          st := meta_inherit(vac_id, temas[i], "dsgproc_baseclass");
          if (st != GOTH__NORMAL) then return error_report_status(st);
          st := meta_inherit(vac_id, temas[i], "dsgvalidaproc_baseclass");
          if (st != GOTH__NORMAL) then return error_report_status(st);

          i := i + 1;
     end;

     st := meta_inherit(vac_id, "Classificador_Orig_Prec_Acur", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "DESCONTINUIDADE_GEOMETRIA", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # altera o comportamento do metodo #
     st := meta_define_behaviour(vac_id,
                                 "DESCONTINUIDADE_GEOMETRIA",
                                 "numMetadados",
                                 "DSG_EDGV_numMetadadosSetaParaUm",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_ADM", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_ADM", "ADMINISTRACAO_PUBLICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_ASB", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_ASB", "ABAST_AGUA_E_SANEAM_BASICO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_ECO", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_ECO", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_EDU", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_EDU", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_ENC", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_ENC", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_HID", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_HID", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_LIM", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_LIM", "LIMITES");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_LOC", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_LOC", "LOCALIDADE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_PTO", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_PTO", "PONTOS_DE_REFERENCIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_REL", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_REL", "RELEVO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_SAU", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_SAU", "SAUDE_E_SERVICO_SOCIAL");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_TRA", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_TRA", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Descontinuidade_Geom_VEG", "DESCONTINUIDADE_GEOMETRIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Descontinuidade_Geom_VEG", "VEGETACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Nao_Mapeada", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Objeto_Desconhecido", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Objeto_Desconhecido", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Bacia_Hidrografica", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Bacia_Hidrografica", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Bacia_Hidrografica", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Bacia_Hidrografica", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Curso_Dagua", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Curso_Dagua", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Curso_Dagua", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trecho_Curso_Dagua", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Curso_Dagua", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Curso_Dagua", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trecho_Drenagem", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Drenagem", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Drenagem", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Drenagem", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Drenagem", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Drenagem", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Trecho_Drenagem",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasTrecho_Drenagem",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Massa_Dagua", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Massa_Dagua", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Massa_Dagua", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Massa_Dagua", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trecho_Massa_Dagua", "Massa_Dagua");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Massa_Dagua", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Limite_Massa_Dagua", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Limite_Massa_Dagua", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Limite_Massa_Dagua", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Limite_Massa_Dagua", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Limite_Massa_Dagua", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Limite_Massa_Dagua",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasLimite_Massa_Dagua",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponto_Drenagem", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Drenagem", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Drenagem", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Barragem", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Barragem", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Barragem", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Barragem", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Barragem", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Comporta", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Comporta", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Comporta", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Comporta", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Sumidouro_Vertedouro", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Sumidouro_Vertedouro", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Sumidouro_Vertedouro", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Sumidouro_Vertedouro", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Queda_Dagua", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Queda_Dagua", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Queda_Dagua", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Queda_Dagua", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Fonte_Dagua", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Fonte_Dagua", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Fonte_Dagua", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Fonte_Dagua", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponto_Inicio_Drenagem", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Inicio_Drenagem", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Inicio_Drenagem", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Inicio_Drenagem", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Foz_Maritima", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Foz_Maritima", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Foz_Maritima", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Foz_Maritima", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Confluencia", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Confluencia", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Confluencia", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Confluencia", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Corredeira", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Corredeira", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Corredeira", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Corredeira", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Natureza_Fundo", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Natureza_Fundo", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Natureza_Fundo", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Natureza_Fundo", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Rocha_Em_Agua", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Rocha_Em_Agua", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Rocha_Em_Agua", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Rocha_Em_Agua", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Recife", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Recife", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Recife", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Recife", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Banco_Areia", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Banco_Areia", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Banco_Areia", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Banco_Areia", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Quebramar_Molhe", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Quebramar_Molhe", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Quebramar_Molhe", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Quebramar_Molhe", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Terreno_Suj_Inundacao", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Terreno_Suj_Inundacao", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Terreno_Suj_Inundacao", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Terreno_Suj_Inundacao", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Umida", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Umida", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Umida", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Umida", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Reservatorio_Hidrico", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Reservatorio_Hidrico", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Reservatorio_Hidrico", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Reservatorio_Hidrico", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Reservatorio_Hidrico", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ilha", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ilha", "Elemento_Fisiog_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "VEGETACAO", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "VEGETACAO", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Campo", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Campo", "VEGETACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Vegetacao", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Vegetacao", "VEGETACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Veg_Desconhecida", "Vegetacao");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Veg_Natural", "Vegetacao");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Veg_Cultivada", "Vegetacao");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Mangue", "Veg_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Brejo_Pantano", "Veg_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Veg_Restinga", "Veg_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Campinarana", "Veg_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Floresta", "Veg_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Macega_Chavascal", "Veg_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Cerrado_Cerradao", "Veg_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Caatinga", "Veg_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Estepe", "Veg_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Isolinha_Hipsografica", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Isolinha_Hipsografica", "RELEVO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Curva_Nivel", "Isolinha_Hipsografica");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Curva_Nivel", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Curva_Forma", "Isolinha_Hipsografica");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Curva_Batimetrica", "Isolinha_Hipsografica");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponto_Hipsometrico", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Hipsometrico", "RELEVO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponto_Cotado_Altimetrico", "Ponto_Hipsometrico");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Cotado_Altimetrico", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponto_Cotado_Batimetrico", "Ponto_Hipsometrico");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Elemento_Fisiografico", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Elemento_Fisiografico", "RELEVO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Elemento_Fisiografico", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Elemento_Fisiografico", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Elemento_Fisiog_Natural", "Elemento_Fisiografico");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Alter_Fisiog_Antropica", "Elemento_Fisiografico");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Terreno_Exposto", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Terreno_Exposto", "RELEVO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Terreno_Exposto", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Dolina", "Elemento_Fisiog_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Duna", "Elemento_Fisiog_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Gruta_Caverna", "Elemento_Fisiog_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Pico", "Elemento_Fisiog_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Rocha", "Elemento_Fisiog_Natural");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Veg_Area_Contato", "Vegetacao");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Estrut_Transporte", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Estrut_Transporte", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Estrut_Transporte", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Estrut_Apoio", "Estrut_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Estrut_Apoio", "Subsistema_Rodoviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Estrut_Apoio", "Subsistema_Ferroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Funicular", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Funicular", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Funicular", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Funicular", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Caminho_Aereo", "Via_Transporte_Trecho");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Caminho_Aereo", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Caminho_Aereo", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Patio", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Patio", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Patio", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Patio", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Patio", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Estrut_Transporte", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Estrut_Transporte", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Faixa_Seguranca", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Faixa_Seguranca", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Faixa_Seguranca", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Travessia", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Travessia", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Travessia", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Travessia", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponto_Rodoviario_Ferrov", "Via_Transporte_Ponto");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Rodoviario_Ferrov", "Subsistema_Rodoviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Rodoviario_Ferrov", "Subsistema_Ferroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Entroncamento", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Entroncamento", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Entroncamento", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Entroncamento", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Passagem_Nivel", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Passagem_Nivel", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Passagem_Nivel", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Passagem_Nivel", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Galeria_Bueiro", "Obra_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponte_Pass_Elevada_Viaduto", "Obra_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Travessia_Pedestre", "Obra_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Tunel", "Obra_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Subsistema_Rodoviario", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Via_Rodoviaria", "Via_Transporte_Complexo");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Via_Rodoviaria", "Subsistema_Rodoviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Rodoviaria", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Rodoviaria", "Subsistema_Rodoviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Posto_Combustivel", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Posto_Combustivel", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trecho_Rodoviario", "Via_Transporte_Trecho");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Rodoviario", "Subsistema_Rodoviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Rodoviario", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Rodoviario", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Trecho_Rodoviario",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasTrecho_Rodoviario",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Identific_Trecho_Rod", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Identific_Trecho_Rod", "Subsistema_Rodoviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Identific_Trecho_Rod", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Identific_Trecho_Rod", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ciclovia", "Via_Transporte_Trecho");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ciclovia", "Subsistema_Rodoviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ciclovia", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ciclovia", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Ciclovia",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasCiclovia",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Arruamento", "Via_Transporte_Trecho");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Arruamento", "Subsistema_Rodoviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Arruamento", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Arruamento", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Arruamento",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasArruamento",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trilha_Picada", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trilha_Picada", "Subsistema_Rodoviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trilha_Picada", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trilha_Picada", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trilha_Picada", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Trilha_Picada",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasTrilha_Picada",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Subsistema_Ferroviario", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Via_Ferrea", "Via_Transporte_Complexo");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Via_Ferrea", "Subsistema_Ferroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Metro_Ferroviaria", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Metro_Ferroviaria", "Subsistema_Ferroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Girador_Ferroviario", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Girador_Ferroviario", "Subsistema_Ferroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Girador_Ferroviario", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Girador_Ferroviario", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Girador_Ferroviario", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trecho_Ferroviario", "Via_Transporte_Trecho");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Ferroviario", "Subsistema_Ferroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Ferroviario", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Ferroviario", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Ferroviario", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Trecho_Ferroviario",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasTrecho_Ferroviario",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Cremalheira", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Cremalheira", "Subsistema_Ferroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Cremalheira", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Cremalheira", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Subsistema_Hidroviario", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Hidrovia", "Via_Transporte_Complexo");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Hidrovia", "Subsistema_Hidroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Obstaculo_Navegacao", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Obstaculo_Navegacao", "Subsistema_Hidroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Obstaculo_Navegacao", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Obstaculo_Navegacao", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Obstaculo_Navegacao", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trecho_Hidroviario", "Via_Transporte_Trecho");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Hidroviario", "Subsistema_Hidroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Hidroviario", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Hidroviario", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Hidroviario", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Trecho_Hidroviario",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasTrecho_Hidroviario",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Complexo_Portuario", "Estrut_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Portuario", "Subsistema_Hidroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Sinalizacao", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Sinalizacao", "Subsistema_Hidroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Sinalizacao", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Sinalizacao", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Sinalizacao", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Eclusa", "Obra_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Eclusa", "Subsistema_Hidroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Eclusa", "HIDROGRAFIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponto_Hidroviario", "Via_Transporte_Ponto");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Hidroviario", "Subsistema_Hidroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Atracadouro", "Obra_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Atracadouro", "Subsistema_Hidroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Atracadouro", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Fundeadouro", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Fundeadouro", "Subsistema_Hidroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Fundeadouro", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Fundeadouro", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Fundeadouro", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Subsistema_Aeroportuario", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Const_Aeroportuaria", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Const_Aeroportuaria", "Subsistema_Aeroportuario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Complexo_Aeroportuario", "Estrut_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Aeroportuario", "Subsistema_Aeroportuario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Pista_Ponto_Pouso", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pista_Ponto_Pouso", "Subsistema_Aeroportuario");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pista_Ponto_Pouso", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pista_Ponto_Pouso", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pista_Ponto_Pouso", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Subsistema_De_Dutos", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Duto", "Via_Transporte_Complexo");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Duto", "Subsistema_De_Dutos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Duto", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Duto", "Subsistema_De_Dutos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trecho_Duto", "Via_Transporte_Trecho");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Duto", "Subsistema_De_Dutos");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Duto", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Duto", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Duto", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Trecho_Duto",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasTrecho_Duto",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponto_Duto", "Via_Transporte_Ponto");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Duto", "Subsistema_De_Dutos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Local_Critico", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Local_Critico", "Subsistema_De_Dutos");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Local_Critico", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Local_Critico", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Complexo_Gerad_Energ_Eletr", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Gerad_Energ_Eletr", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Gerad_Energ_Eletr", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Energia", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Energia", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Energia_Eletrica", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Energia_Eletrica", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Grupo_Transform_Energ", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Grupo_Transform_Energ", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Grupo_Transform_Energ", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Grupo_Transform_Energ", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Grupo_Transform_Energ", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Zona_Linhas_Energia_Com", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Zona_Linhas_Energia_Com", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Zona_Linhas_Energia_Com", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Zona_Linhas_Energia_Com", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Torre", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Torre", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Torre", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Torre", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Torre_Energia", "Torre");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Torre_Comunic", "Torre");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Torre_Comunic", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trecho_Comunic_Energia", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Comunic_Energia", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Comunic_Energia", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Comunic_Energia", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trecho_Energia", "Trecho_Comunic_Energia");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Energia", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Trecho_Energia",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasTrecho_Energia",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Trecho_Comunic", "Trecho_Comunic_Energia");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Trecho_Comunic", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Trecho_Comunic",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasTrecho_Comunic",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponto_Trecho_Energia", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Trecho_Energia", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Trecho_Energia", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Subest_Transm_Energ_Eletr", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Subest_Transm_Energ_Eletr", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Subest_Transm_Energ_Eletr", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Subest_Transm_Energ_Eletr", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Est_Gerad_Energia_Eletr", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Est_Gerad_Energia_Eletr", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Est_Gerad_Energia_Eletr", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Est_Gerad_Energia_Eletr", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Est_Gerad_Energia_Eletr", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Hidreletrica", "Est_Gerad_Energia_Eletr");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Termeletrica", "Est_Gerad_Energia_Eletr");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Comunicacao", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Comunicacao", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Complexo_Comunicacao", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Comunicacao", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Comunicacao", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Comunic", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Comunic", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Antena_Comunic", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Antena_Comunic", "ENERGIA_E_COMUNICACOES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Antena_Comunic", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Antena_Comunic", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Antena_Comunic", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Complexo_Abast_Agua", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Abast_Agua", "ABAST_AGUA_E_SANEAM_BASICO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Abast_Agua", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Abast_Agua", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Abast_Agua", "ABAST_AGUA_E_SANEAM_BASICO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Abast_Agua", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Abast_Agua", "ABAST_AGUA_E_SANEAM_BASICO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Dep_Abast_Agua", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Dep_Abast_Agua", "ABAST_AGUA_E_SANEAM_BASICO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Complexo_Saneamento", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Saneamento", "ABAST_AGUA_E_SANEAM_BASICO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Saneamento", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Saneamento", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Saneamento", "ABAST_AGUA_E_SANEAM_BASICO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Saneamento", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Saneamento", "ABAST_AGUA_E_SANEAM_BASICO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Dep_Saneamento", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Dep_Saneamento", "ABAST_AGUA_E_SANEAM_BASICO");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Cemiterio", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Cemiterio", "ABAST_AGUA_E_SANEAM_BASICO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Cemiterio", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Cemiterio", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Constr_Portuaria", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Constr_Portuaria", "Subsistema_Hidroviario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Ensino", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Ensino", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Ensino", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Ensino", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Ensino", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Ensino", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Ensino", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Religiosa", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Religiosa", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Religiosa", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Religiosa", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Religiosa", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Religiosa", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Religiosa", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Const_Turistica", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Const_Turistica", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponto_Turistico", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Turistico", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Turistico", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Turistico", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ponto_Turistico", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Ruinas", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Ruinas", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ruina", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ruina", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ruina", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ruina", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ruina", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Complexo_Lazer", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Lazer", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Lazer", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Lazer", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Lazer", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Piscina", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Piscina", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Piscina", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Piscina", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Piscina", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Const_Lazer", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Const_Lazer", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Campo_Quadra", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Campo_Quadra", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Campo_Quadra", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Campo_Quadra", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Campo_Quadra", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Pista_Competicao", "simple"); # só linha, mas deverá permitir área (cancha é área) #
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pista_Competicao", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pista_Competicao", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pista_Competicao", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pista_Competicao", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Arquibancada", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Arquibancada", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Coreto_Tribuna", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Coreto_Tribuna", "EDUCACAO_E_CULTURA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Pub_Civil", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Pub_Civil", "ADMINISTRACAO_PUBLICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Pub_Civil", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Instituicao_Publica", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Instituicao_Publica", "ADMINISTRACAO_PUBLICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Instituicao_Publica", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Pub_Militar", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Pub_Militar", "ADMINISTRACAO_PUBLICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Pub_Militar", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Pub_Militar", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Pub_Militar", "ADMINISTRACAO_PUBLICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Pub_Militar", "Terra_Publica");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Pub_Civil", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Pub_Civil", "ADMINISTRACAO_PUBLICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Pub_Civil", "Terra_Publica");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Pub_Civil", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Pub_Civil", "ADMINISTRACAO_PUBLICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Posto_Fiscal", "Edif_Pub_Civil");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Posto_Pol_Rod", "Edif_Pub_Civil");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Posto_Pol_Rod", "Edif_Pub_Militar");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Pub_Militar", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Pub_Militar", "ADMINISTRACAO_PUBLICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Comerc_Serv", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Comerc_Serv", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Comerc_Serv", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Comerc_Serv", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Comerc_Serv", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Comerc_Serv", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Comerc_Serv", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Deposito_Geral", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Deposito_Geral", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Ext_Mineral", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Ext_Mineral", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Ext_Mineral", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Ext_Mineral", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Ext_Mineral", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Ext_Mineral", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Ext_Mineral", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ext_Mineral", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ext_Mineral", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ext_Mineral", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ext_Mineral", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Ext_Mineral", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Plataforma", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Plataforma", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Plataforma", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Plataforma", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Industrial", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Industrial", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Industrial", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Industrial", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Industrial", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Industrial", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Industrial", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Agrop_Ext_Veg_Pesca", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Agrop_Ext_Veg_Pesca", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Agrop_Ext_Veg_Pesca", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Agrop_Ext_Veg_Pesca", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Agrop_Ext_Veg_Pesca", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Agrop_Ext_Veg_Pesca", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Equip_Agropec", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Equip_Agropec", "ESTRUTURA_ECONOMICA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Frigorifico_Matadouro", "Org_Industrial");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Madeireira", "Org_Industrial");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Saude", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Saude", "SAUDE_E_SERVICO_SOCIAL");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Saude", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Saude", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Saude", "SAUDE_E_SERVICO_SOCIAL");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Saude", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Saude", "SAUDE_E_SERVICO_SOCIAL");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Militar_Saude", "Org_Saude");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Militar_Saude", "Org_Pub_Militar");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Pub_Saude", "Org_Saude");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Pub_Saude", "Org_Pub_Civil");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Servico_Social", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Servico_Social", "SAUDE_E_SERVICO_SOCIAL");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Servico_Social", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Pub_Servico_Social", "Org_Servico_Social");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Pub_Servico_Social", "Org_Pub_Civil");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Servico_Social", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Servico_Social", "SAUDE_E_SERVICO_SOCIAL");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Servico_Social", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Servico_Social", "SAUDE_E_SERVICO_SOCIAL");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Pto_Geod_Topo_Controle", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pto_Geod_Topo_Controle", "PONTOS_DE_REFERENCIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pto_Geod_Topo_Controle", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pto_Geod_Topo_Controle", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Pto_Ref_Geod_Topo", "Pto_Geod_Topo_Controle");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Pto_Controle", "Pto_Geod_Topo_Controle");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Est_Med_Fenomenos", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Est_Med_Fenomenos", "PONTOS_DE_REFERENCIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Est_Med_Fenomenos", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Est_Med_Fenomenos", "PONTOS_DE_REFERENCIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Est_Med_Fenomenos", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Constr_Est_Med", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edif_Constr_Est_Med", "PONTOS_DE_REFERENCIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Pto_Est_Med_Fenomenos", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pto_Est_Med_Fenomenos", "PONTOS_DE_REFERENCIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pto_Est_Med_Fenomenos", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pto_Est_Med_Fenomenos", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Pto_Est_Med_Fenomenos", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "LOCALIDADE", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Localidade", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Localidade", "LOCALIDADE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Localidade", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Vila", "Localidade");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Cidade", "Localidade");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Complexo_Habitacional", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Complexo_Habitacional", "LOCALIDADE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Nome_Local", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Nome_Local", "LOCALIDADE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Nome_Local", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Aldeia_Indigena", "Complexo_Habitacional");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edificacao", "EDIFICACAO");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Edificacao", "LOCALIDADE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Edif_Habitacional", "Edificacao");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Habitacional", "AREA_DELIMITADORA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Habitacional", "LOCALIDADE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Hab_Indigena", "Edif_Habitacional");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Urbana_Cidade", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Urbana_Cidade", "LOCALIDADE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Urbana_Cidade", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Urbana_Isolada_Vila", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Urbana_Isolada_Vila", "LOCALIDADE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Urbana_Isolada_Vila", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Edificada", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Edificada", "LOCALIDADE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Edificada", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Aglomerado_Rural", "Localidade");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Militar_Ensino", "Org_Ensino");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Militar_Ensino", "Org_Pub_Militar");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Pub_Ensino", "Org_Ensino");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Pub_Ensino", "Org_Pub_Civil");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Org_Religiosa_Ensino", "Org_Ensino");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Org_Religiosa_Ensino", "Org_Religiosa");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Via_Transporte", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Via_Transporte_Complexo", "bundle");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Via_Transporte_Complexo", "Via_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Via_Transporte_Complexo", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Via_Transporte_Trecho", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Via_Transporte_Trecho", "Via_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Via_Transporte_Trecho", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Via_Transporte_Ponto", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Via_Transporte_Ponto", "Via_Transporte");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Via_Transporte_Ponto", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "EDIFICACAO", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "EDIFICACAO", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "EDIFICACAO", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "EDIFICACAO", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "AREA_DELIMITADORA", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "AREA_DELIMITADORA", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "AREA_DELIMITADORA", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Obra_Transporte", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Obra_Transporte", "SISTEMA_DE_TRANSPORTE");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Obra_Transporte", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Obra_Transporte", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Passag_Elevada_Viaduto", "Ponte_Pass_Elevada_Viaduto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Ponte", "Ponte_Pass_Elevada_Viaduto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Condutor_Hidrico", "Trecho_Duto");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Condutor_Hidrico",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasCondutor_Hidrico",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "LIMITES", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "LIMITES", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Marco_De_Limite", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Marco_De_Limite", "LIMITES");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Delimitacao_Fisica", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Delimitacao_Fisica", "LIMITES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Delimitacao_Fisica", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Delimitacao_Fisica",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasDelimitacao_Fisica",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Particular", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Particular", "LIMITES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Particular", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Linha_De_Limite", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Linha_De_Limite", "LIMITES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Linha_De_Limite", "_Lista_Classes_Seccionadoras");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Linha_De_Limite",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasLimite_Linha_De_Limite",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Limite_Politico_Adm", "Linha_De_Limite");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Limite_Politico_Adm",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasLimite_Politico_Adm",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Limite_Intra_Munic_Adm", "Linha_De_Limite");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Limite_Intra_Munic_Adm",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasLimite_Intra_Munic_Adm",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Limite_Operacional", "Linha_De_Limite");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Limite_Operacional",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasLimite_Operacional",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Outros_Limites_Oficiais", "Linha_De_Limite");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Outros_Limites_Oficiais",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasOutros_Limites_Oficiais",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Limite_Area_Especial", "Linha_De_Limite");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Limite_Area_Especial",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasLimite_Area_Especial",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Limite_Particular", "Linha_De_Limite");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "Limite_Particular",
                                 "listaClassesSeccionadoras",
                                 "listaClassesSeccionadorasLimite_Particular",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_De_Litigio", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_De_Litigio", "LIMITES");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Politico_Adm", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Politico_Adm", "LIMITES");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Pais", "Area_Politico_Adm");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Unidade_Federacao", "Area_Politico_Adm");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Municipio", "Area_Politico_Adm");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Distrito", "Area_Politico_Adm");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Sub_Distrito", "Area_Politico_Adm");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Regiao_Administrativa", "Area_Politico_Adm");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Bairro", "Area_Politico_Adm");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Especial", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Especial", "LIMITES");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Terra_Publica", "Area_Especial");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Uso_Comunitario", "Area_Especial");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Terra_Indigena", "Area_Uso_Comunitario");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Desenv_Controle", "Area_Especial");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Unidades_Protegidas", "Area_Especial");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Outras_Unid_Protegidas", "Unidades_Protegidas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Unidade_Conservacao", "Unidades_Protegidas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Unidade_Conserv_Nao_SNUC", "Unidade_Conservacao");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Unidade_Conservacao_SNUC", "Unidade_Conservacao");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Unidade_Uso_Sustentavel", "Unidade_Conservacao_SNUC");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Unid_Protecao_Integral", "Unidade_Conservacao_SNUC");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "limitegeografico", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "limitegeografico", "LIMITES");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera o comportamento do metodo #
     st := meta_define_behaviour(vac_id,
                                 "limitegeografico",
                                 "numMetadados",
                                 "DSG_EDGV_numMetadadosSetaParaUm",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Curva_Mestra", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Curva_Mestra", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Hidrografia", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Hidrografia", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Corred_Queda_Dagua", "simple"); # poderá no fut virar tbm toponímia ??? #
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Corred_Queda_Dagua", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Trecho_Ferroviario", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Trecho_Ferroviario", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Trecho_Hidroviario", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Trecho_Hidroviario", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Trecho_Rodoviario", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Trecho_Rodoviario", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Trecho_Duto", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Trecho_Duto", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Trecho_Energia", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Trecho_Energia", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Trecho_Comunic", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Trecho_Comunic", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Limite_Politico_Adm", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Limite_Politico_Adm", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Limite_Area_Especial", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Limite_Area_Especial", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Sentido_Corrente", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Sentido_Corrente", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Bandeira_Edif", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Bandeira_Edif", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Vegetacao", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Vegetacao", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Texto_Generico_Edicao", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Texto_Generico_Edicao", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Texto_Generico_Edicao", "_Simb_Texto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Texto_Generico_Edicao_Mini", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Texto_Generico_Edicao_Mini", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Texto_Generico_Edicao_Mini", "_Simb_Texto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Area_Ag_Extr_V_Pesc", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Area_Ag_Extr_V_Pesc", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Area_Ag_Extr_V_Pesc", "_Simb_Texto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Ext_Mineral", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Ext_Mineral", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Ext_Mineral", "_Simb_Texto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Elemento_Fisiog_Nat", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Elemento_Fisiog_Nat", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Elemento_Fisiog_Nat", "_Simb_Texto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Ilha", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Ilha", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Ilha", "_Simb_Texto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Area_Uso_Comunit_TI", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Area_Uso_Comunit_TI", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Area_Uso_Comunit_TI", "_Simb_Texto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Terra_Publica", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Terra_Publica", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Terra_Publica", "_Simb_Texto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Unidades_Protegidas", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Unidades_Protegidas", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Unidades_Protegidas", "_Simb_Texto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Simb_Area_Particular", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Area_Particular", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Simb_Area_Particular", "_Simb_Texto");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Area_Generica_Edicao", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Area_Generica_Edicao", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "Linha_Generica_Edicao", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "Linha_Generica_Edicao", "TOPONIMIA");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contornos", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "contornos", "_CLASSES_TEMPORARIAS");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_ASB", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_ADM", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_EDU", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_ENC", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_ECO", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_HID", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "contorno_de_HID",
                                 "listaClassesConexao",
                                 "listaClassesConexao_contorno_de_HID",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_LIM", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "contorno_de_LIM",
                                 "listaClassesConexao",
                                 "listaClassesConexao_contorno_de_LIM",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_LOC", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "contorno_de_LOC",
                                 "listaClassesConexao",
                                 "listaClassesConexao_contorno_de_LOC",
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_PTO", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_REL", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_SAU", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_TRA", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_VEG", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "contorno_de_VEG",
                                 "listaClassesConexao",
                                 "listaClassesConexao_contorno_de_LOC", # usa o mesmo de LOC #
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_REL_Elem_Fis_Nat", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "contorno_de_REL_Elem_Fis_Nat",
                                 "listaClassesConexao",
                                 "listaClassesConexao_contorno_de_LIM", # usa o mesmo de LIM #
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "contorno_de_Espaco_Delimitado", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     # altera a funcao que cria a lista de classes #
     st := meta_define_behaviour(vac_id,
                                 "contorno_de_Espaco_Delimitado",
                                 "listaClassesConexao",
                                 "listaClassesConexao_contorno_de_LOC", # usa o mesmo de LOC #
                                 0,0,0);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_criada_inner_ring", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_criada_outer_ring", "contornos");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroides", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "centroides", "polygon_seedbase");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "centroides", "_CLASSES_TEMPORARIAS");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "centroides", "_Geometria_Aproximada");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "centroides", "_Nome_NomeAbrev");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "centroides", "support");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_ASB", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_ADM", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_EDU", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_ENC", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_ECO", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_HID", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_HID_Massa_Dagua", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_LIM", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_LOC", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_PTO", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_REL", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_SAU", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_TRA", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_VEG", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_REL_Elem_Fis_Nat", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "centroide_de_Espaco_Delimitado", "centroides");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "areas_genericas", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "areas_genericas", "_CLASSES_TEMPORARIAS");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_HID", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_HID_Massa_Dagua", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_VEG", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_ASB", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_ADM", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_EDU", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_ENC", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_ECO", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_LIM", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_LOC", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_PTO", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_REL", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_SAU", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_TRA", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_REL_Elem_Fis_Nat", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_Espaco_Delimitado", "areas_genericas");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_de_pesquisa", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "area_de_pesquisa", "_CLASSES_TEMPORARIAS");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "area_relatorio_ligacao", "simple_area");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "area_relatorio_ligacao", "_CLASSES_TEMPORARIAS");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_Flags", "markup");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "_Flags", "_CLASSES_TEMPORARIAS");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_marca_ponta_livre", "_Flags");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_flag_ponta_livre", "_Flags");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_flag_peq_seg", "_Flags");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_flag_peq_ang", "_Flags");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_flag_elem_prox", "_Flags");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_flag_int_loop", "_Flags");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_flag_atrib_diferente", "_Flags");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_cotador_curva_nivel", "simple_line");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "_cotador_curva_nivel", "_CLASSES_TEMPORARIAS");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     #
     st := meta_inherit(vac_id, "_Padrao_DGN", "simple");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "_Padrao_DGN", "_CLASSES_TEMPORARIAS");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_coringa_TBCD_aquisicao", "_Padrao_DGN");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_coringa_TBCD_validacao", "_Padrao_DGN");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_txt_cota", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "_txt_cota", "_CLASSES_TEMPORARIAS");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := meta_inherit(vac_id, "_txt_simb_curva", "simple_point");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := meta_inherit(vac_id, "_txt_simb_curva", "_CLASSES_TEMPORARIAS");
     if (st != GOTH__NORMAL) then return error_report_status(st);
     #

     return GOTH__NORMAL;
END;

#*************************************************************************************#
#*-----------------------------------------------------------------------------------*#
#*                                                                                   *#
#*         FUNCAO CHAMADA PELO PULLDOW 'Topologia ****                               *#
#*                                                                                   *#
#*-----------------------------------------------------------------------------------*#
#*************************************************************************************#
function integer _DSG_EDGV_instala_topologia(VAC      vac_id,
                                             string   toggle_str)
BEGIN
     integer    st, topological_model;
     real       raio_limite_geo, edgv_raio_topologia;

     # artificio usado para quando o attach_dataset tenta habilita #
     # o toggle correspondente e tenta carrgar a topologia #
     if (_estah_no_pulldown_update) then return GOTH__NORMAL;
     else if (__DSG_ESC_REP_CEL <= 0.0) then
     begin
          st := mmi_give_information(NULL_DESC, "A Escala de representacao nao foi setada corretamente.\nImpossivel carregar a topologia.");
          return GOTH__NORMAL;
     end;

     st := goth_printf(frame_stdout, "\n\nINSTALANDO TOPOLOGIA...\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topo_get_model_type(vac_id, topological_model);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     if (topological_model != TOPO_M_LINK_NODE) then
     begin
          st := goth_printf(frame_stdout, "\nDataset NÃO é Link-Node. A topologia não pode ser setada\n\n");
          if (st != GOTH__NORMAL) then return error_report_status(st);

          return GOTH__NORMAL;
     end;

     st := topoprim_load_default_rules(vac_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoprim_commit_rule_set(vac_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     # 025000 = 2.0 metros #
     # 050000 = 4.0 metros #
     # 100000 = 8.0 metros #
     # 250000 = 20.0 metros #

     if (toggle_str == "Load Default (spaghetti)") then
     begin
          st := goth_printf(frame_stdout, "\nTOPOLOGIA DEFAULT INSTALADA COM SUCESSO.\n\n");
          if (st != GOTH__NORMAL) then return error_report_status(st);

          return GOTH__NORMAL;
     end;
     else if (toggle_str == "Load Full 5% do raio (ligada)") then
     begin
          edgv_raio_topologia := (__DSG_ESC_REP_CEL * 2.0) / 20.0;
     end;
     else
     begin
          edgv_raio_topologia := __DSG_ESC_REP_CEL * 2.0;
     end;

     # 025000 = 0.5 metros #
     # 050000 = 1.0 metros #
     # 100000 = 2.0 metros #
     # 250000 = 5.0 metros #

     if (edgv_raio_topologia > 0.2) then
          raio_limite_geo := 0.25 * edgv_raio_topologia;
     else if (edgv_raio_topologia > 0.1) then
          raio_limite_geo := 0.1;
     else
          raio_limite_geo := edgv_raio_topologia;

     st := topoframe_make_spaghetti_class(vac_id, "Classificador_Orig_Prec_Acur", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "EDGV_MODELO", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "EDGV_OUTRAS", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "DESCONTINUIDADE_GEOMETRIA", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_ADM", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ADM", 4, "Descontinuidade_Geom_ADM", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ADM", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ADM", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ADM", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_ASB", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ASB", 4, "Descontinuidade_Geom_ASB", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ASB", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ASB", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ASB", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ASB", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ASB", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ASB", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_ECO", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ECO", 4, "Descontinuidade_Geom_ECO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ECO", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ECO", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ECO", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ECO", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ECO", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ECO", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ECO", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_EDU", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Descontinuidade_Geom_EDU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_EDU", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_ENC", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 1, "Ponto_Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 4, "Descontinuidade_Geom_ENC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 4, "Zona_Linhas_Energia_Com", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 4, "Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 1, "Est_Gerad_Energia_Eletr", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 1, "Termeletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 1, "Hidreletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_ENC", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_HID", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Descontinuidade_Geom_HID", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Descontinuidade_Geom_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Descontinuidade_Geom_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Area_Nao_Mapeada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Comporta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Foz_Maritima", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Corredeira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Natureza_Fundo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Rocha_Em_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Banco_Areia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Terreno_Suj_Inundacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Area_Umida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Reservatorio_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_HID", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_LIM", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Descontinuidade_Geom_LIM", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LIM", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_LOC", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LOC", 4, "Descontinuidade_Geom_LOC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LOC", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LOC", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LOC", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LOC", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LOC", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_LOC", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_PTO", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_PTO", 4, "Descontinuidade_Geom_PTO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_PTO", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_PTO", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_REL", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_REL", 4, "Descontinuidade_Geom_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_REL", 4, "Curva_Nivel", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_REL", 4, "Curva_Forma", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_REL", 4, "Curva_Batimetrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_REL", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_REL", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_REL", 4, "Dolina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_REL", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_REL", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_REL", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_SAU", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_SAU", 4, "Descontinuidade_Geom_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_SAU", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_SAU", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_SAU", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_TRA", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Descontinuidade_Geom_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Descontinuidade_Geom_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Area_Nao_Mapeada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Funicular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Caminho_Aereo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Faixa_Seguranca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Travessia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Travessia_Pedestre", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Tunel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Cremalheira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Local_Critico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_TRA", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Descontinuidade_Geom_VEG", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Descontinuidade_Geom_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Area_Nao_Mapeada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
#     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);#
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Descontinuidade_Geom_VEG", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Nao_Mapeada", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Ponto_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Sumidouro_Vertedouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Fonte_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Ponto_Inicio_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Confluencia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Curva_Nivel", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Curva_Forma", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Ponto_Cotado_Batimetrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Gruta_Caverna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Pico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Entroncamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Passagem_Nivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Identific_Trecho_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Girador_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Ponto_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Torre_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Torre_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Ponto_Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Antena_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Pto_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Nome_Local", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 1, "Marco_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Nao_Mapeada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Bacia_Hidrografica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Comporta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Foz_Maritima", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Corredeira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Natureza_Fundo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Rocha_Em_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Banco_Areia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Terreno_Suj_Inundacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Umida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Reservatorio_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Curva_Batimetrica", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Dolina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Funicular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Caminho_Aereo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Faixa_Seguranca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Travessia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Galeria_Bueiro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Travessia_Pedestre", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Tunel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Cremalheira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Fundeadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Local_Critico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Zona_Linhas_Energia_Com", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Est_Gerad_Energia_Eletr", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Hidreletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Termeletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Plataforma", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Equip_Agropec", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Nao_Mapeada", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "HIDROGRAFIA", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Bacia_Hidrografica", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bacia_Hidrografica", 4, "Bacia_Hidrografica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bacia_Hidrografica", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Curso_Dagua", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trecho_Curso_Dagua", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trecho_Drenagem", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 1, "Ponto_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 1, "Sumidouro_Vertedouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 1, "Fonte_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 1, "Ponto_Inicio_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 1, "Confluencia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 1, "Natureza_Fundo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 1, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 1, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 1, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 1, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Comporta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Sumidouro_Vertedouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Ponto_Inicio_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Foz_Maritima", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Corredeira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Rocha_Em_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Banco_Areia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Terreno_Suj_Inundacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Umida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Travessia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Galeria_Bueiro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Travessia_Pedestre", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Fundeadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Drenagem", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Massa_Dagua", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 1, "Ponto_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 1, "Sumidouro_Vertedouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 1, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 1, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 1, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 1, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Comporta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Foz_Maritima", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Corredeira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Rocha_Em_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Banco_Areia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Terreno_Suj_Inundacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Umida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Reservatorio_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Travessia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Travessia_Pedestre", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Massa_Dagua", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trecho_Massa_Dagua", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 1, "Ponto_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 1, "Sumidouro_Vertedouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 1, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 1, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 1, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 1, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Comporta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Foz_Maritima", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Corredeira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Rocha_Em_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Banco_Areia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Terreno_Suj_Inundacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Umida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Reservatorio_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Travessia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Travessia_Pedestre", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Massa_Dagua", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Limite_Massa_Dagua", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Comporta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Foz_Maritima", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Rocha_Em_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Terreno_Suj_Inundacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Umida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Massa_Dagua", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponto_Drenagem", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Drenagem", 0, "Ponto_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Drenagem", 1, "Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Drenagem", 1, "Corredeira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Drenagem", 1, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Drenagem", 1, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Drenagem", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Barragem", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 1, "Natureza_Fundo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Comporta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Foz_Maritima", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Rocha_Em_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Banco_Areia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Terreno_Suj_Inundacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Umida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Reservatorio_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "Curva_Nivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Barragem", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Comporta", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Comporta", 4, "Comporta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Comporta", 4, "Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Comporta", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Comporta", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Comporta", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Comporta", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Comporta", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Comporta", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Comporta", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Sumidouro_Vertedouro", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sumidouro_Vertedouro", 0, "Sumidouro_Vertedouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sumidouro_Vertedouro", 1, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sumidouro_Vertedouro", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Queda_Dagua", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Queda_Dagua", 1, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Queda_Dagua", 1, "Simb_Corred_Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Queda_Dagua", 4, "Corredeira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Queda_Dagua", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Queda_Dagua", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Queda_Dagua", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Queda_Dagua", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Queda_Dagua", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Queda_Dagua", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Fonte_Dagua", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Fonte_Dagua", 0, "Fonte_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Fonte_Dagua", 0, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Fonte_Dagua", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponto_Inicio_Drenagem", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Inicio_Drenagem", 0, "Ponto_Inicio_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Inicio_Drenagem", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Foz_Maritima", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Foz_Maritima", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Rocha_Em_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Terreno_Suj_Inundacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Umida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Foz_Maritima", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Confluencia", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Confluencia", 0, "Confluencia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Confluencia", 1, "Corredeira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Confluencia", 1, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Confluencia", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Corredeira", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Corredeira", 1, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Corredeira", 1, "Simb_Corred_Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Corredeira", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Corredeira", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Corredeira", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Corredeira", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Corredeira", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Corredeira", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Natureza_Fundo", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Natureza_Fundo", 0, "Natureza_Fundo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Natureza_Fundo", 1, "Rocha_Em_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Natureza_Fundo", 1, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Natureza_Fundo", 1, "Banco_Areia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Natureza_Fundo", 1, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Natureza_Fundo", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Rocha_Em_Agua", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 1, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Rocha_Em_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Banco_Areia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha_Em_Agua", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Recife", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 1, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "Recife", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "Banco_Areia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Recife", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Banco_Areia", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Banco_Areia", 1, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Banco_Areia", 4, "Banco_Areia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Banco_Areia", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Banco_Areia", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Banco_Areia", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Banco_Areia", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Banco_Areia", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Banco_Areia", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Quebramar_Molhe", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Quebramar_Molhe", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Terreno_Suj_Inundacao", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Terreno_Suj_Inundacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Umida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
#     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);#
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);#
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);#
     st := topoprim_add_rule(vac_id, "Terreno_Suj_Inundacao", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Umida", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Umida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Umida", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Reservatorio_Hidrico", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Reservatorio_Hidrico", 4, "Reservatorio_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Reservatorio_Hidrico", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Reservatorio_Hidrico", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ilha", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 1, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 1, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Travessia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Travessia_Pedestre", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ilha", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "VEGETACAO", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Campo", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Campo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Vegetacao", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Veg_Desconhecida", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Veg_Desconhecida", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Desconhecida", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Veg_Natural", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Veg_Cultivada", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Veg_Cultivada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Cultivada", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Mangue", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Mangue", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Mangue", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Brejo_Pantano", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Brejo_Pantano", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Brejo_Pantano", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Veg_Restinga", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Veg_Restinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Restinga", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Campinarana", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Campinarana", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campinarana", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Floresta", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Floresta", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Floresta", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Macega_Chavascal", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Macega_Chavascal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Macega_Chavascal", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Cerrado_Cerradao", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Cerrado_Cerradao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cerrado_Cerradao", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Caatinga", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Caatinga", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caatinga", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Estepe", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Estepe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Estepe", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "RELEVO", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Isolinha_Hipsografica", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Curva_Nivel", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Curva_Nivel", 1, "Simb_Curva_Mestra", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Curva_Nivel", 4, "Curva_Nivel", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Curva_Nivel", 4, "Curva_Forma", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Curva_Nivel", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Curva_Forma", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Curva_Forma", 4, "Curva_Forma", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Curva_Forma", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Curva_Batimetrica", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Curva_Batimetrica", 4, "Curva_Batimetrica", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Curva_Batimetrica", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponto_Hipsometrico", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponto_Cotado_Altimetrico", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Cotado_Altimetrico", 0, "Ponto_Cotado_Altimetrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Cotado_Altimetrico", 0, "Pico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponto_Cotado_Batimetrico", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Cotado_Batimetrico", 0, "Ponto_Cotado_Batimetrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Cotado_Batimetrico", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Elemento_Fisiografico", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Elemento_Fisiog_Natural", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Elemento_Fisiog_Natural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Elemento_Fisiog_Natural", 4, "Simb_Elemento_Fisiog_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Alter_Fisiog_Antropica", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Alter_Fisiog_Antropica", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Terreno_Exposto", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Terreno_Exposto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terreno_Exposto", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Dolina", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dolina", 4, "Dolina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dolina", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Duna", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Duna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Duna", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Gruta_Caverna", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Gruta_Caverna", 0, "Gruta_Caverna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Gruta_Caverna", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Pico", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pico", 0, "Pico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pico", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Rocha", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 1, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Rocha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Rocha", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Veg_Area_Contato", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Veg_Area_Contato", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Veg_Area_Contato", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "SISTEMA_DE_TRANSPORTE", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Estrut_Transporte", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Estrut_Apoio", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Funicular", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Funicular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Funicular", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Caminho_Aereo", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caminho_Aereo", 4, "Caminho_Aereo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caminho_Aereo", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Caminho_Aereo", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoprim_add_rule(vac_id, "Caminho_Aereo", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Patio", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Patio", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Estrut_Transporte", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Estrut_Transporte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Estrut_Transporte", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Faixa_Seguranca", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Faixa_Seguranca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Faixa_Seguranca", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Travessia", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 1, "Ponto_Rodoviario_Ferrov", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Travessia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Entroncamento", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 0, "Entroncamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Entroncamento", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Passagem_Nivel", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 0, "Passagem_Nivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passagem_Nivel", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Galeria_Bueiro", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Galeria_Bueiro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Galeria_Bueiro", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponte_Pass_Elevada_Viaduto", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Travessia_Pedestre", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Travessia_Pedestre", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Travessia_Pedestre", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Tunel", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Tunel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Tunel", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Subsistema_Rodoviario", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Via_Rodoviaria", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Rodoviaria", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Rodoviaria", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Posto_Combustivel", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Posto_Combustivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Combustivel", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trecho_Rodoviario", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 1, "Identific_Trecho_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 1, "Ponto_Rodoviario_Ferrov", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 1, "Simb_Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Rodoviario", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Identific_Trecho_Rod", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 0, "Identific_Trecho_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Identific_Trecho_Rod", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ciclovia", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ciclovia", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Arruamento", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arruamento", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trilha_Picada", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trilha_Picada", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponto_Rodoviario_Ferrov", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 0, "Ponto_Rodoviario_Ferrov", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Tunel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Edif_Rodoviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Galeria_Bueiro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Entroncamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Patio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "Passagem_Nivel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Rodoviario_Ferrov", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Subsistema_Ferroviario", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Via_Ferrea", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Metro_Ferroviaria", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Metro_Ferroviaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Metro_Ferroviaria", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Girador_Ferroviario", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Girador_Ferroviario", 0, "Girador_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Girador_Ferroviario", 1, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Girador_Ferroviario", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trecho_Ferroviario", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 1, "Simb_Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Cremalheira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Ferroviario", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Cremalheira", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Cremalheira", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cremalheira", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Subsistema_Hidroviario", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Hidrovia", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Obstaculo_Navegacao", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Obstaculo_Navegacao", 1, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Obstaculo_Navegacao", 4, "Obstaculo_Navegacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Obstaculo_Navegacao", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Obstaculo_Navegacao", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trecho_Hidroviario", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 1, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 1, "Fundeadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 1, "Simb_Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Hidroviario", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Complexo_Portuario", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Sinalizacao", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sinalizacao", 0, "Sinalizacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sinalizacao", 1, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sinalizacao", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Eclusa", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Eclusa", 4, "Eclusa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Eclusa", 4, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Eclusa", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Eclusa", 4, "Fundeadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Eclusa", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Eclusa", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponto_Hidroviario", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Hidroviario", 0, "Ponto_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Hidroviario", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Atracadouro", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Atracadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Atracadouro", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Fundeadouro", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Fundeadouro", 4, "Fundeadouro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Fundeadouro", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Subsistema_Aeroportuario", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Const_Aeroportuaria", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Const_Aeroportuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Aeroportuaria", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Complexo_Aeroportuario", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Pista_Ponto_Pouso", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Ponto_Pouso", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Subsistema_De_Dutos", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Duto", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Duto", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Antena_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Duto", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trecho_Duto", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 1, "Ponto_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 1, "Simb_Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 4, "Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 4, "Local_Critico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Duto", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponto_Duto", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Duto", 0, "Ponto_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Duto", 1, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Duto", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Local_Critico", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Local_Critico", 4, "Local_Critico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Local_Critico", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Local_Critico", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "ENERGIA_E_COMUNICACOES", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Complexo_Gerad_Energ_Eletr", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Energia", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 1, "Bandeira_Edif", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Energia", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Energia_Eletrica", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Energia_Eletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Energia_Eletrica", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Zona_Linhas_Energia_Com", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Zona_Linhas_Energia_Com", 4, "Zona_Linhas_Energia_Com", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Zona_Linhas_Energia_Com", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Torre", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Torre_Energia", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Torre_Energia", 0, "Torre_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Torre_Energia", 1, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Torre_Energia", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Torre_Comunic", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Torre_Comunic", 0, "Torre_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Torre_Comunic", 1, "Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Torre_Comunic", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trecho_Comunic_Energia", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trecho_Energia", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Energia", 1, "Ponto_Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Energia", 1, "Simb_Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Energia", 4, "Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Energia", 4, "Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Energia", 4, "Est_Gerad_Energia_Eletr", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Energia", 4, "Hidreletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Energia", 4, "Termeletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Energia", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Energia", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Energia", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Trecho_Comunic", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Comunic", 1, "Antena_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Comunic", 1, "Simb_Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Comunic", 4, "Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Comunic", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Comunic", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Comunic", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Trecho_Comunic", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponto_Trecho_Energia", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Trecho_Energia", 0, "Ponto_Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Trecho_Energia", 1, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Trecho_Energia", 1, "Est_Gerad_Energia_Eletr", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Trecho_Energia", 1, "Hidreletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Trecho_Energia", 1, "Termeletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Trecho_Energia", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Subest_Transm_Energ_Eletr", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Est_Gerad_Energia_Eletr", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Est_Gerad_Energia_Eletr", 4, "Est_Gerad_Energia_Eletr", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Est_Gerad_Energia_Eletr", 4, "Hidreletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Est_Gerad_Energia_Eletr", 4, "Termeletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Est_Gerad_Energia_Eletr", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Hidreletrica", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hidreletrica", 4, "Hidreletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hidreletrica", 4, "Termeletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hidreletrica", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hidreletrica", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Termeletrica", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Termeletrica", 4, "Termeletrica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Termeletrica", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Termeletrica", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Grupo_Transform_Energ", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Grupo_Transform_Energ", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Grupo_Transform_Energ", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Comunicacao", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Comunicacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comunicacao", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Complexo_Comunicacao", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Comunic", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 1, "Bandeira_Edif", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comunic", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Antena_Comunic", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Antena_Comunic", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "ABAST_AGUA_E_SANEAM_BASICO", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Complexo_Abast_Agua", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Abast_Agua", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Abast_Agua", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Abast_Agua", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Abast_Agua", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Dep_Abast_Agua", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Dep_Abast_Agua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Abast_Agua", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Complexo_Saneamento", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Saneamento", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saneamento", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Saneamento", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saneamento", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Dep_Saneamento", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Dep_Saneamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Dep_Saneamento", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Cemiterio", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Cemiterio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cemiterio", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Constr_Portuaria", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Constr_Portuaria", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Portuaria", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "EDUCACAO_E_CULTURA", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Ensino", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Ensino", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ensino", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Ensino", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 1, "Bandeira_Edif", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Ensino", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ensino", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Religiosa", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Religiosa", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Religiosa", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Religiosa", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 1, "Bandeira_Edif", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Religiosa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Religiosa", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Const_Turistica", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Const_Turistica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Turistica", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponto_Turistico", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponto_Turistico", 4, "Ponto_Turistico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Ruinas", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Ruinas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ruinas", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ruina", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Ruina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ruina", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Complexo_Lazer", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Lazer", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Lazer", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Piscina", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Piscina", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Piscina", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Const_Lazer", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Const_Lazer", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Const_Lazer", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Campo_Quadra", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Campo_Quadra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Campo_Quadra", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Pista_Competicao", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pista_Competicao", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Arquibancada", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Arquibancada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Arquibancada", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Coreto_Tribuna", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Coreto_Tribuna", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Coreto_Tribuna", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "ADMINISTRACAO_PUBLICA", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Pub_Civil", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Instituicao_Publica", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Pub_Militar", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Pub_Militar", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 1, "Pto_Ref_Geod_Topo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 1, "Marco_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Marco_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Militar", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Pub_Civil", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 1, "Pto_Ref_Geod_Topo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 1, "Marco_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Marco_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Pub_Civil", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Pub_Civil", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 1, "Bandeira_Edif", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edif_Pub_Civil", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Civil", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Posto_Fiscal", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Posto_Fiscal", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Fiscal", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Posto_Pol_Rod", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Posto_Pol_Rod", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Posto_Pol_Rod", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Pub_Militar", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 1, "Bandeira_Edif", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Edif_Pub_Militar", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Pub_Militar", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "ESTRUTURA_ECONOMICA", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Comerc_Serv", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Comerc_Serv", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Edif_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Comerc_Serv", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Comerc_Serv", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Comerc_Serv", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Comerc_Serv", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Deposito_Geral", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Deposito_Geral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Deposito_Geral", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Ext_Mineral", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Ext_Mineral", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Ext_Mineral", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Ext_Mineral", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Edif_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Ext_Mineral", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ext_Mineral", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ext_Mineral", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Plataforma", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Plataforma", 4, "Plataforma", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Plataforma", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Industrial", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Industrial", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Industrial", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Industrial", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 1, "Bandeira_Edif", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Edif_Industrial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Industrial", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Agrop_Ext_Veg_Pesca", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Agrop_Ext_Veg_Pesca", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Agrop_Ext_Veg_Pesca", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Edif_Agrop_Ext_Veg_Pesca", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Agrop_Ext_Veg_Pesca", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Agrop_Ext_Veg_Pesca", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Equip_Agropec", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Equip_Agropec", 4, "Equip_Agropec", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Equip_Agropec", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Frigorifico_Matadouro", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Madeireira", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "SAUDE_E_SERVICO_SOCIAL", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Saude", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Saude", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Saude", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Saude", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 1, "Bandeira_Edif", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Edif_Saude", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Saude", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Militar_Saude", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Pub_Saude", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Servico_Social", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Pub_Servico_Social", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Servico_Social", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Area_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Servico_Social", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Servico_Social", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Edif_Servico_Social", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Servico_Social", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "PONTOS_DE_REFERENCIA", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Pto_Geod_Topo_Controle", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Pto_Ref_Geod_Topo", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pto_Ref_Geod_Topo", 0, "Pto_Ref_Geod_Topo", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pto_Ref_Geod_Topo", 0, "Pto_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pto_Ref_Geod_Topo", 0, "Marco_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Pto_Controle", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pto_Controle", 0, "Pto_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Est_Med_Fenomenos", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Area_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Est_Med_Fenomenos", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Est_Med_Fenomenos", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Constr_Est_Med", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Edif_Constr_Est_Med", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Constr_Est_Med", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Pto_Est_Med_Fenomenos", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pto_Est_Med_Fenomenos", 0, "Pto_Est_Med_Fenomenos", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pto_Est_Med_Fenomenos", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "LOCALIDADE", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Localidade", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Vila", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Vila", 0, "Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Vila", 0, "Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Vila", 0, "Aglomerado_Rural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Cidade", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cidade", 0, "Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Cidade", 0, "Aglomerado_Rural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Aglomerado_Rural", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Aglomerado_Rural", 0, "Aglomerado_Rural", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Complexo_Habitacional", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Nome_Local", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Nome_Local", 0, "Nome_Local", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Nome_Local", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Aldeia_Indigena", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edif_Habitacional", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Edif_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edif_Habitacional", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Edificacao", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Edificacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Edificacao", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Habitacional", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Area_Habitacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Habitacional", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Hab_Indigena", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Hab_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Hab_Indigena", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Urbana_Cidade", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Area_Urbana_Cidade", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Cidade", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Urbana_Isolada_Vila", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Area_Urbana_Isolada_Vila", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Urbana_Isolada_Vila", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Edificada", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Area_Edificada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Edificada", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Militar_Ensino", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Pub_Ensino", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Org_Religiosa_Ensino", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Via_Transporte", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Via_Transporte_Complexo", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Via_Transporte_Trecho", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Via_Transporte_Ponto", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "EDIFICACAO", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "AREA_DELIMITADORA", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Obra_Transporte", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Passag_Elevada_Viaduto", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Passag_Elevada_Viaduto", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Ponte", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Ponte", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_Geometria_Aproximada", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_Nome_NomeAbrev", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_Lista_Classes_Seccionadoras", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Condutor_Hidrico", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 1, "Simb_Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Condutor_Hidrico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Condutor_Hidrico", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "LIMITES", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Marco_De_Limite", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 1, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Marco_De_Limite", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Delimitacao_Fisica", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Delimitacao_Fisica", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Particular", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Particular", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Linha_De_Limite", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Linha_De_Limite", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Linha_De_Limite", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Limite_Politico_Adm", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Politico_Adm", 4, "Simb_Limite_Politico_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Limite_Intra_Munic_Adm", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Limite_Intra_Munic_Adm", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Intra_Munic_Adm", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Limite_Operacional", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Limite_Operacional", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Operacional", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Outros_Limites_Oficiais", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Outros_Limites_Oficiais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outros_Limites_Oficiais", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Limite_Area_Especial", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Area_Especial", 4, "Simb_Limite_Area_Especial", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Limite_Particular", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Limite_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Limite_Particular", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_De_Litigio", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Area_De_Litigio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_De_Litigio", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Politico_Adm", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Pais", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Pais", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Pais", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Unidade_Federacao", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Unidade_Federacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Federacao", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Municipio", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Municipio", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Municipio", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Distrito", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Distrito", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Sub_Distrito", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Sub_Distrito", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sub_Distrito", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Regiao_Administrativa", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "Regiao_Administrativa", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Regiao_Administrativa", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Bairro", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bairro", 4, "Bairro", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bairro", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bairro", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bairro", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bairro", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bairro", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bairro", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bairro", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bairro", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bairro", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Especial", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Terra_Publica", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Publica", 4, "Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Publica", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Publica", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Publica", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Publica", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Publica", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Publica", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Publica", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Publica", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Uso_Comunitario", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Uso_Comunitario", 4, "Area_Uso_Comunitario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Uso_Comunitario", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Uso_Comunitario", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Uso_Comunitario", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Uso_Comunitario", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Uso_Comunitario", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Uso_Comunitario", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Uso_Comunitario", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Terra_Indigena", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Indigena", 4, "Terra_Indigena", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Indigena", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Indigena", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Indigena", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Indigena", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Terra_Indigena", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Area_Desenv_Controle", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Desenv_Controle", 4, "Area_Desenv_Controle", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Desenv_Controle", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Desenv_Controle", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Desenv_Controle", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Desenv_Controle", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Area_Desenv_Controle", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Unidades_Protegidas", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Outras_Unid_Protegidas", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outras_Unid_Protegidas", 4, "Outras_Unid_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outras_Unid_Protegidas", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outras_Unid_Protegidas", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outras_Unid_Protegidas", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Outras_Unid_Protegidas", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Unidade_Conservacao", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Unidade_Conserv_Nao_SNUC", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Conserv_Nao_SNUC", 4, "Unidade_Conserv_Nao_SNUC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Conserv_Nao_SNUC", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Conserv_Nao_SNUC", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Conserv_Nao_SNUC", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Unidade_Conservacao_SNUC", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Unidade_Uso_Sustentavel", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Uso_Sustentavel", 4, "Unidade_Uso_Sustentavel", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Uso_Sustentavel", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unidade_Uso_Sustentavel", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Unid_Protecao_Integral", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unid_Protecao_Integral", 4, "Unid_Protecao_Integral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Unid_Protecao_Integral", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "limitegeografico", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "limitegeografico", 4, "limitegeografico", raio_limite_geo);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "TOPONIMIA", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Curva_Mestra", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Curva_Mestra", 0, "Simb_Curva_Mestra", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Hidrografia", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Corred_Queda_Dagua", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Corred_Queda_Dagua", 1, "Simb_Corred_Queda_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Trecho_Ferroviario", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Trecho_Ferroviario", 0, "Simb_Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Trecho_Hidroviario", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Trecho_Hidroviario", 0, "Simb_Trecho_Hidroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Trecho_Rodoviario", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Trecho_Rodoviario", 0, "Simb_Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Trecho_Duto", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Trecho_Duto", 0, "Simb_Trecho_Duto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Trecho_Energia", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Trecho_Energia", 0, "Simb_Trecho_Energia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Trecho_Comunic", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Trecho_Comunic", 0, "Simb_Trecho_Comunic", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Limite_Politico_Adm", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Limite_Area_Especial", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Sentido_Corrente", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Sentido_Corrente", 0, "Sentido_Corrente", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Bandeira_Edif", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Bandeira_Edif", 0, "Bandeira_Edif", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Vegetacao", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Vegetacao", 0, "Simb_Vegetacao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_Simb_Texto", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Texto_Generico_Edicao", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Texto_Generico_Edicao_Mini", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Area_Ag_Extr_V_Pesc", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Area_Ag_Extr_V_Pesc", 0, "Simb_Area_Ag_Extr_V_Pesc", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Ext_Mineral", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Ext_Mineral", 0, "Simb_Ext_Mineral", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Elemento_Fisiog_Nat", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Ilha", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Ilha", 0, "Simb_Ilha", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Area_Uso_Comunit_TI", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Area_Uso_Comunit_TI", 0, "Simb_Area_Uso_Comunit_TI", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Terra_Publica", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Terra_Publica", 0, "Simb_Terra_Publica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Unidades_Protegidas", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Unidades_Protegidas", 0, "Simb_Unidades_Protegidas", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "Simb_Area_Particular", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "Simb_Area_Particular", 0, "Simb_Area_Particular", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_CLASSES_TEMPORARIAS", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "contornos", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_ADM", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_ADM", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_ASB", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_EDU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_ENC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_ECO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_HID", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_LIM", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_LOC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_PTO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ADM", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_ASB", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_ASB", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_EDU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_ENC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_ECO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_HID", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_LIM", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_LOC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_PTO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ASB", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_EDU", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_EDU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_ENC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_ECO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_HID", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_LIM", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_LOC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_PTO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_EDU", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_ENC", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_ENC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_ECO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_HID", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_LIM", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_LOC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_PTO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ENC", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_ECO", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_ECO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_HID", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_LIM", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_LOC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_PTO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_ECO", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_HID", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "contorno_de_HID", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "contorno_de_LIM", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "contorno_de_LOC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "contorno_de_PTO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "contorno_de_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_HID", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_LIM", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "contorno_de_LIM", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "contorno_de_LOC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "contorno_de_PTO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "contorno_de_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LIM", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_LOC", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "contorno_de_LOC", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "contorno_de_PTO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "contorno_de_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_LOC", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_PTO", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "contorno_de_PTO", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "contorno_de_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_PTO", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_REL", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "contorno_de_REL", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_SAU", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "contorno_de_SAU", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_SAU", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_TRA", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "contorno_de_TRA", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_TRA", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_VEG", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "contorno_de_VEG", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_VEG", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_REL_Elem_Fis_Nat", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "contorno_de_REL_Elem_Fis_Nat", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_REL_Elem_Fis_Nat", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "contorno_de_Espaco_Delimitado", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Trecho_Drenagem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Trecho_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Limite_Massa_Dagua", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Barragem", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Quebramar_Molhe", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Alter_Fisiog_Antropica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Trecho_Rodoviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Ciclovia", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Arruamento", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Trilha_Picada", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Trecho_Ferroviario", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Pista_Ponto_Pouso", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Pista_Competicao", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Passag_Elevada_Viaduto", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Ponte", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "Delimitacao_Fisica", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "limitegeografico", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoprim_add_rule(vac_id, "contorno_de_Espaco_Delimitado", 4, "contorno_de_Espaco_Delimitado", edgv_raio_topologia);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoframe_make_spaghetti_class(vac_id, "area_criada_inner_ring", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_criada_outer_ring", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroides", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_ASB", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_ADM", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_EDU", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_ENC", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_ECO", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_HID", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_HID_Massa_Dagua", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_LIM", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_LOC", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_PTO", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_REL", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_SAU", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_TRA", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_VEG", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "areas_genericas", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_ASB", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_REL_Elem_Fis_Nat", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "centroide_de_Espaco_Delimitado", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_ADM", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_EDU", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_ENC", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_ECO", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_HID", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_HID_Massa_Dagua", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_LIM", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_LOC", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_PTO", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_REL", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_SAU", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_TRA", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_VEG", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_REL_Elem_Fis_Nat", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_Espaco_Delimitado", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_de_pesquisa", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "area_relatorio_ligacao", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_Flags", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_marca_ponta_livre", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_flag_ponta_livre", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_flag_peq_seg", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_flag_peq_ang", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_flag_elem_prox", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_flag_int_loop", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_flag_atrib_diferente", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);
     st := topoframe_make_spaghetti_class(vac_id, "_cotador_curva_nivel", true);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topoprim_commit_rule_set(vac_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := topo_frame_create_manifold(vac_id, "default", "goth-node", "goth-link", "goth-face", false);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     st := goth_printf(frame_stdout, "\nTOPOLOGIA FINAL INSTALADA COM SUCESSO.\n\n");
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return GOTH__NORMAL;
END;

function integer DSG_EDGV_instala_topologia(FRAME    frame_id,
                                            string   toggle_str)
BEGIN
     integer  st;
     VAC      vac_id;

     st := frame_fetch_value_resources(frame_id, "Vac", vac_id);
     if (st != GOTH__NORMAL) then return error_report_status(st);

     return error_check(_DSG_EDGV_instala_topologia(vac_id, toggle_str));
END;