CREATE SCHEMA edgv;CREATE SCHEMA dominios;CREATE EXTENSION postgis;SET search_path TO pg_catalog,public,edgv,dominios;CREATE TABLE public.db_metadata(	 edgvversion varchar(50) NOT NULL DEFAULT 'EDGV 3.0 Orto',	 dbimplversion varchar(50) NOT NULL DEFAULT '1.0',	 CONSTRAINT edgvversioncheck CHECK (edgvversion = 'EDGV 3.0 Orto'));INSERT INTO public.db_metadata (edgvversion, dbimplversion) VALUES ('EDGV 3.0 Orto','1.0');CREATE TABLE dominios.booleano (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT booleano_pk PRIMARY KEY (code));INSERT INTO dominios.booleano (code,code_name) VALUES (1,'Sim (1)');INSERT INTO dominios.booleano (code,code_name) VALUES (2,'Não (2)');INSERT INTO dominios.booleano (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.booleano OWNER TO postgres;CREATE TABLE dominios.tipo_ocupacao_solo (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipo_ocupacao_solo_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_ocupacao_solo (code,code_name) VALUES (101,'Cemitério - Crematório (101)');INSERT INTO dominios.tipo_ocupacao_solo (code,code_name) VALUES (102,'Cemitério Parque (102)');INSERT INTO dominios.tipo_ocupacao_solo (code,code_name) VALUES (103,'Cemitério Vertical (103)');INSERT INTO dominios.tipo_ocupacao_solo (code,code_name) VALUES (104,'Cemitério Comum (104)');INSERT INTO dominios.tipo_ocupacao_solo (code,code_name) VALUES (105,'Cemitério - Túmulo isolado (105)');INSERT INTO dominios.tipo_ocupacao_solo (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_ocupacao_solo OWNER TO postgres;CREATE TABLE dominios.indice (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT indice_pk PRIMARY KEY (code));INSERT INTO dominios.indice (code,code_name) VALUES (1,'Mestra (1)');INSERT INTO dominios.indice (code,code_name) VALUES (2,'Normal (2)');INSERT INTO dominios.indice (code,code_name) VALUES (3,'Auxiliar (3)');INSERT INTO dominios.indice (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.indice OWNER TO postgres;CREATE TABLE dominios.tipo_toponimo_fisiografico (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipo_toponimo_fisiografico_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (1,'Serra (1)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (2,'Morro (2)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (3,'Montanha (3)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (4,'Chapada (4)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (5,'Maciço (5)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (6,'Planalto (6)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (7,'Planície (7)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (9,'Península (9)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (10,'Ponta (10)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (11,'Cabo (11)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (12,'Praia (12)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (17,'Pico (17)');INSERT INTO dominios.tipo_toponimo_fisiografico (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_toponimo_fisiografico OWNER TO postgres;CREATE TABLE dominios.tipo_elemento_hidrografico (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipo_elemento_hidrografico_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_elemento_hidrografico (code,code_name) VALUES (9,'Cachoeira (9)');INSERT INTO dominios.tipo_elemento_hidrografico (code,code_name) VALUES (10,'Salto (10)');INSERT INTO dominios.tipo_elemento_hidrografico (code,code_name) VALUES (11,'Catarata (11)');INSERT INTO dominios.tipo_elemento_hidrografico (code,code_name) VALUES (12,'Corredeira (12)');INSERT INTO dominios.tipo_elemento_hidrografico (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_elemento_hidrografico OWNER TO postgres;CREATE TABLE dominios.situacao_em_poligono (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT situacao_em_poligono_pk PRIMARY KEY (code));INSERT INTO dominios.situacao_em_poligono (code,code_name) VALUES (1,'Fora de polígono (1)');INSERT INTO dominios.situacao_em_poligono (code,code_name) VALUES (2,'Trecho principal (2)');INSERT INTO dominios.situacao_em_poligono (code,code_name) VALUES (3,'Trecho secundário (3)');INSERT INTO dominios.situacao_em_poligono (code,code_name) VALUES (4,'Trecho compartilhado (4)');INSERT INTO dominios.situacao_em_poligono (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.situacao_em_poligono OWNER TO postgres;CREATE TABLE dominios.tipo_trecho_duto (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipo_trecho_duto_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (101,'Calha - Água pluvial (101)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (201,'Correia transp - Minério (201)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (202,'Correia transp - Grãos (202)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (298,'Correia transp - Outros (298)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (300,'Duto – Desconhecido (300)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (301,'Duto – Água (301)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (302,'Duto – Óleo (302)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (303,'Duto – Gasolina (303)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (304,'Duto – Álcool (304)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (305,'Duto – Querosene (305)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (306,'Duto – Petróleo (306)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (307,'Duto – Nafta (307)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (308,'Duto – Gás (308)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (309,'Duto – Efluentes (309)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (310,'Duto – Esgoto (310)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (398,'Duto – Outros (398)');INSERT INTO dominios.tipo_trecho_duto (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_trecho_duto OWNER TO postgres;CREATE TABLE dominios.posicao_relativa (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT posicao_relativa_pk PRIMARY KEY (code));INSERT INTO dominios.posicao_relativa (code,code_name) VALUES (2,'Superfície (2)');INSERT INTO dominios.posicao_relativa (code,code_name) VALUES (3,'Elevado (3)');INSERT INTO dominios.posicao_relativa (code,code_name) VALUES (4,'Emerso (4)');INSERT INTO dominios.posicao_relativa (code,code_name) VALUES (5,'Submerso (5)');INSERT INTO dominios.posicao_relativa (code,code_name) VALUES (6,'Subterrâneo (6)');INSERT INTO dominios.posicao_relativa (code,code_name) VALUES (14,'Isolada (14)');INSERT INTO dominios.posicao_relativa (code,code_name) VALUES (17,'Adjacente a edificação (17)');INSERT INTO dominios.posicao_relativa (code,code_name) VALUES (18,'Sobre edificação (18)');INSERT INTO dominios.posicao_relativa (code,code_name) VALUES (97,'Não aplicável (97)');INSERT INTO dominios.posicao_relativa (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.posicao_relativa OWNER TO postgres;CREATE TABLE dominios.tipo_elemento_energia (	 code smallint NOT NULL,	 code_name text NOT NULL,	 filter text NOT NULL,	 CONSTRAINT tipo_elemento_energia_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (601,'Grupo de transformadores (601)','Grupo de transformadores');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (302,'Linha de distribuição de energia (302)','Linha de energia');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (303,'Linha de transmissão de energia (303)','Linha de energia');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (1401,'Torre de energia (1401)','Torre de energia');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (1701,'Aerogerador (1701)','Aerogerador');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (405,'Estação geradora – Eólica (405)','Estação geradora de energia');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (408,'Estação geradora – Hidrelétrica (408)','Estação geradora de energia');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (407,'Estação geradora – Maré-motriz (407)','Estação geradora de energia');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (498,'Estação geradora – Outras (498)','Estação geradora de energia');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (406,'Estação geradora – Solar (406)','Estação geradora de energia');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (409,'Estação geradora – Termelétrica (409)','Estação geradora de energia');INSERT INTO dominios.tipo_elemento_energia (code,code_name, filter) VALUES (9999,'A SER PREENCHIDO (9999)','A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_elemento_energia OWNER TO postgres;CREATE TABLE dominios.tipo_pista_pouso (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipo_pista_pouso_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_pista_pouso (code,code_name) VALUES (9,'Pista de pouso (9)');INSERT INTO dominios.tipo_pista_pouso (code,code_name) VALUES (11,'Heliponto (11)');INSERT INTO dominios.tipo_pista_pouso (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_pista_pouso OWNER TO postgres;CREATE TABLE dominios.tipo_limite_especial (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipo_limite_especial_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (1,'Terra pública (1)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (2,'Terra indígena (2)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (3,'Quilombo (3)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (4,'Assentamento rural (4)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (5,'Unidade de Conservação (5)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (24,'Área de Proteção Ambiental – APA (24)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (25,'Área de Relevante Interesse Ecológico – ARIE (25)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (26,'Floresta – FLO (26)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (27,'Reserva de Desenvolvimento Sustentável – RDS (27)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (28,'Reserva Extrativista – RESEX (28)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (29,'Reserva de Fauna – REFAU (29)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (30,'Reserva Particular do Patrimônio Natural – RPPN (30)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (31,'Estação Ecológica – ESEC (31)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (32,'Parque – PAR (32)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (33,'Monumento Natural – MONA (33)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (34,'Reserva Biológica – REBIO (34)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (35,'Refúgio de Vida Silvestre – RVS (35)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (36,'Área militar (36)');INSERT INTO dominios.tipo_limite_especial (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_limite_especial OWNER TO postgres;CREATE TABLE dominios.tipo_limite_legal (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipo_limite_legal_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_limite_legal (code,code_name) VALUES (1,'Limite Internacional (1)');INSERT INTO dominios.tipo_limite_legal (code,code_name) VALUES (2,'Limite Estadual (2)');INSERT INTO dominios.tipo_limite_legal (code,code_name) VALUES (3,'Limite Municipal (3)');INSERT INTO dominios.tipo_limite_legal (code,code_name) VALUES (4,'País (4)');INSERT INTO dominios.tipo_limite_legal (code,code_name) VALUES (5,'Unidade federacao (5)');INSERT INTO dominios.tipo_limite_legal (code,code_name) VALUES (6,'Municipio (6)');INSERT INTO dominios.tipo_limite_legal (code,code_name) VALUES (7,'Distrito (7)');INSERT INTO dominios.tipo_limite_legal (code,code_name) VALUES (8,'Sub distrito (8)');INSERT INTO dominios.tipo_limite_legal (code,code_name) VALUES (9,'Região administrativa (9)');INSERT INTO dominios.tipo_limite_legal (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_limite_legal OWNER TO postgres;CREATE TABLE dominios.tipo_linha_limites (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipo_linha_limites_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (2,'Contorno massa dágua (2)');INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (3,'Cumeada (3)');INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (4,'Linha seca (4)');INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (5,'Costa visível da carta (5)');INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (6,'Rodovia (6)');INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (7,'Ferrovia (7)');INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (8,'Trecho de drenagem (8)');INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (9,'Massa dágua (9)');INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (96,'Não identificado (96)');INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (97,'Não aplicável (97)');INSERT INTO dominios.tipo_linha_limites (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_linha_limites OWNER TO postgres;CREATE TABLE dominios.tipo_localidade (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipo_localidade_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_localidade (code,code_name) VALUES (1,'Cidade (1)');INSERT INTO dominios.tipo_localidade (code,code_name) VALUES (2,'Capital estadual (2)');INSERT INTO dominios.tipo_localidade (code,code_name) VALUES (3,'Capital federal (3)');INSERT INTO dominios.tipo_localidade (code,code_name) VALUES (4,'Vila (4)');INSERT INTO dominios.tipo_localidade (code,code_name) VALUES (5,'Aglomerado rural isolado – Núcleo (5)');INSERT INTO dominios.tipo_localidade (code,code_name) VALUES (6,'Aglomerado rural isolado – Povoado (6)');INSERT INTO dominios.tipo_localidade (code,code_name) VALUES (7,'Outros aglomerados rurais – Lugarejo (7)');INSERT INTO dominios.tipo_localidade (code,code_name) VALUES (8,'Nome local (8)');INSERT INTO dominios.tipo_localidade (code,code_name) VALUES (9,'Bairro (9)');INSERT INTO dominios.tipo_localidade (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_localidade OWNER TO postgres;CREATE TABLE dominios.tipo_edificacao (	 code smallint NOT NULL,	 code_name text NOT NULL,	 CONSTRAINT tipo_edificacao_pk PRIMARY KEY (code));INSERT INTO dominios.tipo_edificacao (code,code_name) VALUES (1212,'Agro - Sede operacional de fazenda (1212)');INSERT INTO dominios.tipo_edificacao (code,code_name) VALUES (1712,'Pub Mil - Aquartelamento (1712)');INSERT INTO dominios.tipo_edificacao (code,code_name) VALUES (2501,'Port - Edificação portuária (2501)');INSERT INTO dominios.tipo_edificacao (code,code_name) VALUES (9999,'A SER PREENCHIDO (9999)');ALTER TABLE dominios.tipo_edificacao OWNER TO postgres;CREATE TABLE edgv.cobter_massa_dagua_a(	 id serial NOT NULL,	 nome varchar(255),	 apresentar_simbologia smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT cobter_massa_dagua_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX cobter_massa_dagua_a_geom ON edgv.cobter_massa_dagua_a USING gist (geom);ALTER TABLE edgv.cobter_massa_dagua_a OWNER TO postgres;ALTER TABLE edgv.cobter_massa_dagua_a	 ADD CONSTRAINT cobter_massa_dagua_a_apresentar_simbologia_fk FOREIGN KEY (apresentar_simbologia)	 REFERENCES dominios.booleano (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.cobter_massa_dagua_a ALTER COLUMN apresentar_simbologia SET DEFAULT 9999;CREATE TABLE edgv.constr_ocupacao_solo_p(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT constr_ocupacao_solo_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX constr_ocupacao_solo_p_geom ON edgv.constr_ocupacao_solo_p USING gist (geom);ALTER TABLE edgv.constr_ocupacao_solo_p OWNER TO postgres;ALTER TABLE edgv.constr_ocupacao_solo_p	 ADD CONSTRAINT constr_ocupacao_solo_p_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_ocupacao_solo (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.constr_ocupacao_solo_p ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.elemnat_curva_nivel_l(	 id serial NOT NULL,	 cota integer NOT NULL,	 indice smallint NOT NULL,	 depressao smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT elemnat_curva_nivel_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX elemnat_curva_nivel_l_geom ON edgv.elemnat_curva_nivel_l USING gist (geom);ALTER TABLE edgv.elemnat_curva_nivel_l OWNER TO postgres;ALTER TABLE edgv.elemnat_curva_nivel_l	 ADD CONSTRAINT elemnat_curva_nivel_l_indice_fk FOREIGN KEY (indice)	 REFERENCES dominios.indice (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.elemnat_curva_nivel_l ALTER COLUMN indice SET DEFAULT 9999;ALTER TABLE edgv.elemnat_curva_nivel_l	 ADD CONSTRAINT elemnat_curva_nivel_l_depressao_fk FOREIGN KEY (depressao)	 REFERENCES dominios.booleano (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.elemnat_curva_nivel_l ALTER COLUMN depressao SET DEFAULT 9999;CREATE TABLE edgv.elemnat_toponimo_fisiografico_natural_l(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT elemnat_toponimo_fisiografico_natural_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX elemnat_toponimo_fisiografico_natural_l_geom ON edgv.elemnat_toponimo_fisiografico_natural_l USING gist (geom);ALTER TABLE edgv.elemnat_toponimo_fisiografico_natural_l OWNER TO postgres;ALTER TABLE edgv.elemnat_toponimo_fisiografico_natural_l	 ADD CONSTRAINT elemnat_toponimo_fisiografico_natural_l_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_toponimo_fisiografico (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.elemnat_toponimo_fisiografico_natural_l	 ADD CONSTRAINT elemnat_toponimo_fisiografico_natural_l_tipo_check 	 CHECK (tipo = ANY(ARRAY[1 :: SMALLINT, 12 :: SMALLINT, 9999 :: SMALLINT])); ALTER TABLE edgv.elemnat_toponimo_fisiografico_natural_l ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.elemnat_toponimo_fisiografico_natural_p(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT elemnat_toponimo_fisiografico_natural_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX elemnat_toponimo_fisiografico_natural_p_geom ON edgv.elemnat_toponimo_fisiografico_natural_p USING gist (geom);ALTER TABLE edgv.elemnat_toponimo_fisiografico_natural_p OWNER TO postgres;ALTER TABLE edgv.elemnat_toponimo_fisiografico_natural_p	 ADD CONSTRAINT elemnat_toponimo_fisiografico_natural_p_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_toponimo_fisiografico (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.elemnat_toponimo_fisiografico_natural_p	 ADD CONSTRAINT elemnat_toponimo_fisiografico_natural_p_tipo_check 	 CHECK (tipo = ANY(ARRAY[2 :: SMALLINT, 3 :: SMALLINT, 4 :: SMALLINT, 5 :: SMALLINT, 6 :: SMALLINT, 7 :: SMALLINT, 9 :: SMALLINT, 10 :: SMALLINT, 11 :: SMALLINT, 12 :: SMALLINT, 17 :: SMALLINT, 9999 :: SMALLINT])); ALTER TABLE edgv.elemnat_toponimo_fisiografico_natural_p ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.elemnat_ilha_p(	 id serial NOT NULL,	 nome varchar(255),	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT elemnat_ilha_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX elemnat_ilha_p_geom ON edgv.elemnat_ilha_p USING gist (geom);ALTER TABLE edgv.elemnat_ilha_p OWNER TO postgres;CREATE TABLE edgv.elemnat_ilha_a(	 id serial NOT NULL,	 nome varchar(255),	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT elemnat_ilha_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX elemnat_ilha_a_geom ON edgv.elemnat_ilha_a USING gist (geom);ALTER TABLE edgv.elemnat_ilha_a OWNER TO postgres;CREATE TABLE edgv.elemnat_elemento_hidrografico_p(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT elemnat_elemento_hidrografico_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX elemnat_elemento_hidrografico_p_geom ON edgv.elemnat_elemento_hidrografico_p USING gist (geom);ALTER TABLE edgv.elemnat_elemento_hidrografico_p OWNER TO postgres;ALTER TABLE edgv.elemnat_elemento_hidrografico_p	 ADD CONSTRAINT elemnat_elemento_hidrografico_p_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_elemento_hidrografico (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.elemnat_elemento_hidrografico_p ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.elemnat_ponto_cotado_p(	 id serial NOT NULL,	 cota real NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT elemnat_ponto_cotado_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX elemnat_ponto_cotado_p_geom ON edgv.elemnat_ponto_cotado_p USING gist (geom);ALTER TABLE edgv.elemnat_ponto_cotado_p OWNER TO postgres;CREATE TABLE edgv.elemnat_trecho_drenagem_l(	 id serial NOT NULL,	 nome varchar(255),	 situacao_em_poligono smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT elemnat_trecho_drenagem_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX elemnat_trecho_drenagem_l_geom ON edgv.elemnat_trecho_drenagem_l USING gist (geom);ALTER TABLE edgv.elemnat_trecho_drenagem_l OWNER TO postgres;ALTER TABLE edgv.elemnat_trecho_drenagem_l	 ADD CONSTRAINT elemnat_trecho_drenagem_l_situacao_em_poligono_fk FOREIGN KEY (situacao_em_poligono)	 REFERENCES dominios.situacao_em_poligono (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.elemnat_trecho_drenagem_l ALTER COLUMN situacao_em_poligono SET DEFAULT 9999;CREATE TABLE edgv.infra_trecho_hidroviario_l(	 id serial NOT NULL,	 nome varchar(255),	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT infra_trecho_hidroviario_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX infra_trecho_hidroviario_l_geom ON edgv.infra_trecho_hidroviario_l USING gist (geom);ALTER TABLE edgv.infra_trecho_hidroviario_l OWNER TO postgres;CREATE TABLE edgv.infra_trecho_duto_l(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 posicao_relativa smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT infra_trecho_duto_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX infra_trecho_duto_l_geom ON edgv.infra_trecho_duto_l USING gist (geom);ALTER TABLE edgv.infra_trecho_duto_l OWNER TO postgres;ALTER TABLE edgv.infra_trecho_duto_l	 ADD CONSTRAINT infra_trecho_duto_l_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_trecho_duto (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.infra_trecho_duto_l ALTER COLUMN tipo SET DEFAULT 9999;ALTER TABLE edgv.infra_trecho_duto_l	 ADD CONSTRAINT infra_trecho_duto_l_posicao_relativa_fk FOREIGN KEY (posicao_relativa)	 REFERENCES dominios.posicao_relativa (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.infra_trecho_duto_l	 ADD CONSTRAINT infra_trecho_duto_l_posicao_relativa_check 	 CHECK (posicao_relativa = ANY(ARRAY[2 :: SMALLINT, 3 :: SMALLINT, 4 :: SMALLINT, 5 :: SMALLINT, 6 :: SMALLINT, 9999 :: SMALLINT])); ALTER TABLE edgv.infra_trecho_duto_l ALTER COLUMN posicao_relativa SET DEFAULT 9999;CREATE TABLE edgv.infra_elemento_energia_l(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT infra_elemento_energia_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX infra_elemento_energia_l_geom ON edgv.infra_elemento_energia_l USING gist (geom);ALTER TABLE edgv.infra_elemento_energia_l OWNER TO postgres;ALTER TABLE edgv.infra_elemento_energia_l	 ADD CONSTRAINT infra_elemento_energia_l_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_elemento_energia (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.infra_elemento_energia_l ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.infra_elemento_energia_p(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT infra_elemento_energia_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX infra_elemento_energia_p_geom ON edgv.infra_elemento_energia_p USING gist (geom);ALTER TABLE edgv.infra_elemento_energia_p OWNER TO postgres;ALTER TABLE edgv.infra_elemento_energia_p	 ADD CONSTRAINT infra_elemento_energia_p_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_elemento_energia (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.infra_elemento_energia_p ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.infra_elemento_energia_a(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT infra_elemento_energia_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX infra_elemento_energia_a_geom ON edgv.infra_elemento_energia_a USING gist (geom);ALTER TABLE edgv.infra_elemento_energia_a OWNER TO postgres;ALTER TABLE edgv.infra_elemento_energia_a	 ADD CONSTRAINT infra_elemento_energia_a_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_elemento_energia (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.infra_elemento_energia_a ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.infra_ferrovia_l(	 id serial NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT infra_ferrovia_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX infra_ferrovia_l_geom ON edgv.infra_ferrovia_l USING gist (geom);ALTER TABLE edgv.infra_ferrovia_l OWNER TO postgres;CREATE TABLE edgv.infra_pista_pouso_p(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT infra_pista_pouso_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX infra_pista_pouso_p_geom ON edgv.infra_pista_pouso_p USING gist (geom);ALTER TABLE edgv.infra_pista_pouso_p OWNER TO postgres;ALTER TABLE edgv.infra_pista_pouso_p	 ADD CONSTRAINT infra_pista_pouso_p_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_pista_pouso (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.infra_pista_pouso_p ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.infra_via_deslocamento_l(	 id serial NOT NULL,	 sigla varchar(255),	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT infra_via_deslocamento_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX infra_via_deslocamento_l_geom ON edgv.infra_via_deslocamento_l USING gist (geom);ALTER TABLE edgv.infra_via_deslocamento_l OWNER TO postgres;CREATE TABLE edgv.llp_limite_especial_a(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 tipo_delimitacao smallint NOT NULL,	 geometria_aproximada smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT llp_limite_especial_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX llp_limite_especial_a_geom ON edgv.llp_limite_especial_a USING gist (geom);ALTER TABLE edgv.llp_limite_especial_a OWNER TO postgres;ALTER TABLE edgv.llp_limite_especial_a	 ADD CONSTRAINT llp_limite_especial_a_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_limite_especial (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_especial_a ALTER COLUMN tipo SET DEFAULT 9999;ALTER TABLE edgv.llp_limite_especial_a	 ADD CONSTRAINT llp_limite_especial_a_tipo_delimitacao_fk FOREIGN KEY (tipo_delimitacao)	 REFERENCES dominios.tipo_linha_limites (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_especial_a ALTER COLUMN tipo_delimitacao SET DEFAULT 9999;ALTER TABLE edgv.llp_limite_especial_a	 ADD CONSTRAINT llp_limite_especial_a_geometria_aproximada_fk FOREIGN KEY (geometria_aproximada)	 REFERENCES dominios.booleano (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_especial_a ALTER COLUMN geometria_aproximada SET DEFAULT 9999;CREATE TABLE edgv.llp_limite_especial_l(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 tipo_delimitacao smallint NOT NULL,	 geometria_aproximada smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT llp_limite_especial_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX llp_limite_especial_l_geom ON edgv.llp_limite_especial_l USING gist (geom);ALTER TABLE edgv.llp_limite_especial_l OWNER TO postgres;ALTER TABLE edgv.llp_limite_especial_l	 ADD CONSTRAINT llp_limite_especial_l_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_limite_especial (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_especial_l ALTER COLUMN tipo SET DEFAULT 9999;ALTER TABLE edgv.llp_limite_especial_l	 ADD CONSTRAINT llp_limite_especial_l_tipo_delimitacao_fk FOREIGN KEY (tipo_delimitacao)	 REFERENCES dominios.tipo_linha_limites (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_especial_l ALTER COLUMN tipo_delimitacao SET DEFAULT 9999;ALTER TABLE edgv.llp_limite_especial_l	 ADD CONSTRAINT llp_limite_especial_l_geometria_aproximada_fk FOREIGN KEY (geometria_aproximada)	 REFERENCES dominios.booleano (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_especial_l ALTER COLUMN geometria_aproximada SET DEFAULT 9999;CREATE TABLE edgv.llp_limite_legal_a(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 tipo_delimitacao smallint NOT NULL,	 geometria_aproximada smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT llp_limite_legal_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX llp_limite_legal_a_geom ON edgv.llp_limite_legal_a USING gist (geom);ALTER TABLE edgv.llp_limite_legal_a OWNER TO postgres;ALTER TABLE edgv.llp_limite_legal_a	 ADD CONSTRAINT llp_limite_legal_a_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_limite_legal (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_legal_a ALTER COLUMN tipo SET DEFAULT 9999;ALTER TABLE edgv.llp_limite_legal_a	 ADD CONSTRAINT llp_limite_legal_a_tipo_delimitacao_fk FOREIGN KEY (tipo_delimitacao)	 REFERENCES dominios.tipo_linha_limites (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_legal_a ALTER COLUMN tipo_delimitacao SET DEFAULT 9999;ALTER TABLE edgv.llp_limite_legal_a	 ADD CONSTRAINT llp_limite_legal_a_geometria_aproximada_fk FOREIGN KEY (geometria_aproximada)	 REFERENCES dominios.booleano (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_legal_a ALTER COLUMN geometria_aproximada SET DEFAULT 9999;CREATE TABLE edgv.llp_limite_legal_l(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 tipo_delimitacao smallint NOT NULL,	 geometria_aproximada smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT llp_limite_legal_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX llp_limite_legal_l_geom ON edgv.llp_limite_legal_l USING gist (geom);ALTER TABLE edgv.llp_limite_legal_l OWNER TO postgres;ALTER TABLE edgv.llp_limite_legal_l	 ADD CONSTRAINT llp_limite_legal_l_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_limite_legal (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_legal_l	 ADD CONSTRAINT llp_limite_legal_l_tipo_check 	 CHECK (tipo = ANY(ARRAY[1 :: SMALLINT, 2 :: SMALLINT, 3 :: SMALLINT, 9999 :: SMALLINT])); ALTER TABLE edgv.llp_limite_legal_l ALTER COLUMN tipo SET DEFAULT 9999;ALTER TABLE edgv.llp_limite_legal_l	 ADD CONSTRAINT llp_limite_legal_l_tipo_delimitacao_fk FOREIGN KEY (tipo_delimitacao)	 REFERENCES dominios.tipo_linha_limites (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_legal_l ALTER COLUMN tipo_delimitacao SET DEFAULT 9999;ALTER TABLE edgv.llp_limite_legal_l	 ADD CONSTRAINT llp_limite_legal_l_geometria_aproximada_fk FOREIGN KEY (geometria_aproximada)	 REFERENCES dominios.booleano (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_limite_legal_l ALTER COLUMN geometria_aproximada SET DEFAULT 9999;CREATE TABLE edgv.llp_localidade_p(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT llp_localidade_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX llp_localidade_p_geom ON edgv.llp_localidade_p USING gist (geom);ALTER TABLE edgv.llp_localidade_p OWNER TO postgres;ALTER TABLE edgv.llp_localidade_p	 ADD CONSTRAINT llp_localidade_p_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_localidade (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_localidade_p ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.llp_localidade_a(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT llp_localidade_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX llp_localidade_a_geom ON edgv.llp_localidade_a USING gist (geom);ALTER TABLE edgv.llp_localidade_a OWNER TO postgres;ALTER TABLE edgv.llp_localidade_a	 ADD CONSTRAINT llp_localidade_a_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_localidade (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.llp_localidade_a ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.constr_edificacao_a(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT constr_edificacao_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX constr_edificacao_a_geom ON edgv.constr_edificacao_a USING gist (geom);ALTER TABLE edgv.constr_edificacao_a OWNER TO postgres;ALTER TABLE edgv.constr_edificacao_a	 ADD CONSTRAINT constr_edificacao_a_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_edificacao (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.constr_edificacao_a ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.constr_edificacao_p(	 id serial NOT NULL,	 nome varchar(255),	 tipo smallint NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT constr_edificacao_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX constr_edificacao_p_geom ON edgv.constr_edificacao_p USING gist (geom);ALTER TABLE edgv.constr_edificacao_p OWNER TO postgres;ALTER TABLE edgv.constr_edificacao_p	 ADD CONSTRAINT constr_edificacao_p_tipo_fk FOREIGN KEY (tipo)	 REFERENCES dominios.tipo_edificacao (code) MATCH FULL	 ON UPDATE NO ACTION ON DELETE NO ACTION;ALTER TABLE edgv.constr_edificacao_p ALTER COLUMN tipo SET DEFAULT 9999;CREATE TABLE edgv.aux_area_nao_mapeada_a(	 id serial NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT aux_area_nao_mapeada_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX aux_area_nao_mapeada_a_geom ON edgv.aux_area_nao_mapeada_a USING gist (geom);ALTER TABLE edgv.aux_area_nao_mapeada_a OWNER TO postgres;CREATE TABLE edgv.aux_validacao_a(	 id serial NOT NULL,	 descricao varchar(255),	 subfase_id integer,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT aux_validacao_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX aux_validacao_a_geom ON edgv.aux_validacao_a USING gist (geom);ALTER TABLE edgv.aux_validacao_a OWNER TO postgres;CREATE TABLE edgv.aux_validacao_l(	 id serial NOT NULL,	 descricao varchar(255),	 subfase_id integer,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT aux_validacao_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX aux_validacao_l_geom ON edgv.aux_validacao_l USING gist (geom);ALTER TABLE edgv.aux_validacao_l OWNER TO postgres;CREATE TABLE edgv.aux_validacao_p(	 id serial NOT NULL,	 descricao varchar(255),	 subfase_id integer,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT aux_validacao_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX aux_validacao_p_geom ON edgv.aux_validacao_p USING gist (geom);ALTER TABLE edgv.aux_validacao_p OWNER TO postgres;CREATE TABLE edgv.aux_revisao_a(	 id serial NOT NULL,	 descricao varchar(255),	 subfase_id integer,	 corrigido boolean NOT NULL,	 justificativa varchar(255),	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT aux_revisao_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX aux_revisao_a_geom ON edgv.aux_revisao_a USING gist (geom);ALTER TABLE edgv.aux_revisao_a OWNER TO postgres;CREATE TABLE edgv.aux_revisao_l(	 id serial NOT NULL,	 descricao varchar(255),	 subfase_id integer,	 corrigido boolean NOT NULL,	 justificativa varchar(255),	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiLinestring, 31982),	 CONSTRAINT aux_revisao_l_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX aux_revisao_l_geom ON edgv.aux_revisao_l USING gist (geom);ALTER TABLE edgv.aux_revisao_l OWNER TO postgres;CREATE TABLE edgv.aux_revisao_p(	 id serial NOT NULL,	 descricao varchar(255),	 subfase_id integer,	 corrigido boolean NOT NULL,	 justificativa varchar(255),	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPoint, 31982),	 CONSTRAINT aux_revisao_p_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX aux_revisao_p_geom ON edgv.aux_revisao_p USING gist (geom);ALTER TABLE edgv.aux_revisao_p OWNER TO postgres;CREATE TABLE edgv.aux_moldura_a(	 id serial NOT NULL,	 nome varchar(255) NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT aux_moldura_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX aux_moldura_a_geom ON edgv.aux_moldura_a USING gist (geom);ALTER TABLE edgv.aux_moldura_a OWNER TO postgres;CREATE TABLE edgv.aux_moldura_area_continua_a(	 id serial NOT NULL,	 nome varchar(255) NOT NULL,	 observacao VARCHAR(255),	 data_modificacao timestamp with time zone,	 controle_uuid VARCHAR(255),	 usuario_criacao VARCHAR(255),	 usuario_atualizacao VARCHAR(255),	 insumo VARCHAR(255),	 data_insumo timestamp with time zone,	 geom geometry(MultiPolygon, 31982),	 CONSTRAINT aux_moldura_area_continua_a_pk PRIMARY KEY (id)	 WITH (FILLFACTOR = 80));CREATE INDEX aux_moldura_area_continua_a_geom ON edgv.aux_moldura_area_continua_a USING gist (geom);ALTER TABLE edgv.aux_moldura_area_continua_a OWNER TO postgres;